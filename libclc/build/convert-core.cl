/* !!!! AUTOGENERATED FILE generated by convert_type.py !!!!!

   DON'T CHANGE THIS FILE. MAKE YOUR CHANGES TO convert_type.py AND RUN:
   $ ./generate-conversion-type-cl.sh

   clc core type conversion functions

   Copyright (c) 2013 Victor Oliveira <victormatheus@gmail.com>
   Copyright (c) 2013 Jesse Towner <jessetowner@lavabit.com>

   Permission is hereby granted, free of charge, to any person obtaining a copy
   of this software and associated documentation files (the "Software"), to deal
   in the Software without restriction, including without limitation the rights
   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   copies of the Software, and to permit persons to whom the Software is
   furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included in
   all copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   THE SOFTWARE.
*/

#include <core/clc_core.h>
#include <spirv/spirv.h>

#ifdef cl_khr_fp16
#pragma OPENCL EXTENSION cl_khr_fp16 : enable
#endif

#ifdef cl_khr_fp64
#pragma OPENCL EXTENSION cl_khr_fp64 : enable

#if defined(__EMBEDDED_PROFILE__) && !defined(cles_khr_int64)
#error Embedded profile that supports cl_khr_fp64 also has to support cles_khr_int64
#endif

#endif

#ifdef cles_khr_int64
#pragma OPENCL EXTENSION cles_khr_int64 : enable
#endif


_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char(char x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2(char2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4(char4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8(char8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16(char16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3(char3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar(char x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2(char2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4(char4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8(char8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16(char16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3(char3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar(char x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2(char2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4(char4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8(char8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16(char16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3(char3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short(char x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2(char2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4(char4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8(char8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16(char16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3(char3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort(char x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2(char2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4(char4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8(char8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16(char16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3(char3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int(char x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2(char2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4(char4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8(char8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16(char16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3(char3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint(char x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2(char2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4(char4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8(char8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16(char16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3(char3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long(char x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2(char2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4(char4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8(char8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16(char16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3(char3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong(char x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2(char2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4(char4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8(char8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16(char16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3(char3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
half __clc_convert_half(char x)
{
  return (half)x;
}

_CLC_DEF _CLC_OVERLOAD
half2 __clc_convert_half2(char2 x)
{
  return (half2)(__clc_convert_half(x.lo), __clc_convert_half(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half4 __clc_convert_half4(char4 x)
{
  return (half4)(__clc_convert_half2(x.lo), __clc_convert_half2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half8 __clc_convert_half8(char8 x)
{
  return (half8)(__clc_convert_half4(x.lo), __clc_convert_half4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half16 __clc_convert_half16(char16 x)
{
  return (half16)(__clc_convert_half8(x.lo), __clc_convert_half8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half3 __clc_convert_half3(char3 x)
{
  return (half3)(__clc_convert_half2(x.s01), __clc_convert_half(x.s2));
}
#endif
_CLC_DEF _CLC_OVERLOAD
float __clc_convert_float(char x)
{
  return (float)x;
}

_CLC_DEF _CLC_OVERLOAD
float2 __clc_convert_float2(char2 x)
{
  return (float2)(__clc_convert_float(x.lo), __clc_convert_float(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float4 __clc_convert_float4(char4 x)
{
  return (float4)(__clc_convert_float2(x.lo), __clc_convert_float2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float8 __clc_convert_float8(char8 x)
{
  return (float8)(__clc_convert_float4(x.lo), __clc_convert_float4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float16 __clc_convert_float16(char16 x)
{
  return (float16)(__clc_convert_float8(x.lo), __clc_convert_float8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float3 __clc_convert_float3(char3 x)
{
  return (float3)(__clc_convert_float2(x.s01), __clc_convert_float(x.s2));
}
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
double __clc_convert_double(char x)
{
  return (double)x;
}

_CLC_DEF _CLC_OVERLOAD
double2 __clc_convert_double2(char2 x)
{
  return (double2)(__clc_convert_double(x.lo), __clc_convert_double(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double4 __clc_convert_double4(char4 x)
{
  return (double4)(__clc_convert_double2(x.lo), __clc_convert_double2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double8 __clc_convert_double8(char8 x)
{
  return (double8)(__clc_convert_double4(x.lo), __clc_convert_double4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double16 __clc_convert_double16(char16 x)
{
  return (double16)(__clc_convert_double8(x.lo), __clc_convert_double8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double3 __clc_convert_double3(char3 x)
{
  return (double3)(__clc_convert_double2(x.s01), __clc_convert_double(x.s2));
}
#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char(schar x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2(schar2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4(schar4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8(schar8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16(schar16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3(schar3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar(schar x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2(schar2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4(schar4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8(schar8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16(schar16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3(schar3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar(schar x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2(schar2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4(schar4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8(schar8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16(schar16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3(schar3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short(schar x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2(schar2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4(schar4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8(schar8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16(schar16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3(schar3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort(schar x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2(schar2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4(schar4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8(schar8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16(schar16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3(schar3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int(schar x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2(schar2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4(schar4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8(schar8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16(schar16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3(schar3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint(schar x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2(schar2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4(schar4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8(schar8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16(schar16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3(schar3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long(schar x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2(schar2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4(schar4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8(schar8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16(schar16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3(schar3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong(schar x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2(schar2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4(schar4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8(schar8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16(schar16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3(schar3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
half __clc_convert_half(schar x)
{
  return (half)x;
}

_CLC_DEF _CLC_OVERLOAD
half2 __clc_convert_half2(schar2 x)
{
  return (half2)(__clc_convert_half(x.lo), __clc_convert_half(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half4 __clc_convert_half4(schar4 x)
{
  return (half4)(__clc_convert_half2(x.lo), __clc_convert_half2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half8 __clc_convert_half8(schar8 x)
{
  return (half8)(__clc_convert_half4(x.lo), __clc_convert_half4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half16 __clc_convert_half16(schar16 x)
{
  return (half16)(__clc_convert_half8(x.lo), __clc_convert_half8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half3 __clc_convert_half3(schar3 x)
{
  return (half3)(__clc_convert_half2(x.s01), __clc_convert_half(x.s2));
}
#endif
_CLC_DEF _CLC_OVERLOAD
float __clc_convert_float(schar x)
{
  return (float)x;
}

_CLC_DEF _CLC_OVERLOAD
float2 __clc_convert_float2(schar2 x)
{
  return (float2)(__clc_convert_float(x.lo), __clc_convert_float(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float4 __clc_convert_float4(schar4 x)
{
  return (float4)(__clc_convert_float2(x.lo), __clc_convert_float2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float8 __clc_convert_float8(schar8 x)
{
  return (float8)(__clc_convert_float4(x.lo), __clc_convert_float4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float16 __clc_convert_float16(schar16 x)
{
  return (float16)(__clc_convert_float8(x.lo), __clc_convert_float8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float3 __clc_convert_float3(schar3 x)
{
  return (float3)(__clc_convert_float2(x.s01), __clc_convert_float(x.s2));
}
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
double __clc_convert_double(schar x)
{
  return (double)x;
}

_CLC_DEF _CLC_OVERLOAD
double2 __clc_convert_double2(schar2 x)
{
  return (double2)(__clc_convert_double(x.lo), __clc_convert_double(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double4 __clc_convert_double4(schar4 x)
{
  return (double4)(__clc_convert_double2(x.lo), __clc_convert_double2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double8 __clc_convert_double8(schar8 x)
{
  return (double8)(__clc_convert_double4(x.lo), __clc_convert_double4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double16 __clc_convert_double16(schar16 x)
{
  return (double16)(__clc_convert_double8(x.lo), __clc_convert_double8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double3 __clc_convert_double3(schar3 x)
{
  return (double3)(__clc_convert_double2(x.s01), __clc_convert_double(x.s2));
}
#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char(uchar x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2(uchar2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4(uchar4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8(uchar8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16(uchar16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3(uchar3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar(uchar x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2(uchar2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4(uchar4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8(uchar8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16(uchar16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3(uchar3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar(uchar x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2(uchar2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4(uchar4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8(uchar8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16(uchar16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3(uchar3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short(uchar x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2(uchar2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4(uchar4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8(uchar8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16(uchar16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3(uchar3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort(uchar x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2(uchar2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4(uchar4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8(uchar8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16(uchar16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3(uchar3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int(uchar x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2(uchar2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4(uchar4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8(uchar8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16(uchar16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3(uchar3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint(uchar x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2(uchar2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4(uchar4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8(uchar8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16(uchar16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3(uchar3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long(uchar x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2(uchar2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4(uchar4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8(uchar8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16(uchar16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3(uchar3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong(uchar x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2(uchar2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4(uchar4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8(uchar8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16(uchar16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3(uchar3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
half __clc_convert_half(uchar x)
{
  return (half)x;
}

_CLC_DEF _CLC_OVERLOAD
half2 __clc_convert_half2(uchar2 x)
{
  return (half2)(__clc_convert_half(x.lo), __clc_convert_half(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half4 __clc_convert_half4(uchar4 x)
{
  return (half4)(__clc_convert_half2(x.lo), __clc_convert_half2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half8 __clc_convert_half8(uchar8 x)
{
  return (half8)(__clc_convert_half4(x.lo), __clc_convert_half4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half16 __clc_convert_half16(uchar16 x)
{
  return (half16)(__clc_convert_half8(x.lo), __clc_convert_half8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half3 __clc_convert_half3(uchar3 x)
{
  return (half3)(__clc_convert_half2(x.s01), __clc_convert_half(x.s2));
}
#endif
_CLC_DEF _CLC_OVERLOAD
float __clc_convert_float(uchar x)
{
  return (float)x;
}

_CLC_DEF _CLC_OVERLOAD
float2 __clc_convert_float2(uchar2 x)
{
  return (float2)(__clc_convert_float(x.lo), __clc_convert_float(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float4 __clc_convert_float4(uchar4 x)
{
  return (float4)(__clc_convert_float2(x.lo), __clc_convert_float2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float8 __clc_convert_float8(uchar8 x)
{
  return (float8)(__clc_convert_float4(x.lo), __clc_convert_float4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float16 __clc_convert_float16(uchar16 x)
{
  return (float16)(__clc_convert_float8(x.lo), __clc_convert_float8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float3 __clc_convert_float3(uchar3 x)
{
  return (float3)(__clc_convert_float2(x.s01), __clc_convert_float(x.s2));
}
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
double __clc_convert_double(uchar x)
{
  return (double)x;
}

_CLC_DEF _CLC_OVERLOAD
double2 __clc_convert_double2(uchar2 x)
{
  return (double2)(__clc_convert_double(x.lo), __clc_convert_double(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double4 __clc_convert_double4(uchar4 x)
{
  return (double4)(__clc_convert_double2(x.lo), __clc_convert_double2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double8 __clc_convert_double8(uchar8 x)
{
  return (double8)(__clc_convert_double4(x.lo), __clc_convert_double4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double16 __clc_convert_double16(uchar16 x)
{
  return (double16)(__clc_convert_double8(x.lo), __clc_convert_double8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double3 __clc_convert_double3(uchar3 x)
{
  return (double3)(__clc_convert_double2(x.s01), __clc_convert_double(x.s2));
}
#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char(short x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2(short2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4(short4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8(short8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16(short16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3(short3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar(short x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2(short2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4(short4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8(short8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16(short16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3(short3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar(short x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2(short2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4(short4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8(short8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16(short16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3(short3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short(short x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2(short2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4(short4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8(short8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16(short16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3(short3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort(short x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2(short2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4(short4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8(short8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16(short16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3(short3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int(short x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2(short2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4(short4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8(short8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16(short16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3(short3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint(short x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2(short2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4(short4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8(short8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16(short16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3(short3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long(short x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2(short2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4(short4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8(short8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16(short16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3(short3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong(short x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2(short2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4(short4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8(short8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16(short16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3(short3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
half __clc_convert_half(short x)
{
  return (half)x;
}

_CLC_DEF _CLC_OVERLOAD
half2 __clc_convert_half2(short2 x)
{
  return (half2)(__clc_convert_half(x.lo), __clc_convert_half(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half4 __clc_convert_half4(short4 x)
{
  return (half4)(__clc_convert_half2(x.lo), __clc_convert_half2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half8 __clc_convert_half8(short8 x)
{
  return (half8)(__clc_convert_half4(x.lo), __clc_convert_half4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half16 __clc_convert_half16(short16 x)
{
  return (half16)(__clc_convert_half8(x.lo), __clc_convert_half8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half3 __clc_convert_half3(short3 x)
{
  return (half3)(__clc_convert_half2(x.s01), __clc_convert_half(x.s2));
}
#endif
_CLC_DEF _CLC_OVERLOAD
float __clc_convert_float(short x)
{
  return (float)x;
}

_CLC_DEF _CLC_OVERLOAD
float2 __clc_convert_float2(short2 x)
{
  return (float2)(__clc_convert_float(x.lo), __clc_convert_float(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float4 __clc_convert_float4(short4 x)
{
  return (float4)(__clc_convert_float2(x.lo), __clc_convert_float2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float8 __clc_convert_float8(short8 x)
{
  return (float8)(__clc_convert_float4(x.lo), __clc_convert_float4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float16 __clc_convert_float16(short16 x)
{
  return (float16)(__clc_convert_float8(x.lo), __clc_convert_float8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float3 __clc_convert_float3(short3 x)
{
  return (float3)(__clc_convert_float2(x.s01), __clc_convert_float(x.s2));
}
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
double __clc_convert_double(short x)
{
  return (double)x;
}

_CLC_DEF _CLC_OVERLOAD
double2 __clc_convert_double2(short2 x)
{
  return (double2)(__clc_convert_double(x.lo), __clc_convert_double(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double4 __clc_convert_double4(short4 x)
{
  return (double4)(__clc_convert_double2(x.lo), __clc_convert_double2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double8 __clc_convert_double8(short8 x)
{
  return (double8)(__clc_convert_double4(x.lo), __clc_convert_double4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double16 __clc_convert_double16(short16 x)
{
  return (double16)(__clc_convert_double8(x.lo), __clc_convert_double8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double3 __clc_convert_double3(short3 x)
{
  return (double3)(__clc_convert_double2(x.s01), __clc_convert_double(x.s2));
}
#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char(ushort x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2(ushort2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4(ushort4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8(ushort8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16(ushort16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3(ushort3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar(ushort x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2(ushort2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4(ushort4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8(ushort8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16(ushort16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3(ushort3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar(ushort x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2(ushort2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4(ushort4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8(ushort8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16(ushort16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3(ushort3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short(ushort x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2(ushort2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4(ushort4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8(ushort8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16(ushort16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3(ushort3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort(ushort x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2(ushort2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4(ushort4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8(ushort8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16(ushort16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3(ushort3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int(ushort x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2(ushort2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4(ushort4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8(ushort8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16(ushort16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3(ushort3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint(ushort x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2(ushort2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4(ushort4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8(ushort8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16(ushort16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3(ushort3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long(ushort x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2(ushort2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4(ushort4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8(ushort8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16(ushort16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3(ushort3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong(ushort x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2(ushort2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4(ushort4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8(ushort8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16(ushort16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3(ushort3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
half __clc_convert_half(ushort x)
{
  return (half)x;
}

_CLC_DEF _CLC_OVERLOAD
half2 __clc_convert_half2(ushort2 x)
{
  return (half2)(__clc_convert_half(x.lo), __clc_convert_half(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half4 __clc_convert_half4(ushort4 x)
{
  return (half4)(__clc_convert_half2(x.lo), __clc_convert_half2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half8 __clc_convert_half8(ushort8 x)
{
  return (half8)(__clc_convert_half4(x.lo), __clc_convert_half4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half16 __clc_convert_half16(ushort16 x)
{
  return (half16)(__clc_convert_half8(x.lo), __clc_convert_half8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half3 __clc_convert_half3(ushort3 x)
{
  return (half3)(__clc_convert_half2(x.s01), __clc_convert_half(x.s2));
}
#endif
_CLC_DEF _CLC_OVERLOAD
float __clc_convert_float(ushort x)
{
  return (float)x;
}

_CLC_DEF _CLC_OVERLOAD
float2 __clc_convert_float2(ushort2 x)
{
  return (float2)(__clc_convert_float(x.lo), __clc_convert_float(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float4 __clc_convert_float4(ushort4 x)
{
  return (float4)(__clc_convert_float2(x.lo), __clc_convert_float2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float8 __clc_convert_float8(ushort8 x)
{
  return (float8)(__clc_convert_float4(x.lo), __clc_convert_float4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float16 __clc_convert_float16(ushort16 x)
{
  return (float16)(__clc_convert_float8(x.lo), __clc_convert_float8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float3 __clc_convert_float3(ushort3 x)
{
  return (float3)(__clc_convert_float2(x.s01), __clc_convert_float(x.s2));
}
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
double __clc_convert_double(ushort x)
{
  return (double)x;
}

_CLC_DEF _CLC_OVERLOAD
double2 __clc_convert_double2(ushort2 x)
{
  return (double2)(__clc_convert_double(x.lo), __clc_convert_double(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double4 __clc_convert_double4(ushort4 x)
{
  return (double4)(__clc_convert_double2(x.lo), __clc_convert_double2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double8 __clc_convert_double8(ushort8 x)
{
  return (double8)(__clc_convert_double4(x.lo), __clc_convert_double4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double16 __clc_convert_double16(ushort16 x)
{
  return (double16)(__clc_convert_double8(x.lo), __clc_convert_double8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double3 __clc_convert_double3(ushort3 x)
{
  return (double3)(__clc_convert_double2(x.s01), __clc_convert_double(x.s2));
}
#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char(int x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2(int2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4(int4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8(int8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16(int16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3(int3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar(int x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2(int2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4(int4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8(int8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16(int16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3(int3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar(int x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2(int2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4(int4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8(int8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16(int16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3(int3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short(int x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2(int2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4(int4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8(int8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16(int16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3(int3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort(int x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2(int2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4(int4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8(int8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16(int16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3(int3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int(int x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2(int2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4(int4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8(int8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16(int16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3(int3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint(int x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2(int2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4(int4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8(int8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16(int16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3(int3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long(int x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2(int2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4(int4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8(int8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16(int16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3(int3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong(int x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2(int2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4(int4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8(int8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16(int16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3(int3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
half __clc_convert_half(int x)
{
  return (half)x;
}

_CLC_DEF _CLC_OVERLOAD
half2 __clc_convert_half2(int2 x)
{
  return (half2)(__clc_convert_half(x.lo), __clc_convert_half(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half4 __clc_convert_half4(int4 x)
{
  return (half4)(__clc_convert_half2(x.lo), __clc_convert_half2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half8 __clc_convert_half8(int8 x)
{
  return (half8)(__clc_convert_half4(x.lo), __clc_convert_half4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half16 __clc_convert_half16(int16 x)
{
  return (half16)(__clc_convert_half8(x.lo), __clc_convert_half8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half3 __clc_convert_half3(int3 x)
{
  return (half3)(__clc_convert_half2(x.s01), __clc_convert_half(x.s2));
}
#endif
_CLC_DEF _CLC_OVERLOAD
float __clc_convert_float(int x)
{
  return (float)x;
}

_CLC_DEF _CLC_OVERLOAD
float2 __clc_convert_float2(int2 x)
{
  return (float2)(__clc_convert_float(x.lo), __clc_convert_float(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float4 __clc_convert_float4(int4 x)
{
  return (float4)(__clc_convert_float2(x.lo), __clc_convert_float2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float8 __clc_convert_float8(int8 x)
{
  return (float8)(__clc_convert_float4(x.lo), __clc_convert_float4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float16 __clc_convert_float16(int16 x)
{
  return (float16)(__clc_convert_float8(x.lo), __clc_convert_float8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float3 __clc_convert_float3(int3 x)
{
  return (float3)(__clc_convert_float2(x.s01), __clc_convert_float(x.s2));
}
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
double __clc_convert_double(int x)
{
  return (double)x;
}

_CLC_DEF _CLC_OVERLOAD
double2 __clc_convert_double2(int2 x)
{
  return (double2)(__clc_convert_double(x.lo), __clc_convert_double(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double4 __clc_convert_double4(int4 x)
{
  return (double4)(__clc_convert_double2(x.lo), __clc_convert_double2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double8 __clc_convert_double8(int8 x)
{
  return (double8)(__clc_convert_double4(x.lo), __clc_convert_double4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double16 __clc_convert_double16(int16 x)
{
  return (double16)(__clc_convert_double8(x.lo), __clc_convert_double8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double3 __clc_convert_double3(int3 x)
{
  return (double3)(__clc_convert_double2(x.s01), __clc_convert_double(x.s2));
}
#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char(uint x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2(uint2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4(uint4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8(uint8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16(uint16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3(uint3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar(uint x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2(uint2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4(uint4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8(uint8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16(uint16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3(uint3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar(uint x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2(uint2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4(uint4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8(uint8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16(uint16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3(uint3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short(uint x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2(uint2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4(uint4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8(uint8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16(uint16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3(uint3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort(uint x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2(uint2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4(uint4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8(uint8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16(uint16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3(uint3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int(uint x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2(uint2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4(uint4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8(uint8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16(uint16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3(uint3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint(uint x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2(uint2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4(uint4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8(uint8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16(uint16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3(uint3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long(uint x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2(uint2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4(uint4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8(uint8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16(uint16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3(uint3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong(uint x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2(uint2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4(uint4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8(uint8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16(uint16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3(uint3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
half __clc_convert_half(uint x)
{
  return (half)x;
}

_CLC_DEF _CLC_OVERLOAD
half2 __clc_convert_half2(uint2 x)
{
  return (half2)(__clc_convert_half(x.lo), __clc_convert_half(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half4 __clc_convert_half4(uint4 x)
{
  return (half4)(__clc_convert_half2(x.lo), __clc_convert_half2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half8 __clc_convert_half8(uint8 x)
{
  return (half8)(__clc_convert_half4(x.lo), __clc_convert_half4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half16 __clc_convert_half16(uint16 x)
{
  return (half16)(__clc_convert_half8(x.lo), __clc_convert_half8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half3 __clc_convert_half3(uint3 x)
{
  return (half3)(__clc_convert_half2(x.s01), __clc_convert_half(x.s2));
}
#endif
_CLC_DEF _CLC_OVERLOAD
float __clc_convert_float(uint x)
{
  return (float)x;
}

_CLC_DEF _CLC_OVERLOAD
float2 __clc_convert_float2(uint2 x)
{
  return (float2)(__clc_convert_float(x.lo), __clc_convert_float(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float4 __clc_convert_float4(uint4 x)
{
  return (float4)(__clc_convert_float2(x.lo), __clc_convert_float2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float8 __clc_convert_float8(uint8 x)
{
  return (float8)(__clc_convert_float4(x.lo), __clc_convert_float4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float16 __clc_convert_float16(uint16 x)
{
  return (float16)(__clc_convert_float8(x.lo), __clc_convert_float8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float3 __clc_convert_float3(uint3 x)
{
  return (float3)(__clc_convert_float2(x.s01), __clc_convert_float(x.s2));
}
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
double __clc_convert_double(uint x)
{
  return (double)x;
}

_CLC_DEF _CLC_OVERLOAD
double2 __clc_convert_double2(uint2 x)
{
  return (double2)(__clc_convert_double(x.lo), __clc_convert_double(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double4 __clc_convert_double4(uint4 x)
{
  return (double4)(__clc_convert_double2(x.lo), __clc_convert_double2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double8 __clc_convert_double8(uint8 x)
{
  return (double8)(__clc_convert_double4(x.lo), __clc_convert_double4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double16 __clc_convert_double16(uint16 x)
{
  return (double16)(__clc_convert_double8(x.lo), __clc_convert_double8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double3 __clc_convert_double3(uint3 x)
{
  return (double3)(__clc_convert_double2(x.s01), __clc_convert_double(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char(long x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2(long2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4(long4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8(long8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16(long16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3(long3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar(long x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2(long2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4(long4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8(long8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16(long16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3(long3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar(long x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2(long2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4(long4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8(long8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16(long16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3(long3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short(long x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2(long2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4(long4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8(long8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16(long16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3(long3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort(long x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2(long2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4(long4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8(long8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16(long16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3(long3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int(long x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2(long2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4(long4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8(long8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16(long16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3(long3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint(long x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2(long2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4(long4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8(long8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16(long16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3(long3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long(long x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2(long2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4(long4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8(long8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16(long16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3(long3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong(long x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2(long2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4(long4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8(long8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16(long16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3(long3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
half __clc_convert_half(long x)
{
  return (half)x;
}

_CLC_DEF _CLC_OVERLOAD
half2 __clc_convert_half2(long2 x)
{
  return (half2)(__clc_convert_half(x.lo), __clc_convert_half(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half4 __clc_convert_half4(long4 x)
{
  return (half4)(__clc_convert_half2(x.lo), __clc_convert_half2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half8 __clc_convert_half8(long8 x)
{
  return (half8)(__clc_convert_half4(x.lo), __clc_convert_half4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half16 __clc_convert_half16(long16 x)
{
  return (half16)(__clc_convert_half8(x.lo), __clc_convert_half8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half3 __clc_convert_half3(long3 x)
{
  return (half3)(__clc_convert_half2(x.s01), __clc_convert_half(x.s2));
}
#endif
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
float __clc_convert_float(long x)
{
  return (float)x;
}

_CLC_DEF _CLC_OVERLOAD
float2 __clc_convert_float2(long2 x)
{
  return (float2)(__clc_convert_float(x.lo), __clc_convert_float(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float4 __clc_convert_float4(long4 x)
{
  return (float4)(__clc_convert_float2(x.lo), __clc_convert_float2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float8 __clc_convert_float8(long8 x)
{
  return (float8)(__clc_convert_float4(x.lo), __clc_convert_float4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float16 __clc_convert_float16(long16 x)
{
  return (float16)(__clc_convert_float8(x.lo), __clc_convert_float8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float3 __clc_convert_float3(long3 x)
{
  return (float3)(__clc_convert_float2(x.s01), __clc_convert_float(x.s2));
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
double __clc_convert_double(long x)
{
  return (double)x;
}

_CLC_DEF _CLC_OVERLOAD
double2 __clc_convert_double2(long2 x)
{
  return (double2)(__clc_convert_double(x.lo), __clc_convert_double(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double4 __clc_convert_double4(long4 x)
{
  return (double4)(__clc_convert_double2(x.lo), __clc_convert_double2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double8 __clc_convert_double8(long8 x)
{
  return (double8)(__clc_convert_double4(x.lo), __clc_convert_double4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double16 __clc_convert_double16(long16 x)
{
  return (double16)(__clc_convert_double8(x.lo), __clc_convert_double8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double3 __clc_convert_double3(long3 x)
{
  return (double3)(__clc_convert_double2(x.s01), __clc_convert_double(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char(ulong x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2(ulong2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4(ulong4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8(ulong8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16(ulong16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3(ulong3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar(ulong x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2(ulong2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4(ulong4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8(ulong8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16(ulong16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3(ulong3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar(ulong x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2(ulong2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4(ulong4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8(ulong8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16(ulong16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3(ulong3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short(ulong x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2(ulong2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4(ulong4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8(ulong8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16(ulong16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3(ulong3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort(ulong x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2(ulong2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4(ulong4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8(ulong8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16(ulong16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3(ulong3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int(ulong x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2(ulong2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4(ulong4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8(ulong8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16(ulong16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3(ulong3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint(ulong x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2(ulong2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4(ulong4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8(ulong8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16(ulong16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3(ulong3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long(ulong x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2(ulong2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4(ulong4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8(ulong8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16(ulong16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3(ulong3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong(ulong x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2(ulong2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4(ulong4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8(ulong8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16(ulong16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3(ulong3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
half __clc_convert_half(ulong x)
{
  return (half)x;
}

_CLC_DEF _CLC_OVERLOAD
half2 __clc_convert_half2(ulong2 x)
{
  return (half2)(__clc_convert_half(x.lo), __clc_convert_half(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half4 __clc_convert_half4(ulong4 x)
{
  return (half4)(__clc_convert_half2(x.lo), __clc_convert_half2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half8 __clc_convert_half8(ulong8 x)
{
  return (half8)(__clc_convert_half4(x.lo), __clc_convert_half4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half16 __clc_convert_half16(ulong16 x)
{
  return (half16)(__clc_convert_half8(x.lo), __clc_convert_half8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half3 __clc_convert_half3(ulong3 x)
{
  return (half3)(__clc_convert_half2(x.s01), __clc_convert_half(x.s2));
}
#endif
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
float __clc_convert_float(ulong x)
{
  return (float)x;
}

_CLC_DEF _CLC_OVERLOAD
float2 __clc_convert_float2(ulong2 x)
{
  return (float2)(__clc_convert_float(x.lo), __clc_convert_float(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float4 __clc_convert_float4(ulong4 x)
{
  return (float4)(__clc_convert_float2(x.lo), __clc_convert_float2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float8 __clc_convert_float8(ulong8 x)
{
  return (float8)(__clc_convert_float4(x.lo), __clc_convert_float4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float16 __clc_convert_float16(ulong16 x)
{
  return (float16)(__clc_convert_float8(x.lo), __clc_convert_float8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float3 __clc_convert_float3(ulong3 x)
{
  return (float3)(__clc_convert_float2(x.s01), __clc_convert_float(x.s2));
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
double __clc_convert_double(ulong x)
{
  return (double)x;
}

_CLC_DEF _CLC_OVERLOAD
double2 __clc_convert_double2(ulong2 x)
{
  return (double2)(__clc_convert_double(x.lo), __clc_convert_double(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double4 __clc_convert_double4(ulong4 x)
{
  return (double4)(__clc_convert_double2(x.lo), __clc_convert_double2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double8 __clc_convert_double8(ulong8 x)
{
  return (double8)(__clc_convert_double4(x.lo), __clc_convert_double4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double16 __clc_convert_double16(ulong16 x)
{
  return (double16)(__clc_convert_double8(x.lo), __clc_convert_double8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double3 __clc_convert_double3(ulong3 x)
{
  return (double3)(__clc_convert_double2(x.s01), __clc_convert_double(x.s2));
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char(half x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2(half2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4(half4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8(half8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16(half16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3(half3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar(half x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2(half2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4(half4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8(half8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16(half16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3(half3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar(half x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2(half2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4(half4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8(half8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16(half16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3(half3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short(half x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2(half2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4(half4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8(half8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16(half16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3(half3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort(half x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2(half2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4(half4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8(half8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16(half16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3(half3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int(half x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2(half2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4(half4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8(half8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16(half16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3(half3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint(half x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2(half2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4(half4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8(half8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16(half16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3(half3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long(half x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2(half2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4(half4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8(half8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16(half16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3(half3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong(half x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2(half2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4(half4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8(half8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16(half16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3(half3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
half __clc_convert_half(half x)
{
  return (half)x;
}

_CLC_DEF _CLC_OVERLOAD
half2 __clc_convert_half2(half2 x)
{
  return (half2)(__clc_convert_half(x.lo), __clc_convert_half(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half4 __clc_convert_half4(half4 x)
{
  return (half4)(__clc_convert_half2(x.lo), __clc_convert_half2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half8 __clc_convert_half8(half8 x)
{
  return (half8)(__clc_convert_half4(x.lo), __clc_convert_half4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half16 __clc_convert_half16(half16 x)
{
  return (half16)(__clc_convert_half8(x.lo), __clc_convert_half8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half3 __clc_convert_half3(half3 x)
{
  return (half3)(__clc_convert_half2(x.s01), __clc_convert_half(x.s2));
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
float __clc_convert_float(half x)
{
  return (float)x;
}

_CLC_DEF _CLC_OVERLOAD
float2 __clc_convert_float2(half2 x)
{
  return (float2)(__clc_convert_float(x.lo), __clc_convert_float(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float4 __clc_convert_float4(half4 x)
{
  return (float4)(__clc_convert_float2(x.lo), __clc_convert_float2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float8 __clc_convert_float8(half8 x)
{
  return (float8)(__clc_convert_float4(x.lo), __clc_convert_float4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float16 __clc_convert_float16(half16 x)
{
  return (float16)(__clc_convert_float8(x.lo), __clc_convert_float8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float3 __clc_convert_float3(half3 x)
{
  return (float3)(__clc_convert_float2(x.s01), __clc_convert_float(x.s2));
}
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
double __clc_convert_double(half x)
{
  return (double)x;
}

_CLC_DEF _CLC_OVERLOAD
double2 __clc_convert_double2(half2 x)
{
  return (double2)(__clc_convert_double(x.lo), __clc_convert_double(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double4 __clc_convert_double4(half4 x)
{
  return (double4)(__clc_convert_double2(x.lo), __clc_convert_double2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double8 __clc_convert_double8(half8 x)
{
  return (double8)(__clc_convert_double4(x.lo), __clc_convert_double4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double16 __clc_convert_double16(half16 x)
{
  return (double16)(__clc_convert_double8(x.lo), __clc_convert_double8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double3 __clc_convert_double3(half3 x)
{
  return (double3)(__clc_convert_double2(x.s01), __clc_convert_double(x.s2));
}
#endif
#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char(float x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2(float2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4(float4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8(float8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16(float16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3(float3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar(float x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2(float2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4(float4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8(float8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16(float16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3(float3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar(float x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2(float2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4(float4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8(float8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16(float16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3(float3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short(float x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2(float2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4(float4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8(float8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16(float16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3(float3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort(float x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2(float2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4(float4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8(float8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16(float16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3(float3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int(float x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2(float2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4(float4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8(float8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16(float16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3(float3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint(float x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2(float2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4(float4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8(float8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16(float16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3(float3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long(float x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2(float2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4(float4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8(float8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16(float16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3(float3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong(float x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2(float2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4(float4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8(float8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16(float16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3(float3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
half __clc_convert_half(float x)
{
  return (half)x;
}

_CLC_DEF _CLC_OVERLOAD
half2 __clc_convert_half2(float2 x)
{
  return (half2)(__clc_convert_half(x.lo), __clc_convert_half(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half4 __clc_convert_half4(float4 x)
{
  return (half4)(__clc_convert_half2(x.lo), __clc_convert_half2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half8 __clc_convert_half8(float8 x)
{
  return (half8)(__clc_convert_half4(x.lo), __clc_convert_half4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half16 __clc_convert_half16(float16 x)
{
  return (half16)(__clc_convert_half8(x.lo), __clc_convert_half8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half3 __clc_convert_half3(float3 x)
{
  return (half3)(__clc_convert_half2(x.s01), __clc_convert_half(x.s2));
}
#endif
_CLC_DEF _CLC_OVERLOAD
float __clc_convert_float(float x)
{
  return (float)x;
}

_CLC_DEF _CLC_OVERLOAD
float2 __clc_convert_float2(float2 x)
{
  return (float2)(__clc_convert_float(x.lo), __clc_convert_float(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float4 __clc_convert_float4(float4 x)
{
  return (float4)(__clc_convert_float2(x.lo), __clc_convert_float2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float8 __clc_convert_float8(float8 x)
{
  return (float8)(__clc_convert_float4(x.lo), __clc_convert_float4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float16 __clc_convert_float16(float16 x)
{
  return (float16)(__clc_convert_float8(x.lo), __clc_convert_float8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float3 __clc_convert_float3(float3 x)
{
  return (float3)(__clc_convert_float2(x.s01), __clc_convert_float(x.s2));
}
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
double __clc_convert_double(float x)
{
  return (double)x;
}

_CLC_DEF _CLC_OVERLOAD
double2 __clc_convert_double2(float2 x)
{
  return (double2)(__clc_convert_double(x.lo), __clc_convert_double(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double4 __clc_convert_double4(float4 x)
{
  return (double4)(__clc_convert_double2(x.lo), __clc_convert_double2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double8 __clc_convert_double8(float8 x)
{
  return (double8)(__clc_convert_double4(x.lo), __clc_convert_double4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double16 __clc_convert_double16(float16 x)
{
  return (double16)(__clc_convert_double8(x.lo), __clc_convert_double8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double3 __clc_convert_double3(float3 x)
{
  return (double3)(__clc_convert_double2(x.s01), __clc_convert_double(x.s2));
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char(double x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2(double2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4(double4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8(double8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16(double16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3(double3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar(double x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2(double2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4(double4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8(double8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16(double16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3(double3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar(double x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2(double2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4(double4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8(double8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16(double16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3(double3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short(double x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2(double2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4(double4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8(double8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16(double16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3(double3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort(double x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2(double2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4(double4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8(double8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16(double16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3(double3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int(double x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2(double2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4(double4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8(double8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16(double16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3(double3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint(double x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2(double2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4(double4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8(double8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16(double16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3(double3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long(double x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2(double2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4(double4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8(double8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16(double16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3(double3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong(double x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2(double2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4(double4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8(double8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16(double16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3(double3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
half __clc_convert_half(double x)
{
  return (half)x;
}

_CLC_DEF _CLC_OVERLOAD
half2 __clc_convert_half2(double2 x)
{
  return (half2)(__clc_convert_half(x.lo), __clc_convert_half(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half4 __clc_convert_half4(double4 x)
{
  return (half4)(__clc_convert_half2(x.lo), __clc_convert_half2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half8 __clc_convert_half8(double8 x)
{
  return (half8)(__clc_convert_half4(x.lo), __clc_convert_half4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half16 __clc_convert_half16(double16 x)
{
  return (half16)(__clc_convert_half8(x.lo), __clc_convert_half8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
half3 __clc_convert_half3(double3 x)
{
  return (half3)(__clc_convert_half2(x.s01), __clc_convert_half(x.s2));
}
#endif
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
float __clc_convert_float(double x)
{
  return (float)x;
}

_CLC_DEF _CLC_OVERLOAD
float2 __clc_convert_float2(double2 x)
{
  return (float2)(__clc_convert_float(x.lo), __clc_convert_float(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float4 __clc_convert_float4(double4 x)
{
  return (float4)(__clc_convert_float2(x.lo), __clc_convert_float2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float8 __clc_convert_float8(double8 x)
{
  return (float8)(__clc_convert_float4(x.lo), __clc_convert_float4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float16 __clc_convert_float16(double16 x)
{
  return (float16)(__clc_convert_float8(x.lo), __clc_convert_float8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
float3 __clc_convert_float3(double3 x)
{
  return (float3)(__clc_convert_float2(x.s01), __clc_convert_float(x.s2));
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
double __clc_convert_double(double x)
{
  return (double)x;
}

_CLC_DEF _CLC_OVERLOAD
double2 __clc_convert_double2(double2 x)
{
  return (double2)(__clc_convert_double(x.lo), __clc_convert_double(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double4 __clc_convert_double4(double4 x)
{
  return (double4)(__clc_convert_double2(x.lo), __clc_convert_double2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double8 __clc_convert_double8(double8 x)
{
  return (double8)(__clc_convert_double4(x.lo), __clc_convert_double4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double16 __clc_convert_double16(double16 x)
{
  return (double16)(__clc_convert_double8(x.lo), __clc_convert_double8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
double3 __clc_convert_double3(double3 x)
{
  return (double3)(__clc_convert_double2(x.s01), __clc_convert_double(x.s2));
}
#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtz(char x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtz(char2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtz(char4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtz(char8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtz(char16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtz(char3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rte(char x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rte(char2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rte(char4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rte(char8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rte(char16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rte(char3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtp(char x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtp(char2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtp(char4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtp(char8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtp(char16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtp(char3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtn(char x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtn(char2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtn(char4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtn(char8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtn(char16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtn(char3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtz(char x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtz(char2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtz(char4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtz(char8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtz(char16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtz(char3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rte(char x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rte(char2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rte(char4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rte(char8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rte(char16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rte(char3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtp(char x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtp(char2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtp(char4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtp(char8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtp(char16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtp(char3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtn(char x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtn(char2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtn(char4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtn(char8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtn(char16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtn(char3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtz(char x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtz(char2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtz(char4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtz(char8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtz(char16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtz(char3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rte(char x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rte(char2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rte(char4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rte(char8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rte(char16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rte(char3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtp(char x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtp(char2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtp(char4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtp(char8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtp(char16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtp(char3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtn(char x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtn(char2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtn(char4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtn(char8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtn(char16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtn(char3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtz(char x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtz(char2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtz(char4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtz(char8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtz(char16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtz(char3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rte(char x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rte(char2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rte(char4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rte(char8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rte(char16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rte(char3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtp(char x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtp(char2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtp(char4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtp(char8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtp(char16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtp(char3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtn(char x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtn(char2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtn(char4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtn(char8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtn(char16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtn(char3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtz(char x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtz(char2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtz(char4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtz(char8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtz(char16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtz(char3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rte(char x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rte(char2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rte(char4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rte(char8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rte(char16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rte(char3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtp(char x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtp(char2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtp(char4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtp(char8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtp(char16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtp(char3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtn(char x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtn(char2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtn(char4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtn(char8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtn(char16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtn(char3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtz(char x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtz(char2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtz(char4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtz(char8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtz(char16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtz(char3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rte(char x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rte(char2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rte(char4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rte(char8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rte(char16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rte(char3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtp(char x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtp(char2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtp(char4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtp(char8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtp(char16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtp(char3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtn(char x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtn(char2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtn(char4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtn(char8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtn(char16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtn(char3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtz(char x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtz(char2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtz(char4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtz(char8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtz(char16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtz(char3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rte(char x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rte(char2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rte(char4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rte(char8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rte(char16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rte(char3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtp(char x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtp(char2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtp(char4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtp(char8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtp(char16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtp(char3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtn(char x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtn(char2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtn(char4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtn(char8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtn(char16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtn(char3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtz(char x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtz(char2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtz(char4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtz(char8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtz(char16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtz(char3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rte(char x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rte(char2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rte(char4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rte(char8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rte(char16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rte(char3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtp(char x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtp(char2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtp(char4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtp(char8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtp(char16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtp(char3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtn(char x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtn(char2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtn(char4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtn(char8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtn(char16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtn(char3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtz(char x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtz(char2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtz(char4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtz(char8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtz(char16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtz(char3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rte(char x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rte(char2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rte(char4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rte(char8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rte(char16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rte(char3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtp(char x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtp(char2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtp(char4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtp(char8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtp(char16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtp(char3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtn(char x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtn(char2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtn(char4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtn(char8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtn(char16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtn(char3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtz(schar x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtz(schar2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtz(schar4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtz(schar8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtz(schar16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtz(schar3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rte(schar x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rte(schar2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rte(schar4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rte(schar8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rte(schar16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rte(schar3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtp(schar x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtp(schar2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtp(schar4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtp(schar8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtp(schar16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtp(schar3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtn(schar x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtn(schar2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtn(schar4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtn(schar8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtn(schar16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtn(schar3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtz(schar x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtz(schar2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtz(schar4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtz(schar8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtz(schar16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtz(schar3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rte(schar x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rte(schar2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rte(schar4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rte(schar8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rte(schar16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rte(schar3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtp(schar x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtp(schar2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtp(schar4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtp(schar8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtp(schar16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtp(schar3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtn(schar x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtn(schar2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtn(schar4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtn(schar8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtn(schar16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtn(schar3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtz(schar x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtz(schar2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtz(schar4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtz(schar8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtz(schar16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtz(schar3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rte(schar x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rte(schar2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rte(schar4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rte(schar8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rte(schar16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rte(schar3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtp(schar x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtp(schar2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtp(schar4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtp(schar8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtp(schar16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtp(schar3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtn(schar x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtn(schar2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtn(schar4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtn(schar8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtn(schar16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtn(schar3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtz(schar x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtz(schar2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtz(schar4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtz(schar8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtz(schar16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtz(schar3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rte(schar x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rte(schar2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rte(schar4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rte(schar8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rte(schar16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rte(schar3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtp(schar x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtp(schar2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtp(schar4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtp(schar8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtp(schar16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtp(schar3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtn(schar x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtn(schar2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtn(schar4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtn(schar8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtn(schar16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtn(schar3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtz(schar x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtz(schar2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtz(schar4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtz(schar8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtz(schar16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtz(schar3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rte(schar x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rte(schar2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rte(schar4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rte(schar8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rte(schar16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rte(schar3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtp(schar x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtp(schar2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtp(schar4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtp(schar8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtp(schar16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtp(schar3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtn(schar x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtn(schar2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtn(schar4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtn(schar8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtn(schar16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtn(schar3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtz(schar x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtz(schar2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtz(schar4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtz(schar8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtz(schar16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtz(schar3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rte(schar x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rte(schar2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rte(schar4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rte(schar8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rte(schar16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rte(schar3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtp(schar x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtp(schar2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtp(schar4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtp(schar8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtp(schar16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtp(schar3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtn(schar x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtn(schar2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtn(schar4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtn(schar8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtn(schar16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtn(schar3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtz(schar x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtz(schar2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtz(schar4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtz(schar8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtz(schar16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtz(schar3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rte(schar x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rte(schar2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rte(schar4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rte(schar8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rte(schar16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rte(schar3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtp(schar x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtp(schar2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtp(schar4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtp(schar8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtp(schar16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtp(schar3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtn(schar x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtn(schar2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtn(schar4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtn(schar8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtn(schar16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtn(schar3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtz(schar x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtz(schar2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtz(schar4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtz(schar8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtz(schar16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtz(schar3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rte(schar x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rte(schar2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rte(schar4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rte(schar8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rte(schar16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rte(schar3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtp(schar x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtp(schar2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtp(schar4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtp(schar8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtp(schar16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtp(schar3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtn(schar x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtn(schar2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtn(schar4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtn(schar8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtn(schar16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtn(schar3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtz(schar x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtz(schar2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtz(schar4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtz(schar8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtz(schar16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtz(schar3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rte(schar x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rte(schar2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rte(schar4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rte(schar8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rte(schar16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rte(schar3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtp(schar x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtp(schar2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtp(schar4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtp(schar8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtp(schar16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtp(schar3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtn(schar x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtn(schar2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtn(schar4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtn(schar8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtn(schar16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtn(schar3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtz(uchar x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtz(uchar2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtz(uchar4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtz(uchar8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtz(uchar16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtz(uchar3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rte(uchar x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rte(uchar2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rte(uchar4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rte(uchar8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rte(uchar16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rte(uchar3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtp(uchar x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtp(uchar2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtp(uchar4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtp(uchar8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtp(uchar16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtp(uchar3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtn(uchar x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtn(uchar2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtn(uchar4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtn(uchar8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtn(uchar16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtn(uchar3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtz(uchar x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtz(uchar2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtz(uchar4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtz(uchar8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtz(uchar16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtz(uchar3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rte(uchar x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rte(uchar2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rte(uchar4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rte(uchar8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rte(uchar16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rte(uchar3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtp(uchar x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtp(uchar2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtp(uchar4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtp(uchar8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtp(uchar16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtp(uchar3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtn(uchar x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtn(uchar2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtn(uchar4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtn(uchar8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtn(uchar16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtn(uchar3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtz(uchar x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtz(uchar2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtz(uchar4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtz(uchar8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtz(uchar16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtz(uchar3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rte(uchar x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rte(uchar2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rte(uchar4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rte(uchar8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rte(uchar16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rte(uchar3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtp(uchar x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtp(uchar2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtp(uchar4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtp(uchar8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtp(uchar16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtp(uchar3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtn(uchar x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtn(uchar2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtn(uchar4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtn(uchar8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtn(uchar16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtn(uchar3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtz(uchar x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtz(uchar2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtz(uchar4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtz(uchar8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtz(uchar16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtz(uchar3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rte(uchar x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rte(uchar2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rte(uchar4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rte(uchar8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rte(uchar16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rte(uchar3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtp(uchar x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtp(uchar2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtp(uchar4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtp(uchar8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtp(uchar16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtp(uchar3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtn(uchar x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtn(uchar2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtn(uchar4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtn(uchar8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtn(uchar16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtn(uchar3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtz(uchar x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtz(uchar2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtz(uchar4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtz(uchar8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtz(uchar16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtz(uchar3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rte(uchar x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rte(uchar2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rte(uchar4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rte(uchar8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rte(uchar16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rte(uchar3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtp(uchar x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtp(uchar2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtp(uchar4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtp(uchar8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtp(uchar16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtp(uchar3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtn(uchar x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtn(uchar2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtn(uchar4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtn(uchar8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtn(uchar16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtn(uchar3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtz(uchar x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtz(uchar2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtz(uchar4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtz(uchar8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtz(uchar16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtz(uchar3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rte(uchar x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rte(uchar2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rte(uchar4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rte(uchar8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rte(uchar16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rte(uchar3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtp(uchar x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtp(uchar2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtp(uchar4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtp(uchar8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtp(uchar16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtp(uchar3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtn(uchar x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtn(uchar2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtn(uchar4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtn(uchar8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtn(uchar16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtn(uchar3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtz(uchar x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtz(uchar2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtz(uchar4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtz(uchar8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtz(uchar16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtz(uchar3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rte(uchar x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rte(uchar2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rte(uchar4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rte(uchar8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rte(uchar16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rte(uchar3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtp(uchar x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtp(uchar2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtp(uchar4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtp(uchar8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtp(uchar16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtp(uchar3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtn(uchar x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtn(uchar2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtn(uchar4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtn(uchar8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtn(uchar16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtn(uchar3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtz(uchar x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtz(uchar2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtz(uchar4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtz(uchar8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtz(uchar16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtz(uchar3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rte(uchar x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rte(uchar2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rte(uchar4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rte(uchar8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rte(uchar16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rte(uchar3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtp(uchar x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtp(uchar2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtp(uchar4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtp(uchar8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtp(uchar16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtp(uchar3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtn(uchar x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtn(uchar2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtn(uchar4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtn(uchar8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtn(uchar16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtn(uchar3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtz(uchar x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtz(uchar2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtz(uchar4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtz(uchar8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtz(uchar16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtz(uchar3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rte(uchar x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rte(uchar2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rte(uchar4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rte(uchar8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rte(uchar16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rte(uchar3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtp(uchar x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtp(uchar2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtp(uchar4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtp(uchar8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtp(uchar16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtp(uchar3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtn(uchar x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtn(uchar2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtn(uchar4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtn(uchar8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtn(uchar16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtn(uchar3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtz(short x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtz(short2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtz(short4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtz(short8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtz(short16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtz(short3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rte(short x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rte(short2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rte(short4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rte(short8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rte(short16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rte(short3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtp(short x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtp(short2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtp(short4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtp(short8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtp(short16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtp(short3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtn(short x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtn(short2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtn(short4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtn(short8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtn(short16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtn(short3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtz(short x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtz(short2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtz(short4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtz(short8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtz(short16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtz(short3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rte(short x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rte(short2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rte(short4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rte(short8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rte(short16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rte(short3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtp(short x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtp(short2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtp(short4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtp(short8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtp(short16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtp(short3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtn(short x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtn(short2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtn(short4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtn(short8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtn(short16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtn(short3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtz(short x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtz(short2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtz(short4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtz(short8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtz(short16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtz(short3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rte(short x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rte(short2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rte(short4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rte(short8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rte(short16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rte(short3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtp(short x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtp(short2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtp(short4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtp(short8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtp(short16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtp(short3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtn(short x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtn(short2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtn(short4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtn(short8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtn(short16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtn(short3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtz(short x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtz(short2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtz(short4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtz(short8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtz(short16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtz(short3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rte(short x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rte(short2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rte(short4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rte(short8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rte(short16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rte(short3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtp(short x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtp(short2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtp(short4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtp(short8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtp(short16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtp(short3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtn(short x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtn(short2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtn(short4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtn(short8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtn(short16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtn(short3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtz(short x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtz(short2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtz(short4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtz(short8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtz(short16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtz(short3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rte(short x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rte(short2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rte(short4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rte(short8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rte(short16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rte(short3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtp(short x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtp(short2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtp(short4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtp(short8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtp(short16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtp(short3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtn(short x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtn(short2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtn(short4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtn(short8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtn(short16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtn(short3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtz(short x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtz(short2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtz(short4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtz(short8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtz(short16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtz(short3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rte(short x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rte(short2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rte(short4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rte(short8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rte(short16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rte(short3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtp(short x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtp(short2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtp(short4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtp(short8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtp(short16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtp(short3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtn(short x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtn(short2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtn(short4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtn(short8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtn(short16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtn(short3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtz(short x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtz(short2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtz(short4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtz(short8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtz(short16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtz(short3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rte(short x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rte(short2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rte(short4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rte(short8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rte(short16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rte(short3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtp(short x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtp(short2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtp(short4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtp(short8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtp(short16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtp(short3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtn(short x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtn(short2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtn(short4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtn(short8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtn(short16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtn(short3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtz(short x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtz(short2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtz(short4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtz(short8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtz(short16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtz(short3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rte(short x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rte(short2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rte(short4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rte(short8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rte(short16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rte(short3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtp(short x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtp(short2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtp(short4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtp(short8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtp(short16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtp(short3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtn(short x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtn(short2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtn(short4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtn(short8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtn(short16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtn(short3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtz(short x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtz(short2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtz(short4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtz(short8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtz(short16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtz(short3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rte(short x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rte(short2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rte(short4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rte(short8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rte(short16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rte(short3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtp(short x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtp(short2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtp(short4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtp(short8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtp(short16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtp(short3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtn(short x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtn(short2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtn(short4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtn(short8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtn(short16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtn(short3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtz(ushort x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtz(ushort2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtz(ushort4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtz(ushort8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtz(ushort16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtz(ushort3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rte(ushort x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rte(ushort2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rte(ushort4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rte(ushort8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rte(ushort16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rte(ushort3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtp(ushort x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtp(ushort2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtp(ushort4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtp(ushort8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtp(ushort16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtp(ushort3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtn(ushort x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtn(ushort2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtn(ushort4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtn(ushort8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtn(ushort16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtn(ushort3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtz(ushort x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtz(ushort2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtz(ushort4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtz(ushort8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtz(ushort16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtz(ushort3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rte(ushort x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rte(ushort2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rte(ushort4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rte(ushort8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rte(ushort16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rte(ushort3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtp(ushort x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtp(ushort2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtp(ushort4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtp(ushort8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtp(ushort16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtp(ushort3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtn(ushort x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtn(ushort2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtn(ushort4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtn(ushort8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtn(ushort16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtn(ushort3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtz(ushort x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtz(ushort2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtz(ushort4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtz(ushort8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtz(ushort16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtz(ushort3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rte(ushort x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rte(ushort2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rte(ushort4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rte(ushort8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rte(ushort16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rte(ushort3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtp(ushort x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtp(ushort2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtp(ushort4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtp(ushort8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtp(ushort16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtp(ushort3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtn(ushort x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtn(ushort2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtn(ushort4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtn(ushort8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtn(ushort16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtn(ushort3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtz(ushort x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtz(ushort2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtz(ushort4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtz(ushort8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtz(ushort16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtz(ushort3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rte(ushort x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rte(ushort2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rte(ushort4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rte(ushort8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rte(ushort16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rte(ushort3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtp(ushort x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtp(ushort2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtp(ushort4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtp(ushort8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtp(ushort16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtp(ushort3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtn(ushort x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtn(ushort2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtn(ushort4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtn(ushort8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtn(ushort16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtn(ushort3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtz(ushort x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtz(ushort2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtz(ushort4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtz(ushort8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtz(ushort16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtz(ushort3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rte(ushort x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rte(ushort2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rte(ushort4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rte(ushort8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rte(ushort16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rte(ushort3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtp(ushort x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtp(ushort2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtp(ushort4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtp(ushort8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtp(ushort16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtp(ushort3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtn(ushort x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtn(ushort2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtn(ushort4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtn(ushort8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtn(ushort16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtn(ushort3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtz(ushort x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtz(ushort2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtz(ushort4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtz(ushort8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtz(ushort16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtz(ushort3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rte(ushort x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rte(ushort2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rte(ushort4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rte(ushort8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rte(ushort16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rte(ushort3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtp(ushort x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtp(ushort2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtp(ushort4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtp(ushort8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtp(ushort16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtp(ushort3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtn(ushort x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtn(ushort2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtn(ushort4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtn(ushort8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtn(ushort16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtn(ushort3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtz(ushort x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtz(ushort2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtz(ushort4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtz(ushort8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtz(ushort16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtz(ushort3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rte(ushort x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rte(ushort2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rte(ushort4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rte(ushort8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rte(ushort16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rte(ushort3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtp(ushort x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtp(ushort2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtp(ushort4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtp(ushort8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtp(ushort16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtp(ushort3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtn(ushort x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtn(ushort2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtn(ushort4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtn(ushort8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtn(ushort16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtn(ushort3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtz(ushort x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtz(ushort2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtz(ushort4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtz(ushort8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtz(ushort16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtz(ushort3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rte(ushort x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rte(ushort2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rte(ushort4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rte(ushort8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rte(ushort16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rte(ushort3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtp(ushort x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtp(ushort2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtp(ushort4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtp(ushort8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtp(ushort16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtp(ushort3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtn(ushort x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtn(ushort2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtn(ushort4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtn(ushort8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtn(ushort16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtn(ushort3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtz(ushort x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtz(ushort2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtz(ushort4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtz(ushort8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtz(ushort16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtz(ushort3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rte(ushort x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rte(ushort2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rte(ushort4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rte(ushort8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rte(ushort16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rte(ushort3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtp(ushort x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtp(ushort2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtp(ushort4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtp(ushort8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtp(ushort16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtp(ushort3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtn(ushort x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtn(ushort2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtn(ushort4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtn(ushort8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtn(ushort16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtn(ushort3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtz(int x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtz(int2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtz(int4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtz(int8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtz(int16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtz(int3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rte(int x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rte(int2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rte(int4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rte(int8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rte(int16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rte(int3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtp(int x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtp(int2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtp(int4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtp(int8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtp(int16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtp(int3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtn(int x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtn(int2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtn(int4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtn(int8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtn(int16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtn(int3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtz(int x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtz(int2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtz(int4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtz(int8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtz(int16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtz(int3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rte(int x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rte(int2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rte(int4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rte(int8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rte(int16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rte(int3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtp(int x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtp(int2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtp(int4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtp(int8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtp(int16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtp(int3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtn(int x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtn(int2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtn(int4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtn(int8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtn(int16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtn(int3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtz(int x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtz(int2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtz(int4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtz(int8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtz(int16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtz(int3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rte(int x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rte(int2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rte(int4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rte(int8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rte(int16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rte(int3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtp(int x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtp(int2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtp(int4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtp(int8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtp(int16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtp(int3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtn(int x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtn(int2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtn(int4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtn(int8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtn(int16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtn(int3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtz(int x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtz(int2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtz(int4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtz(int8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtz(int16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtz(int3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rte(int x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rte(int2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rte(int4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rte(int8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rte(int16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rte(int3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtp(int x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtp(int2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtp(int4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtp(int8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtp(int16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtp(int3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtn(int x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtn(int2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtn(int4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtn(int8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtn(int16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtn(int3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtz(int x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtz(int2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtz(int4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtz(int8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtz(int16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtz(int3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rte(int x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rte(int2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rte(int4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rte(int8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rte(int16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rte(int3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtp(int x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtp(int2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtp(int4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtp(int8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtp(int16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtp(int3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtn(int x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtn(int2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtn(int4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtn(int8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtn(int16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtn(int3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtz(int x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtz(int2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtz(int4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtz(int8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtz(int16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtz(int3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rte(int x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rte(int2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rte(int4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rte(int8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rte(int16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rte(int3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtp(int x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtp(int2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtp(int4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtp(int8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtp(int16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtp(int3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtn(int x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtn(int2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtn(int4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtn(int8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtn(int16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtn(int3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtz(int x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtz(int2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtz(int4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtz(int8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtz(int16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtz(int3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rte(int x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rte(int2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rte(int4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rte(int8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rte(int16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rte(int3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtp(int x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtp(int2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtp(int4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtp(int8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtp(int16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtp(int3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtn(int x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtn(int2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtn(int4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtn(int8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtn(int16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtn(int3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtz(int x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtz(int2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtz(int4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtz(int8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtz(int16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtz(int3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rte(int x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rte(int2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rte(int4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rte(int8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rte(int16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rte(int3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtp(int x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtp(int2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtp(int4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtp(int8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtp(int16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtp(int3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtn(int x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtn(int2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtn(int4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtn(int8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtn(int16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtn(int3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtz(int x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtz(int2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtz(int4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtz(int8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtz(int16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtz(int3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rte(int x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rte(int2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rte(int4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rte(int8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rte(int16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rte(int3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtp(int x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtp(int2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtp(int4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtp(int8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtp(int16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtp(int3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtn(int x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtn(int2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtn(int4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtn(int8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtn(int16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtn(int3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtz(uint x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtz(uint2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtz(uint4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtz(uint8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtz(uint16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtz(uint3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rte(uint x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rte(uint2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rte(uint4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rte(uint8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rte(uint16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rte(uint3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtp(uint x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtp(uint2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtp(uint4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtp(uint8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtp(uint16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtp(uint3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtn(uint x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtn(uint2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtn(uint4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtn(uint8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtn(uint16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtn(uint3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtz(uint x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtz(uint2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtz(uint4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtz(uint8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtz(uint16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtz(uint3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rte(uint x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rte(uint2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rte(uint4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rte(uint8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rte(uint16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rte(uint3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtp(uint x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtp(uint2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtp(uint4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtp(uint8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtp(uint16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtp(uint3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtn(uint x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtn(uint2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtn(uint4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtn(uint8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtn(uint16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtn(uint3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtz(uint x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtz(uint2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtz(uint4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtz(uint8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtz(uint16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtz(uint3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rte(uint x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rte(uint2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rte(uint4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rte(uint8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rte(uint16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rte(uint3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtp(uint x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtp(uint2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtp(uint4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtp(uint8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtp(uint16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtp(uint3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtn(uint x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtn(uint2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtn(uint4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtn(uint8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtn(uint16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtn(uint3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtz(uint x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtz(uint2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtz(uint4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtz(uint8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtz(uint16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtz(uint3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rte(uint x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rte(uint2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rte(uint4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rte(uint8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rte(uint16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rte(uint3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtp(uint x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtp(uint2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtp(uint4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtp(uint8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtp(uint16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtp(uint3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtn(uint x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtn(uint2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtn(uint4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtn(uint8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtn(uint16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtn(uint3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtz(uint x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtz(uint2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtz(uint4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtz(uint8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtz(uint16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtz(uint3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rte(uint x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rte(uint2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rte(uint4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rte(uint8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rte(uint16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rte(uint3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtp(uint x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtp(uint2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtp(uint4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtp(uint8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtp(uint16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtp(uint3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtn(uint x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtn(uint2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtn(uint4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtn(uint8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtn(uint16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtn(uint3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtz(uint x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtz(uint2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtz(uint4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtz(uint8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtz(uint16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtz(uint3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rte(uint x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rte(uint2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rte(uint4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rte(uint8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rte(uint16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rte(uint3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtp(uint x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtp(uint2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtp(uint4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtp(uint8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtp(uint16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtp(uint3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtn(uint x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtn(uint2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtn(uint4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtn(uint8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtn(uint16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtn(uint3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtz(uint x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtz(uint2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtz(uint4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtz(uint8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtz(uint16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtz(uint3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rte(uint x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rte(uint2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rte(uint4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rte(uint8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rte(uint16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rte(uint3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtp(uint x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtp(uint2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtp(uint4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtp(uint8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtp(uint16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtp(uint3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtn(uint x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtn(uint2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtn(uint4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtn(uint8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtn(uint16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtn(uint3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtz(uint x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtz(uint2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtz(uint4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtz(uint8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtz(uint16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtz(uint3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rte(uint x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rte(uint2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rte(uint4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rte(uint8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rte(uint16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rte(uint3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtp(uint x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtp(uint2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtp(uint4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtp(uint8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtp(uint16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtp(uint3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtn(uint x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtn(uint2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtn(uint4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtn(uint8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtn(uint16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtn(uint3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtz(uint x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtz(uint2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtz(uint4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtz(uint8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtz(uint16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtz(uint3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rte(uint x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rte(uint2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rte(uint4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rte(uint8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rte(uint16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rte(uint3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtp(uint x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtp(uint2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtp(uint4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtp(uint8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtp(uint16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtp(uint3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtn(uint x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtn(uint2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtn(uint4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtn(uint8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtn(uint16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtn(uint3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtz(long x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtz(long2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtz(long4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtz(long8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtz(long16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtz(long3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rte(long x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rte(long2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rte(long4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rte(long8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rte(long16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rte(long3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtp(long x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtp(long2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtp(long4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtp(long8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtp(long16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtp(long3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtn(long x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtn(long2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtn(long4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtn(long8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtn(long16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtn(long3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtz(long x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtz(long2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtz(long4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtz(long8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtz(long16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtz(long3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rte(long x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rte(long2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rte(long4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rte(long8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rte(long16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rte(long3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtp(long x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtp(long2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtp(long4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtp(long8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtp(long16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtp(long3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtn(long x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtn(long2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtn(long4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtn(long8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtn(long16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtn(long3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtz(long x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtz(long2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtz(long4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtz(long8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtz(long16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtz(long3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rte(long x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rte(long2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rte(long4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rte(long8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rte(long16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rte(long3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtp(long x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtp(long2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtp(long4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtp(long8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtp(long16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtp(long3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtn(long x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtn(long2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtn(long4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtn(long8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtn(long16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtn(long3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtz(long x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtz(long2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtz(long4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtz(long8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtz(long16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtz(long3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rte(long x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rte(long2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rte(long4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rte(long8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rte(long16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rte(long3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtp(long x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtp(long2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtp(long4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtp(long8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtp(long16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtp(long3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtn(long x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtn(long2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtn(long4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtn(long8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtn(long16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtn(long3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtz(long x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtz(long2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtz(long4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtz(long8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtz(long16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtz(long3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rte(long x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rte(long2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rte(long4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rte(long8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rte(long16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rte(long3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtp(long x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtp(long2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtp(long4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtp(long8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtp(long16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtp(long3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtn(long x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtn(long2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtn(long4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtn(long8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtn(long16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtn(long3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtz(long x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtz(long2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtz(long4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtz(long8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtz(long16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtz(long3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rte(long x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rte(long2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rte(long4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rte(long8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rte(long16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rte(long3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtp(long x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtp(long2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtp(long4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtp(long8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtp(long16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtp(long3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtn(long x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtn(long2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtn(long4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtn(long8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtn(long16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtn(long3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtz(long x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtz(long2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtz(long4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtz(long8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtz(long16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtz(long3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rte(long x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rte(long2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rte(long4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rte(long8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rte(long16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rte(long3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtp(long x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtp(long2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtp(long4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtp(long8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtp(long16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtp(long3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtn(long x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtn(long2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtn(long4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtn(long8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtn(long16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtn(long3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtz(long x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtz(long2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtz(long4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtz(long8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtz(long16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtz(long3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rte(long x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rte(long2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rte(long4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rte(long8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rte(long16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rte(long3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtp(long x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtp(long2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtp(long4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtp(long8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtp(long16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtp(long3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtn(long x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtn(long2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtn(long4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtn(long8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtn(long16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtn(long3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtz(long x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtz(long2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtz(long4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtz(long8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtz(long16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtz(long3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rte(long x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rte(long2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rte(long4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rte(long8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rte(long16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rte(long3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtp(long x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtp(long2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtp(long4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtp(long8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtp(long16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtp(long3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtn(long x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtn(long2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtn(long4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtn(long8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtn(long16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtn(long3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtz(ulong x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtz(ulong2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtz(ulong4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtz(ulong8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtz(ulong16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtz(ulong3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rte(ulong x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rte(ulong2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rte(ulong4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rte(ulong8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rte(ulong16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rte(ulong3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtp(ulong x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtp(ulong2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtp(ulong4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtp(ulong8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtp(ulong16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtp(ulong3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_rtn(ulong x)
{
  return (char)x;
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_rtn(ulong2 x)
{
  return (char2)(__clc_convert_char(x.lo), __clc_convert_char(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_rtn(ulong4 x)
{
  return (char4)(__clc_convert_char2(x.lo), __clc_convert_char2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_rtn(ulong8 x)
{
  return (char8)(__clc_convert_char4(x.lo), __clc_convert_char4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_rtn(ulong16 x)
{
  return (char16)(__clc_convert_char8(x.lo), __clc_convert_char8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_rtn(ulong3 x)
{
  return (char3)(__clc_convert_char2(x.s01), __clc_convert_char(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtz(ulong x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtz(ulong2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtz(ulong4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtz(ulong8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtz(ulong16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtz(ulong3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rte(ulong x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rte(ulong2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rte(ulong4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rte(ulong8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rte(ulong16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rte(ulong3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtp(ulong x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtp(ulong2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtp(ulong4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtp(ulong8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtp(ulong16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtp(ulong3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_rtn(ulong x)
{
  return (schar)x;
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_rtn(ulong2 x)
{
  return (schar2)(__clc_convert_schar(x.lo), __clc_convert_schar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_rtn(ulong4 x)
{
  return (schar4)(__clc_convert_schar2(x.lo), __clc_convert_schar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_rtn(ulong8 x)
{
  return (schar8)(__clc_convert_schar4(x.lo), __clc_convert_schar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_rtn(ulong16 x)
{
  return (schar16)(__clc_convert_schar8(x.lo), __clc_convert_schar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_rtn(ulong3 x)
{
  return (schar3)(__clc_convert_schar2(x.s01), __clc_convert_schar(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtz(ulong x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtz(ulong2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtz(ulong4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtz(ulong8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtz(ulong16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtz(ulong3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rte(ulong x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rte(ulong2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rte(ulong4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rte(ulong8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rte(ulong16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rte(ulong3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtp(ulong x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtp(ulong2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtp(ulong4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtp(ulong8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtp(ulong16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtp(ulong3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_rtn(ulong x)
{
  return (uchar)x;
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_rtn(ulong2 x)
{
  return (uchar2)(__clc_convert_uchar(x.lo), __clc_convert_uchar(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_rtn(ulong4 x)
{
  return (uchar4)(__clc_convert_uchar2(x.lo), __clc_convert_uchar2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_rtn(ulong8 x)
{
  return (uchar8)(__clc_convert_uchar4(x.lo), __clc_convert_uchar4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_rtn(ulong16 x)
{
  return (uchar16)(__clc_convert_uchar8(x.lo), __clc_convert_uchar8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_rtn(ulong3 x)
{
  return (uchar3)(__clc_convert_uchar2(x.s01), __clc_convert_uchar(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtz(ulong x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtz(ulong2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtz(ulong4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtz(ulong8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtz(ulong16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtz(ulong3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rte(ulong x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rte(ulong2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rte(ulong4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rte(ulong8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rte(ulong16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rte(ulong3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtp(ulong x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtp(ulong2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtp(ulong4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtp(ulong8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtp(ulong16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtp(ulong3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_rtn(ulong x)
{
  return (short)x;
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_rtn(ulong2 x)
{
  return (short2)(__clc_convert_short(x.lo), __clc_convert_short(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_rtn(ulong4 x)
{
  return (short4)(__clc_convert_short2(x.lo), __clc_convert_short2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_rtn(ulong8 x)
{
  return (short8)(__clc_convert_short4(x.lo), __clc_convert_short4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_rtn(ulong16 x)
{
  return (short16)(__clc_convert_short8(x.lo), __clc_convert_short8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_rtn(ulong3 x)
{
  return (short3)(__clc_convert_short2(x.s01), __clc_convert_short(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtz(ulong x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtz(ulong2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtz(ulong4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtz(ulong8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtz(ulong16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtz(ulong3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rte(ulong x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rte(ulong2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rte(ulong4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rte(ulong8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rte(ulong16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rte(ulong3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtp(ulong x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtp(ulong2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtp(ulong4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtp(ulong8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtp(ulong16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtp(ulong3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_rtn(ulong x)
{
  return (ushort)x;
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_rtn(ulong2 x)
{
  return (ushort2)(__clc_convert_ushort(x.lo), __clc_convert_ushort(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_rtn(ulong4 x)
{
  return (ushort4)(__clc_convert_ushort2(x.lo), __clc_convert_ushort2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_rtn(ulong8 x)
{
  return (ushort8)(__clc_convert_ushort4(x.lo), __clc_convert_ushort4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_rtn(ulong16 x)
{
  return (ushort16)(__clc_convert_ushort8(x.lo), __clc_convert_ushort8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_rtn(ulong3 x)
{
  return (ushort3)(__clc_convert_ushort2(x.s01), __clc_convert_ushort(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtz(ulong x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtz(ulong2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtz(ulong4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtz(ulong8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtz(ulong16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtz(ulong3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rte(ulong x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rte(ulong2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rte(ulong4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rte(ulong8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rte(ulong16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rte(ulong3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtp(ulong x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtp(ulong2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtp(ulong4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtp(ulong8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtp(ulong16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtp(ulong3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_rtn(ulong x)
{
  return (int)x;
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_rtn(ulong2 x)
{
  return (int2)(__clc_convert_int(x.lo), __clc_convert_int(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_rtn(ulong4 x)
{
  return (int4)(__clc_convert_int2(x.lo), __clc_convert_int2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_rtn(ulong8 x)
{
  return (int8)(__clc_convert_int4(x.lo), __clc_convert_int4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_rtn(ulong16 x)
{
  return (int16)(__clc_convert_int8(x.lo), __clc_convert_int8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_rtn(ulong3 x)
{
  return (int3)(__clc_convert_int2(x.s01), __clc_convert_int(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtz(ulong x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtz(ulong2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtz(ulong4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtz(ulong8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtz(ulong16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtz(ulong3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rte(ulong x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rte(ulong2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rte(ulong4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rte(ulong8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rte(ulong16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rte(ulong3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtp(ulong x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtp(ulong2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtp(ulong4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtp(ulong8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtp(ulong16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtp(ulong3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_rtn(ulong x)
{
  return (uint)x;
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_rtn(ulong2 x)
{
  return (uint2)(__clc_convert_uint(x.lo), __clc_convert_uint(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_rtn(ulong4 x)
{
  return (uint4)(__clc_convert_uint2(x.lo), __clc_convert_uint2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_rtn(ulong8 x)
{
  return (uint8)(__clc_convert_uint4(x.lo), __clc_convert_uint4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_rtn(ulong16 x)
{
  return (uint16)(__clc_convert_uint8(x.lo), __clc_convert_uint8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_rtn(ulong3 x)
{
  return (uint3)(__clc_convert_uint2(x.s01), __clc_convert_uint(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtz(ulong x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtz(ulong2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtz(ulong4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtz(ulong8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtz(ulong16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtz(ulong3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rte(ulong x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rte(ulong2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rte(ulong4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rte(ulong8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rte(ulong16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rte(ulong3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtp(ulong x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtp(ulong2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtp(ulong4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtp(ulong8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtp(ulong16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtp(ulong3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_rtn(ulong x)
{
  return (long)x;
}

_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_rtn(ulong2 x)
{
  return (long2)(__clc_convert_long(x.lo), __clc_convert_long(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_rtn(ulong4 x)
{
  return (long4)(__clc_convert_long2(x.lo), __clc_convert_long2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_rtn(ulong8 x)
{
  return (long8)(__clc_convert_long4(x.lo), __clc_convert_long4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_rtn(ulong16 x)
{
  return (long16)(__clc_convert_long8(x.lo), __clc_convert_long8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_rtn(ulong3 x)
{
  return (long3)(__clc_convert_long2(x.s01), __clc_convert_long(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtz(ulong x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtz(ulong2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtz(ulong4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtz(ulong8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtz(ulong16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtz(ulong3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rte(ulong x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rte(ulong2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rte(ulong4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rte(ulong8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rte(ulong16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rte(ulong3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtp(ulong x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtp(ulong2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtp(ulong4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtp(ulong8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtp(ulong16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtp(ulong3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_rtn(ulong x)
{
  return (ulong)x;
}

_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_rtn(ulong2 x)
{
  return (ulong2)(__clc_convert_ulong(x.lo), __clc_convert_ulong(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_rtn(ulong4 x)
{
  return (ulong4)(__clc_convert_ulong2(x.lo), __clc_convert_ulong2(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_rtn(ulong8 x)
{
  return (ulong8)(__clc_convert_ulong4(x.lo), __clc_convert_ulong4(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_rtn(ulong16 x)
{
  return (ulong16)(__clc_convert_ulong8(x.lo), __clc_convert_ulong8(x.hi));
}

_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_rtn(ulong3 x)
{
  return (ulong3)(__clc_convert_ulong2(x.s01), __clc_convert_ulong(x.s2));
}
#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat(char x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat(char2 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat(char3 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat(char4 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat(char8 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat(char16 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat(char x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_schar(x);
}
_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat(char2 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_schar2(x);
}
_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat(char3 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_schar3(x);
}
_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat(char4 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_schar4(x);
}
_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat(char8 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_schar8(x);
}
_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat(char16 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_schar16(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat(char x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_uchar(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat(char2 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_uchar2(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat(char3 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_uchar3(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat(char4 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_uchar4(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat(char8 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_uchar8(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat(char16 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_uchar16(x);
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat(char x)
{
  return __clc_convert_short(x);
}
_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat(char2 x)
{
  return __clc_convert_short2(x);
}
_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat(char3 x)
{
  return __clc_convert_short3(x);
}
_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat(char4 x)
{
  return __clc_convert_short4(x);
}
_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat(char8 x)
{
  return __clc_convert_short8(x);
}
_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat(char16 x)
{
  return __clc_convert_short16(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat(char x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_ushort(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat(char2 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_ushort2(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat(char3 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_ushort3(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat(char4 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_ushort4(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat(char8 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_ushort8(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat(char16 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_ushort16(x);
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat(char x)
{
  return __clc_convert_int(x);
}
_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat(char2 x)
{
  return __clc_convert_int2(x);
}
_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat(char3 x)
{
  return __clc_convert_int3(x);
}
_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat(char4 x)
{
  return __clc_convert_int4(x);
}
_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat(char8 x)
{
  return __clc_convert_int8(x);
}
_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat(char16 x)
{
  return __clc_convert_int16(x);
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat(char x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_uint(x);
}
_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat(char2 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_uint2(x);
}
_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat(char3 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_uint3(x);
}
_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat(char4 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_uint4(x);
}
_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat(char8 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_uint8(x);
}
_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat(char16 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_uint16(x);
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat(char x)
{
  return __clc_convert_long(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat(char2 x)
{
  return __clc_convert_long2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat(char3 x)
{
  return __clc_convert_long3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat(char4 x)
{
  return __clc_convert_long4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat(char8 x)
{
  return __clc_convert_long8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat(char16 x)
{
  return __clc_convert_long16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat(char x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_ulong(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat(char2 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_ulong2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat(char3 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_ulong3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat(char4 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_ulong4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat(char8 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_ulong8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat(char16 x)
{
  x = __clc_max(x, (char)0);
  return __clc_convert_ulong16(x);
}
#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat(schar x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_char(x);
}
_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat(schar2 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_char2(x);
}
_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat(schar3 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_char3(x);
}
_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat(schar4 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_char4(x);
}
_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat(schar8 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_char8(x);
}
_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat(schar16 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_char16(x);
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat(schar x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat(schar2 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat(schar3 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat(schar4 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat(schar8 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat(schar16 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat(schar x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_uchar(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat(schar2 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_uchar2(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat(schar3 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_uchar3(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat(schar4 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_uchar4(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat(schar8 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_uchar8(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat(schar16 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_uchar16(x);
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat(schar x)
{
  return __clc_convert_short(x);
}
_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat(schar2 x)
{
  return __clc_convert_short2(x);
}
_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat(schar3 x)
{
  return __clc_convert_short3(x);
}
_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat(schar4 x)
{
  return __clc_convert_short4(x);
}
_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat(schar8 x)
{
  return __clc_convert_short8(x);
}
_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat(schar16 x)
{
  return __clc_convert_short16(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat(schar x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_ushort(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat(schar2 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_ushort2(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat(schar3 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_ushort3(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat(schar4 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_ushort4(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat(schar8 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_ushort8(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat(schar16 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_ushort16(x);
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat(schar x)
{
  return __clc_convert_int(x);
}
_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat(schar2 x)
{
  return __clc_convert_int2(x);
}
_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat(schar3 x)
{
  return __clc_convert_int3(x);
}
_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat(schar4 x)
{
  return __clc_convert_int4(x);
}
_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat(schar8 x)
{
  return __clc_convert_int8(x);
}
_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat(schar16 x)
{
  return __clc_convert_int16(x);
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat(schar x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_uint(x);
}
_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat(schar2 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_uint2(x);
}
_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat(schar3 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_uint3(x);
}
_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat(schar4 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_uint4(x);
}
_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat(schar8 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_uint8(x);
}
_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat(schar16 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_uint16(x);
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat(schar x)
{
  return __clc_convert_long(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat(schar2 x)
{
  return __clc_convert_long2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat(schar3 x)
{
  return __clc_convert_long3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat(schar4 x)
{
  return __clc_convert_long4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat(schar8 x)
{
  return __clc_convert_long8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat(schar16 x)
{
  return __clc_convert_long16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat(schar x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_ulong(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat(schar2 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_ulong2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat(schar3 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_ulong3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat(schar4 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_ulong4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat(schar8 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_ulong8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat(schar16 x)
{
  x = __clc_max(x, (schar)0);
  return __clc_convert_ulong16(x);
}
#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat(uchar x)
{
  x = __clc_min(x, (uchar)CHAR_MAX);
  return __clc_convert_char(x);
}
_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat(uchar2 x)
{
  x = __clc_min(x, (uchar)CHAR_MAX);
  return __clc_convert_char2(x);
}
_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat(uchar3 x)
{
  x = __clc_min(x, (uchar)CHAR_MAX);
  return __clc_convert_char3(x);
}
_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat(uchar4 x)
{
  x = __clc_min(x, (uchar)CHAR_MAX);
  return __clc_convert_char4(x);
}
_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat(uchar8 x)
{
  x = __clc_min(x, (uchar)CHAR_MAX);
  return __clc_convert_char8(x);
}
_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat(uchar16 x)
{
  x = __clc_min(x, (uchar)CHAR_MAX);
  return __clc_convert_char16(x);
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat(uchar x)
{
  x = __clc_min(x, (uchar)CHAR_MAX);
  return __clc_convert_schar(x);
}
_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat(uchar2 x)
{
  x = __clc_min(x, (uchar)CHAR_MAX);
  return __clc_convert_schar2(x);
}
_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat(uchar3 x)
{
  x = __clc_min(x, (uchar)CHAR_MAX);
  return __clc_convert_schar3(x);
}
_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat(uchar4 x)
{
  x = __clc_min(x, (uchar)CHAR_MAX);
  return __clc_convert_schar4(x);
}
_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat(uchar8 x)
{
  x = __clc_min(x, (uchar)CHAR_MAX);
  return __clc_convert_schar8(x);
}
_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat(uchar16 x)
{
  x = __clc_min(x, (uchar)CHAR_MAX);
  return __clc_convert_schar16(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat(uchar x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat(uchar2 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat(uchar3 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat(uchar4 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat(uchar8 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat(uchar16 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat(uchar x)
{
  return __clc_convert_short(x);
}
_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat(uchar2 x)
{
  return __clc_convert_short2(x);
}
_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat(uchar3 x)
{
  return __clc_convert_short3(x);
}
_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat(uchar4 x)
{
  return __clc_convert_short4(x);
}
_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat(uchar8 x)
{
  return __clc_convert_short8(x);
}
_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat(uchar16 x)
{
  return __clc_convert_short16(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat(uchar x)
{
  return __clc_convert_ushort(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat(uchar2 x)
{
  return __clc_convert_ushort2(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat(uchar3 x)
{
  return __clc_convert_ushort3(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat(uchar4 x)
{
  return __clc_convert_ushort4(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat(uchar8 x)
{
  return __clc_convert_ushort8(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat(uchar16 x)
{
  return __clc_convert_ushort16(x);
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat(uchar x)
{
  return __clc_convert_int(x);
}
_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat(uchar2 x)
{
  return __clc_convert_int2(x);
}
_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat(uchar3 x)
{
  return __clc_convert_int3(x);
}
_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat(uchar4 x)
{
  return __clc_convert_int4(x);
}
_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat(uchar8 x)
{
  return __clc_convert_int8(x);
}
_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat(uchar16 x)
{
  return __clc_convert_int16(x);
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat(uchar x)
{
  return __clc_convert_uint(x);
}
_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat(uchar2 x)
{
  return __clc_convert_uint2(x);
}
_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat(uchar3 x)
{
  return __clc_convert_uint3(x);
}
_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat(uchar4 x)
{
  return __clc_convert_uint4(x);
}
_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat(uchar8 x)
{
  return __clc_convert_uint8(x);
}
_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat(uchar16 x)
{
  return __clc_convert_uint16(x);
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat(uchar x)
{
  return __clc_convert_long(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat(uchar2 x)
{
  return __clc_convert_long2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat(uchar3 x)
{
  return __clc_convert_long3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat(uchar4 x)
{
  return __clc_convert_long4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat(uchar8 x)
{
  return __clc_convert_long8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat(uchar16 x)
{
  return __clc_convert_long16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat(uchar x)
{
  return __clc_convert_ulong(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat(uchar2 x)
{
  return __clc_convert_ulong2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat(uchar3 x)
{
  return __clc_convert_ulong3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat(uchar4 x)
{
  return __clc_convert_ulong4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat(uchar8 x)
{
  return __clc_convert_ulong8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat(uchar16 x)
{
  return __clc_convert_ulong16(x);
}
#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat(short x)
{
  x = __clc_clamp(x, (short)CHAR_MIN, (short)CHAR_MAX);
  return __clc_convert_char(x);
}
_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat(short2 x)
{
  x = __clc_clamp(x, (short)CHAR_MIN, (short)CHAR_MAX);
  return __clc_convert_char2(x);
}
_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat(short3 x)
{
  x = __clc_clamp(x, (short)CHAR_MIN, (short)CHAR_MAX);
  return __clc_convert_char3(x);
}
_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat(short4 x)
{
  x = __clc_clamp(x, (short)CHAR_MIN, (short)CHAR_MAX);
  return __clc_convert_char4(x);
}
_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat(short8 x)
{
  x = __clc_clamp(x, (short)CHAR_MIN, (short)CHAR_MAX);
  return __clc_convert_char8(x);
}
_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat(short16 x)
{
  x = __clc_clamp(x, (short)CHAR_MIN, (short)CHAR_MAX);
  return __clc_convert_char16(x);
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat(short x)
{
  x = __clc_clamp(x, (short)CHAR_MIN, (short)CHAR_MAX);
  return __clc_convert_schar(x);
}
_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat(short2 x)
{
  x = __clc_clamp(x, (short)CHAR_MIN, (short)CHAR_MAX);
  return __clc_convert_schar2(x);
}
_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat(short3 x)
{
  x = __clc_clamp(x, (short)CHAR_MIN, (short)CHAR_MAX);
  return __clc_convert_schar3(x);
}
_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat(short4 x)
{
  x = __clc_clamp(x, (short)CHAR_MIN, (short)CHAR_MAX);
  return __clc_convert_schar4(x);
}
_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat(short8 x)
{
  x = __clc_clamp(x, (short)CHAR_MIN, (short)CHAR_MAX);
  return __clc_convert_schar8(x);
}
_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat(short16 x)
{
  x = __clc_clamp(x, (short)CHAR_MIN, (short)CHAR_MAX);
  return __clc_convert_schar16(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat(short x)
{
  x = __clc_clamp(x, (short)0, (short)UCHAR_MAX);
  return __clc_convert_uchar(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat(short2 x)
{
  x = __clc_clamp(x, (short)0, (short)UCHAR_MAX);
  return __clc_convert_uchar2(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat(short3 x)
{
  x = __clc_clamp(x, (short)0, (short)UCHAR_MAX);
  return __clc_convert_uchar3(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat(short4 x)
{
  x = __clc_clamp(x, (short)0, (short)UCHAR_MAX);
  return __clc_convert_uchar4(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat(short8 x)
{
  x = __clc_clamp(x, (short)0, (short)UCHAR_MAX);
  return __clc_convert_uchar8(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat(short16 x)
{
  x = __clc_clamp(x, (short)0, (short)UCHAR_MAX);
  return __clc_convert_uchar16(x);
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat(short x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat(short2 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat(short3 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat(short4 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat(short8 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat(short16 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat(short x)
{
  x = __clc_max(x, (short)0);
  return __clc_convert_ushort(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat(short2 x)
{
  x = __clc_max(x, (short)0);
  return __clc_convert_ushort2(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat(short3 x)
{
  x = __clc_max(x, (short)0);
  return __clc_convert_ushort3(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat(short4 x)
{
  x = __clc_max(x, (short)0);
  return __clc_convert_ushort4(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat(short8 x)
{
  x = __clc_max(x, (short)0);
  return __clc_convert_ushort8(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat(short16 x)
{
  x = __clc_max(x, (short)0);
  return __clc_convert_ushort16(x);
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat(short x)
{
  return __clc_convert_int(x);
}
_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat(short2 x)
{
  return __clc_convert_int2(x);
}
_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat(short3 x)
{
  return __clc_convert_int3(x);
}
_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat(short4 x)
{
  return __clc_convert_int4(x);
}
_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat(short8 x)
{
  return __clc_convert_int8(x);
}
_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat(short16 x)
{
  return __clc_convert_int16(x);
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat(short x)
{
  x = __clc_max(x, (short)0);
  return __clc_convert_uint(x);
}
_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat(short2 x)
{
  x = __clc_max(x, (short)0);
  return __clc_convert_uint2(x);
}
_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat(short3 x)
{
  x = __clc_max(x, (short)0);
  return __clc_convert_uint3(x);
}
_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat(short4 x)
{
  x = __clc_max(x, (short)0);
  return __clc_convert_uint4(x);
}
_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat(short8 x)
{
  x = __clc_max(x, (short)0);
  return __clc_convert_uint8(x);
}
_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat(short16 x)
{
  x = __clc_max(x, (short)0);
  return __clc_convert_uint16(x);
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat(short x)
{
  return __clc_convert_long(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat(short2 x)
{
  return __clc_convert_long2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat(short3 x)
{
  return __clc_convert_long3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat(short4 x)
{
  return __clc_convert_long4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat(short8 x)
{
  return __clc_convert_long8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat(short16 x)
{
  return __clc_convert_long16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat(short x)
{
  x = __clc_max(x, (short)0);
  return __clc_convert_ulong(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat(short2 x)
{
  x = __clc_max(x, (short)0);
  return __clc_convert_ulong2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat(short3 x)
{
  x = __clc_max(x, (short)0);
  return __clc_convert_ulong3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat(short4 x)
{
  x = __clc_max(x, (short)0);
  return __clc_convert_ulong4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat(short8 x)
{
  x = __clc_max(x, (short)0);
  return __clc_convert_ulong8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat(short16 x)
{
  x = __clc_max(x, (short)0);
  return __clc_convert_ulong16(x);
}
#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat(ushort x)
{
  x = __clc_min(x, (ushort)CHAR_MAX);
  return __clc_convert_char(x);
}
_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat(ushort2 x)
{
  x = __clc_min(x, (ushort)CHAR_MAX);
  return __clc_convert_char2(x);
}
_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat(ushort3 x)
{
  x = __clc_min(x, (ushort)CHAR_MAX);
  return __clc_convert_char3(x);
}
_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat(ushort4 x)
{
  x = __clc_min(x, (ushort)CHAR_MAX);
  return __clc_convert_char4(x);
}
_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat(ushort8 x)
{
  x = __clc_min(x, (ushort)CHAR_MAX);
  return __clc_convert_char8(x);
}
_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat(ushort16 x)
{
  x = __clc_min(x, (ushort)CHAR_MAX);
  return __clc_convert_char16(x);
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat(ushort x)
{
  x = __clc_min(x, (ushort)CHAR_MAX);
  return __clc_convert_schar(x);
}
_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat(ushort2 x)
{
  x = __clc_min(x, (ushort)CHAR_MAX);
  return __clc_convert_schar2(x);
}
_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat(ushort3 x)
{
  x = __clc_min(x, (ushort)CHAR_MAX);
  return __clc_convert_schar3(x);
}
_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat(ushort4 x)
{
  x = __clc_min(x, (ushort)CHAR_MAX);
  return __clc_convert_schar4(x);
}
_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat(ushort8 x)
{
  x = __clc_min(x, (ushort)CHAR_MAX);
  return __clc_convert_schar8(x);
}
_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat(ushort16 x)
{
  x = __clc_min(x, (ushort)CHAR_MAX);
  return __clc_convert_schar16(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat(ushort x)
{
  x = __clc_min(x, (ushort)UCHAR_MAX);
  return __clc_convert_uchar(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat(ushort2 x)
{
  x = __clc_min(x, (ushort)UCHAR_MAX);
  return __clc_convert_uchar2(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat(ushort3 x)
{
  x = __clc_min(x, (ushort)UCHAR_MAX);
  return __clc_convert_uchar3(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat(ushort4 x)
{
  x = __clc_min(x, (ushort)UCHAR_MAX);
  return __clc_convert_uchar4(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat(ushort8 x)
{
  x = __clc_min(x, (ushort)UCHAR_MAX);
  return __clc_convert_uchar8(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat(ushort16 x)
{
  x = __clc_min(x, (ushort)UCHAR_MAX);
  return __clc_convert_uchar16(x);
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat(ushort x)
{
  x = __clc_min(x, (ushort)SHRT_MAX);
  return __clc_convert_short(x);
}
_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat(ushort2 x)
{
  x = __clc_min(x, (ushort)SHRT_MAX);
  return __clc_convert_short2(x);
}
_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat(ushort3 x)
{
  x = __clc_min(x, (ushort)SHRT_MAX);
  return __clc_convert_short3(x);
}
_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat(ushort4 x)
{
  x = __clc_min(x, (ushort)SHRT_MAX);
  return __clc_convert_short4(x);
}
_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat(ushort8 x)
{
  x = __clc_min(x, (ushort)SHRT_MAX);
  return __clc_convert_short8(x);
}
_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat(ushort16 x)
{
  x = __clc_min(x, (ushort)SHRT_MAX);
  return __clc_convert_short16(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat(ushort x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat(ushort2 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat(ushort3 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat(ushort4 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat(ushort8 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat(ushort16 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat(ushort x)
{
  return __clc_convert_int(x);
}
_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat(ushort2 x)
{
  return __clc_convert_int2(x);
}
_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat(ushort3 x)
{
  return __clc_convert_int3(x);
}
_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat(ushort4 x)
{
  return __clc_convert_int4(x);
}
_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat(ushort8 x)
{
  return __clc_convert_int8(x);
}
_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat(ushort16 x)
{
  return __clc_convert_int16(x);
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat(ushort x)
{
  return __clc_convert_uint(x);
}
_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat(ushort2 x)
{
  return __clc_convert_uint2(x);
}
_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat(ushort3 x)
{
  return __clc_convert_uint3(x);
}
_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat(ushort4 x)
{
  return __clc_convert_uint4(x);
}
_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat(ushort8 x)
{
  return __clc_convert_uint8(x);
}
_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat(ushort16 x)
{
  return __clc_convert_uint16(x);
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat(ushort x)
{
  return __clc_convert_long(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat(ushort2 x)
{
  return __clc_convert_long2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat(ushort3 x)
{
  return __clc_convert_long3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat(ushort4 x)
{
  return __clc_convert_long4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat(ushort8 x)
{
  return __clc_convert_long8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat(ushort16 x)
{
  return __clc_convert_long16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat(ushort x)
{
  return __clc_convert_ulong(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat(ushort2 x)
{
  return __clc_convert_ulong2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat(ushort3 x)
{
  return __clc_convert_ulong3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat(ushort4 x)
{
  return __clc_convert_ulong4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat(ushort8 x)
{
  return __clc_convert_ulong8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat(ushort16 x)
{
  return __clc_convert_ulong16(x);
}
#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat(int x)
{
  x = __clc_clamp(x, (int)CHAR_MIN, (int)CHAR_MAX);
  return __clc_convert_char(x);
}
_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat(int2 x)
{
  x = __clc_clamp(x, (int)CHAR_MIN, (int)CHAR_MAX);
  return __clc_convert_char2(x);
}
_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat(int3 x)
{
  x = __clc_clamp(x, (int)CHAR_MIN, (int)CHAR_MAX);
  return __clc_convert_char3(x);
}
_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat(int4 x)
{
  x = __clc_clamp(x, (int)CHAR_MIN, (int)CHAR_MAX);
  return __clc_convert_char4(x);
}
_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat(int8 x)
{
  x = __clc_clamp(x, (int)CHAR_MIN, (int)CHAR_MAX);
  return __clc_convert_char8(x);
}
_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat(int16 x)
{
  x = __clc_clamp(x, (int)CHAR_MIN, (int)CHAR_MAX);
  return __clc_convert_char16(x);
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat(int x)
{
  x = __clc_clamp(x, (int)CHAR_MIN, (int)CHAR_MAX);
  return __clc_convert_schar(x);
}
_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat(int2 x)
{
  x = __clc_clamp(x, (int)CHAR_MIN, (int)CHAR_MAX);
  return __clc_convert_schar2(x);
}
_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat(int3 x)
{
  x = __clc_clamp(x, (int)CHAR_MIN, (int)CHAR_MAX);
  return __clc_convert_schar3(x);
}
_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat(int4 x)
{
  x = __clc_clamp(x, (int)CHAR_MIN, (int)CHAR_MAX);
  return __clc_convert_schar4(x);
}
_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat(int8 x)
{
  x = __clc_clamp(x, (int)CHAR_MIN, (int)CHAR_MAX);
  return __clc_convert_schar8(x);
}
_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat(int16 x)
{
  x = __clc_clamp(x, (int)CHAR_MIN, (int)CHAR_MAX);
  return __clc_convert_schar16(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat(int x)
{
  x = __clc_clamp(x, (int)0, (int)UCHAR_MAX);
  return __clc_convert_uchar(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat(int2 x)
{
  x = __clc_clamp(x, (int)0, (int)UCHAR_MAX);
  return __clc_convert_uchar2(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat(int3 x)
{
  x = __clc_clamp(x, (int)0, (int)UCHAR_MAX);
  return __clc_convert_uchar3(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat(int4 x)
{
  x = __clc_clamp(x, (int)0, (int)UCHAR_MAX);
  return __clc_convert_uchar4(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat(int8 x)
{
  x = __clc_clamp(x, (int)0, (int)UCHAR_MAX);
  return __clc_convert_uchar8(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat(int16 x)
{
  x = __clc_clamp(x, (int)0, (int)UCHAR_MAX);
  return __clc_convert_uchar16(x);
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat(int x)
{
  x = __clc_clamp(x, (int)SHRT_MIN, (int)SHRT_MAX);
  return __clc_convert_short(x);
}
_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat(int2 x)
{
  x = __clc_clamp(x, (int)SHRT_MIN, (int)SHRT_MAX);
  return __clc_convert_short2(x);
}
_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat(int3 x)
{
  x = __clc_clamp(x, (int)SHRT_MIN, (int)SHRT_MAX);
  return __clc_convert_short3(x);
}
_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat(int4 x)
{
  x = __clc_clamp(x, (int)SHRT_MIN, (int)SHRT_MAX);
  return __clc_convert_short4(x);
}
_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat(int8 x)
{
  x = __clc_clamp(x, (int)SHRT_MIN, (int)SHRT_MAX);
  return __clc_convert_short8(x);
}
_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat(int16 x)
{
  x = __clc_clamp(x, (int)SHRT_MIN, (int)SHRT_MAX);
  return __clc_convert_short16(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat(int x)
{
  x = __clc_clamp(x, (int)0, (int)USHRT_MAX);
  return __clc_convert_ushort(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat(int2 x)
{
  x = __clc_clamp(x, (int)0, (int)USHRT_MAX);
  return __clc_convert_ushort2(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat(int3 x)
{
  x = __clc_clamp(x, (int)0, (int)USHRT_MAX);
  return __clc_convert_ushort3(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat(int4 x)
{
  x = __clc_clamp(x, (int)0, (int)USHRT_MAX);
  return __clc_convert_ushort4(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat(int8 x)
{
  x = __clc_clamp(x, (int)0, (int)USHRT_MAX);
  return __clc_convert_ushort8(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat(int16 x)
{
  x = __clc_clamp(x, (int)0, (int)USHRT_MAX);
  return __clc_convert_ushort16(x);
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat(int x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat(int2 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat(int3 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat(int4 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat(int8 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat(int16 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat(int x)
{
  x = __clc_max(x, (int)0);
  return __clc_convert_uint(x);
}
_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat(int2 x)
{
  x = __clc_max(x, (int)0);
  return __clc_convert_uint2(x);
}
_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat(int3 x)
{
  x = __clc_max(x, (int)0);
  return __clc_convert_uint3(x);
}
_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat(int4 x)
{
  x = __clc_max(x, (int)0);
  return __clc_convert_uint4(x);
}
_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat(int8 x)
{
  x = __clc_max(x, (int)0);
  return __clc_convert_uint8(x);
}
_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat(int16 x)
{
  x = __clc_max(x, (int)0);
  return __clc_convert_uint16(x);
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat(int x)
{
  return __clc_convert_long(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat(int2 x)
{
  return __clc_convert_long2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat(int3 x)
{
  return __clc_convert_long3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat(int4 x)
{
  return __clc_convert_long4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat(int8 x)
{
  return __clc_convert_long8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat(int16 x)
{
  return __clc_convert_long16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat(int x)
{
  x = __clc_max(x, (int)0);
  return __clc_convert_ulong(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat(int2 x)
{
  x = __clc_max(x, (int)0);
  return __clc_convert_ulong2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat(int3 x)
{
  x = __clc_max(x, (int)0);
  return __clc_convert_ulong3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat(int4 x)
{
  x = __clc_max(x, (int)0);
  return __clc_convert_ulong4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat(int8 x)
{
  x = __clc_max(x, (int)0);
  return __clc_convert_ulong8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat(int16 x)
{
  x = __clc_max(x, (int)0);
  return __clc_convert_ulong16(x);
}
#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat(uint x)
{
  x = __clc_min(x, (uint)CHAR_MAX);
  return __clc_convert_char(x);
}
_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat(uint2 x)
{
  x = __clc_min(x, (uint)CHAR_MAX);
  return __clc_convert_char2(x);
}
_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat(uint3 x)
{
  x = __clc_min(x, (uint)CHAR_MAX);
  return __clc_convert_char3(x);
}
_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat(uint4 x)
{
  x = __clc_min(x, (uint)CHAR_MAX);
  return __clc_convert_char4(x);
}
_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat(uint8 x)
{
  x = __clc_min(x, (uint)CHAR_MAX);
  return __clc_convert_char8(x);
}
_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat(uint16 x)
{
  x = __clc_min(x, (uint)CHAR_MAX);
  return __clc_convert_char16(x);
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat(uint x)
{
  x = __clc_min(x, (uint)CHAR_MAX);
  return __clc_convert_schar(x);
}
_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat(uint2 x)
{
  x = __clc_min(x, (uint)CHAR_MAX);
  return __clc_convert_schar2(x);
}
_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat(uint3 x)
{
  x = __clc_min(x, (uint)CHAR_MAX);
  return __clc_convert_schar3(x);
}
_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat(uint4 x)
{
  x = __clc_min(x, (uint)CHAR_MAX);
  return __clc_convert_schar4(x);
}
_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat(uint8 x)
{
  x = __clc_min(x, (uint)CHAR_MAX);
  return __clc_convert_schar8(x);
}
_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat(uint16 x)
{
  x = __clc_min(x, (uint)CHAR_MAX);
  return __clc_convert_schar16(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat(uint x)
{
  x = __clc_min(x, (uint)UCHAR_MAX);
  return __clc_convert_uchar(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat(uint2 x)
{
  x = __clc_min(x, (uint)UCHAR_MAX);
  return __clc_convert_uchar2(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat(uint3 x)
{
  x = __clc_min(x, (uint)UCHAR_MAX);
  return __clc_convert_uchar3(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat(uint4 x)
{
  x = __clc_min(x, (uint)UCHAR_MAX);
  return __clc_convert_uchar4(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat(uint8 x)
{
  x = __clc_min(x, (uint)UCHAR_MAX);
  return __clc_convert_uchar8(x);
}
_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat(uint16 x)
{
  x = __clc_min(x, (uint)UCHAR_MAX);
  return __clc_convert_uchar16(x);
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat(uint x)
{
  x = __clc_min(x, (uint)SHRT_MAX);
  return __clc_convert_short(x);
}
_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat(uint2 x)
{
  x = __clc_min(x, (uint)SHRT_MAX);
  return __clc_convert_short2(x);
}
_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat(uint3 x)
{
  x = __clc_min(x, (uint)SHRT_MAX);
  return __clc_convert_short3(x);
}
_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat(uint4 x)
{
  x = __clc_min(x, (uint)SHRT_MAX);
  return __clc_convert_short4(x);
}
_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat(uint8 x)
{
  x = __clc_min(x, (uint)SHRT_MAX);
  return __clc_convert_short8(x);
}
_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat(uint16 x)
{
  x = __clc_min(x, (uint)SHRT_MAX);
  return __clc_convert_short16(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat(uint x)
{
  x = __clc_min(x, (uint)USHRT_MAX);
  return __clc_convert_ushort(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat(uint2 x)
{
  x = __clc_min(x, (uint)USHRT_MAX);
  return __clc_convert_ushort2(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat(uint3 x)
{
  x = __clc_min(x, (uint)USHRT_MAX);
  return __clc_convert_ushort3(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat(uint4 x)
{
  x = __clc_min(x, (uint)USHRT_MAX);
  return __clc_convert_ushort4(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat(uint8 x)
{
  x = __clc_min(x, (uint)USHRT_MAX);
  return __clc_convert_ushort8(x);
}
_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat(uint16 x)
{
  x = __clc_min(x, (uint)USHRT_MAX);
  return __clc_convert_ushort16(x);
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat(uint x)
{
  x = __clc_min(x, (uint)INT_MAX);
  return __clc_convert_int(x);
}
_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat(uint2 x)
{
  x = __clc_min(x, (uint)INT_MAX);
  return __clc_convert_int2(x);
}
_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat(uint3 x)
{
  x = __clc_min(x, (uint)INT_MAX);
  return __clc_convert_int3(x);
}
_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat(uint4 x)
{
  x = __clc_min(x, (uint)INT_MAX);
  return __clc_convert_int4(x);
}
_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat(uint8 x)
{
  x = __clc_min(x, (uint)INT_MAX);
  return __clc_convert_int8(x);
}
_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat(uint16 x)
{
  x = __clc_min(x, (uint)INT_MAX);
  return __clc_convert_int16(x);
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat(uint x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat(uint2 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat(uint3 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat(uint4 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat(uint8 x)
{
  return x;
}
_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat(uint16 x)
{
  return x;
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat(uint x)
{
  return __clc_convert_long(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat(uint2 x)
{
  return __clc_convert_long2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat(uint3 x)
{
  return __clc_convert_long3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat(uint4 x)
{
  return __clc_convert_long4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat(uint8 x)
{
  return __clc_convert_long8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat(uint16 x)
{
  return __clc_convert_long16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat(uint x)
{
  return __clc_convert_ulong(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat(uint2 x)
{
  return __clc_convert_ulong2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat(uint3 x)
{
  return __clc_convert_ulong3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat(uint4 x)
{
  return __clc_convert_ulong4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat(uint8 x)
{
  return __clc_convert_ulong8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat(uint16 x)
{
  return __clc_convert_ulong16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat(long x)
{
  x = __clc_clamp(x, (long)CHAR_MIN, (long)CHAR_MAX);
  return __clc_convert_char(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat(long2 x)
{
  x = __clc_clamp(x, (long)CHAR_MIN, (long)CHAR_MAX);
  return __clc_convert_char2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat(long3 x)
{
  x = __clc_clamp(x, (long)CHAR_MIN, (long)CHAR_MAX);
  return __clc_convert_char3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat(long4 x)
{
  x = __clc_clamp(x, (long)CHAR_MIN, (long)CHAR_MAX);
  return __clc_convert_char4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat(long8 x)
{
  x = __clc_clamp(x, (long)CHAR_MIN, (long)CHAR_MAX);
  return __clc_convert_char8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat(long16 x)
{
  x = __clc_clamp(x, (long)CHAR_MIN, (long)CHAR_MAX);
  return __clc_convert_char16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat(long x)
{
  x = __clc_clamp(x, (long)CHAR_MIN, (long)CHAR_MAX);
  return __clc_convert_schar(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat(long2 x)
{
  x = __clc_clamp(x, (long)CHAR_MIN, (long)CHAR_MAX);
  return __clc_convert_schar2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat(long3 x)
{
  x = __clc_clamp(x, (long)CHAR_MIN, (long)CHAR_MAX);
  return __clc_convert_schar3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat(long4 x)
{
  x = __clc_clamp(x, (long)CHAR_MIN, (long)CHAR_MAX);
  return __clc_convert_schar4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat(long8 x)
{
  x = __clc_clamp(x, (long)CHAR_MIN, (long)CHAR_MAX);
  return __clc_convert_schar8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat(long16 x)
{
  x = __clc_clamp(x, (long)CHAR_MIN, (long)CHAR_MAX);
  return __clc_convert_schar16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat(long x)
{
  x = __clc_clamp(x, (long)0, (long)UCHAR_MAX);
  return __clc_convert_uchar(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat(long2 x)
{
  x = __clc_clamp(x, (long)0, (long)UCHAR_MAX);
  return __clc_convert_uchar2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat(long3 x)
{
  x = __clc_clamp(x, (long)0, (long)UCHAR_MAX);
  return __clc_convert_uchar3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat(long4 x)
{
  x = __clc_clamp(x, (long)0, (long)UCHAR_MAX);
  return __clc_convert_uchar4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat(long8 x)
{
  x = __clc_clamp(x, (long)0, (long)UCHAR_MAX);
  return __clc_convert_uchar8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat(long16 x)
{
  x = __clc_clamp(x, (long)0, (long)UCHAR_MAX);
  return __clc_convert_uchar16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat(long x)
{
  x = __clc_clamp(x, (long)SHRT_MIN, (long)SHRT_MAX);
  return __clc_convert_short(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat(long2 x)
{
  x = __clc_clamp(x, (long)SHRT_MIN, (long)SHRT_MAX);
  return __clc_convert_short2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat(long3 x)
{
  x = __clc_clamp(x, (long)SHRT_MIN, (long)SHRT_MAX);
  return __clc_convert_short3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat(long4 x)
{
  x = __clc_clamp(x, (long)SHRT_MIN, (long)SHRT_MAX);
  return __clc_convert_short4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat(long8 x)
{
  x = __clc_clamp(x, (long)SHRT_MIN, (long)SHRT_MAX);
  return __clc_convert_short8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat(long16 x)
{
  x = __clc_clamp(x, (long)SHRT_MIN, (long)SHRT_MAX);
  return __clc_convert_short16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat(long x)
{
  x = __clc_clamp(x, (long)0, (long)USHRT_MAX);
  return __clc_convert_ushort(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat(long2 x)
{
  x = __clc_clamp(x, (long)0, (long)USHRT_MAX);
  return __clc_convert_ushort2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat(long3 x)
{
  x = __clc_clamp(x, (long)0, (long)USHRT_MAX);
  return __clc_convert_ushort3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat(long4 x)
{
  x = __clc_clamp(x, (long)0, (long)USHRT_MAX);
  return __clc_convert_ushort4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat(long8 x)
{
  x = __clc_clamp(x, (long)0, (long)USHRT_MAX);
  return __clc_convert_ushort8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat(long16 x)
{
  x = __clc_clamp(x, (long)0, (long)USHRT_MAX);
  return __clc_convert_ushort16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat(long x)
{
  x = __clc_clamp(x, (long)INT_MIN, (long)INT_MAX);
  return __clc_convert_int(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat(long2 x)
{
  x = __clc_clamp(x, (long)INT_MIN, (long)INT_MAX);
  return __clc_convert_int2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat(long3 x)
{
  x = __clc_clamp(x, (long)INT_MIN, (long)INT_MAX);
  return __clc_convert_int3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat(long4 x)
{
  x = __clc_clamp(x, (long)INT_MIN, (long)INT_MAX);
  return __clc_convert_int4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat(long8 x)
{
  x = __clc_clamp(x, (long)INT_MIN, (long)INT_MAX);
  return __clc_convert_int8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat(long16 x)
{
  x = __clc_clamp(x, (long)INT_MIN, (long)INT_MAX);
  return __clc_convert_int16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat(long x)
{
  x = __clc_clamp(x, (long)0, (long)UINT_MAX);
  return __clc_convert_uint(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat(long2 x)
{
  x = __clc_clamp(x, (long)0, (long)UINT_MAX);
  return __clc_convert_uint2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat(long3 x)
{
  x = __clc_clamp(x, (long)0, (long)UINT_MAX);
  return __clc_convert_uint3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat(long4 x)
{
  x = __clc_clamp(x, (long)0, (long)UINT_MAX);
  return __clc_convert_uint4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat(long8 x)
{
  x = __clc_clamp(x, (long)0, (long)UINT_MAX);
  return __clc_convert_uint8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat(long16 x)
{
  x = __clc_clamp(x, (long)0, (long)UINT_MAX);
  return __clc_convert_uint16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat(long x)
{
  return x;
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat(long2 x)
{
  return x;
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat(long3 x)
{
  return x;
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat(long4 x)
{
  return x;
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat(long8 x)
{
  return x;
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat(long16 x)
{
  return x;
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat(long x)
{
  x = __clc_max(x, (long)0);
  return __clc_convert_ulong(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat(long2 x)
{
  x = __clc_max(x, (long)0);
  return __clc_convert_ulong2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat(long3 x)
{
  x = __clc_max(x, (long)0);
  return __clc_convert_ulong3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat(long4 x)
{
  x = __clc_max(x, (long)0);
  return __clc_convert_ulong4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat(long8 x)
{
  x = __clc_max(x, (long)0);
  return __clc_convert_ulong8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat(long16 x)
{
  x = __clc_max(x, (long)0);
  return __clc_convert_ulong16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat(ulong x)
{
  x = __clc_min(x, (ulong)CHAR_MAX);
  return __clc_convert_char(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat(ulong2 x)
{
  x = __clc_min(x, (ulong)CHAR_MAX);
  return __clc_convert_char2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat(ulong3 x)
{
  x = __clc_min(x, (ulong)CHAR_MAX);
  return __clc_convert_char3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat(ulong4 x)
{
  x = __clc_min(x, (ulong)CHAR_MAX);
  return __clc_convert_char4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat(ulong8 x)
{
  x = __clc_min(x, (ulong)CHAR_MAX);
  return __clc_convert_char8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat(ulong16 x)
{
  x = __clc_min(x, (ulong)CHAR_MAX);
  return __clc_convert_char16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat(ulong x)
{
  x = __clc_min(x, (ulong)CHAR_MAX);
  return __clc_convert_schar(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat(ulong2 x)
{
  x = __clc_min(x, (ulong)CHAR_MAX);
  return __clc_convert_schar2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat(ulong3 x)
{
  x = __clc_min(x, (ulong)CHAR_MAX);
  return __clc_convert_schar3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat(ulong4 x)
{
  x = __clc_min(x, (ulong)CHAR_MAX);
  return __clc_convert_schar4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat(ulong8 x)
{
  x = __clc_min(x, (ulong)CHAR_MAX);
  return __clc_convert_schar8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat(ulong16 x)
{
  x = __clc_min(x, (ulong)CHAR_MAX);
  return __clc_convert_schar16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat(ulong x)
{
  x = __clc_min(x, (ulong)UCHAR_MAX);
  return __clc_convert_uchar(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat(ulong2 x)
{
  x = __clc_min(x, (ulong)UCHAR_MAX);
  return __clc_convert_uchar2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat(ulong3 x)
{
  x = __clc_min(x, (ulong)UCHAR_MAX);
  return __clc_convert_uchar3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat(ulong4 x)
{
  x = __clc_min(x, (ulong)UCHAR_MAX);
  return __clc_convert_uchar4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat(ulong8 x)
{
  x = __clc_min(x, (ulong)UCHAR_MAX);
  return __clc_convert_uchar8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat(ulong16 x)
{
  x = __clc_min(x, (ulong)UCHAR_MAX);
  return __clc_convert_uchar16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat(ulong x)
{
  x = __clc_min(x, (ulong)SHRT_MAX);
  return __clc_convert_short(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat(ulong2 x)
{
  x = __clc_min(x, (ulong)SHRT_MAX);
  return __clc_convert_short2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat(ulong3 x)
{
  x = __clc_min(x, (ulong)SHRT_MAX);
  return __clc_convert_short3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat(ulong4 x)
{
  x = __clc_min(x, (ulong)SHRT_MAX);
  return __clc_convert_short4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat(ulong8 x)
{
  x = __clc_min(x, (ulong)SHRT_MAX);
  return __clc_convert_short8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat(ulong16 x)
{
  x = __clc_min(x, (ulong)SHRT_MAX);
  return __clc_convert_short16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat(ulong x)
{
  x = __clc_min(x, (ulong)USHRT_MAX);
  return __clc_convert_ushort(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat(ulong2 x)
{
  x = __clc_min(x, (ulong)USHRT_MAX);
  return __clc_convert_ushort2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat(ulong3 x)
{
  x = __clc_min(x, (ulong)USHRT_MAX);
  return __clc_convert_ushort3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat(ulong4 x)
{
  x = __clc_min(x, (ulong)USHRT_MAX);
  return __clc_convert_ushort4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat(ulong8 x)
{
  x = __clc_min(x, (ulong)USHRT_MAX);
  return __clc_convert_ushort8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat(ulong16 x)
{
  x = __clc_min(x, (ulong)USHRT_MAX);
  return __clc_convert_ushort16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat(ulong x)
{
  x = __clc_min(x, (ulong)INT_MAX);
  return __clc_convert_int(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat(ulong2 x)
{
  x = __clc_min(x, (ulong)INT_MAX);
  return __clc_convert_int2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat(ulong3 x)
{
  x = __clc_min(x, (ulong)INT_MAX);
  return __clc_convert_int3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat(ulong4 x)
{
  x = __clc_min(x, (ulong)INT_MAX);
  return __clc_convert_int4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat(ulong8 x)
{
  x = __clc_min(x, (ulong)INT_MAX);
  return __clc_convert_int8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat(ulong16 x)
{
  x = __clc_min(x, (ulong)INT_MAX);
  return __clc_convert_int16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat(ulong x)
{
  x = __clc_min(x, (ulong)UINT_MAX);
  return __clc_convert_uint(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat(ulong2 x)
{
  x = __clc_min(x, (ulong)UINT_MAX);
  return __clc_convert_uint2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat(ulong3 x)
{
  x = __clc_min(x, (ulong)UINT_MAX);
  return __clc_convert_uint3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat(ulong4 x)
{
  x = __clc_min(x, (ulong)UINT_MAX);
  return __clc_convert_uint4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat(ulong8 x)
{
  x = __clc_min(x, (ulong)UINT_MAX);
  return __clc_convert_uint8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat(ulong16 x)
{
  x = __clc_min(x, (ulong)UINT_MAX);
  return __clc_convert_uint16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat(ulong x)
{
  x = __clc_min(x, (ulong)LONG_MAX);
  return __clc_convert_long(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat(ulong2 x)
{
  x = __clc_min(x, (ulong)LONG_MAX);
  return __clc_convert_long2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat(ulong3 x)
{
  x = __clc_min(x, (ulong)LONG_MAX);
  return __clc_convert_long3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat(ulong4 x)
{
  x = __clc_min(x, (ulong)LONG_MAX);
  return __clc_convert_long4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat(ulong8 x)
{
  x = __clc_min(x, (ulong)LONG_MAX);
  return __clc_convert_long8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat(ulong16 x)
{
  x = __clc_min(x, (ulong)LONG_MAX);
  return __clc_convert_long16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat(ulong x)
{
  return x;
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat(ulong2 x)
{
  return x;
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat(ulong3 x)
{
  return x;
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat(ulong4 x)
{
  return x;
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat(ulong8 x)
{
  return x;
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat(ulong16 x)
{
  return x;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat(half x)
{
  char y = __clc_convert_char(x);
  y = __clc_convert_char(x < (half)CHAR_MIN) ? y : (char)CHAR_MIN;
  y = __clc_convert_char(x > (half)CHAR_MAX) ? y : (char)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat(half2 x)
{
  char2 y = __clc_convert_char2(x);
  y = __clc_convert_char2(x < (half2)CHAR_MIN) ? y : (char2)CHAR_MIN;
  y = __clc_convert_char2(x > (half2)CHAR_MAX) ? y : (char2)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat(half3 x)
{
  char3 y = __clc_convert_char3(x);
  y = __clc_convert_char3(x < (half3)CHAR_MIN) ? y : (char3)CHAR_MIN;
  y = __clc_convert_char3(x > (half3)CHAR_MAX) ? y : (char3)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat(half4 x)
{
  char4 y = __clc_convert_char4(x);
  y = __clc_convert_char4(x < (half4)CHAR_MIN) ? y : (char4)CHAR_MIN;
  y = __clc_convert_char4(x > (half4)CHAR_MAX) ? y : (char4)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat(half8 x)
{
  char8 y = __clc_convert_char8(x);
  y = __clc_convert_char8(x < (half8)CHAR_MIN) ? y : (char8)CHAR_MIN;
  y = __clc_convert_char8(x > (half8)CHAR_MAX) ? y : (char8)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat(half16 x)
{
  char16 y = __clc_convert_char16(x);
  y = __clc_convert_char16(x < (half16)CHAR_MIN) ? y : (char16)CHAR_MIN;
  y = __clc_convert_char16(x > (half16)CHAR_MAX) ? y : (char16)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat(half x)
{
  schar y = __clc_convert_schar(x);
  y = __clc_convert_schar(x < (half)CHAR_MIN) ? y : (schar)CHAR_MIN;
  y = __clc_convert_schar(x > (half)CHAR_MAX) ? y : (schar)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat(half2 x)
{
  schar2 y = __clc_convert_schar2(x);
  y = __clc_convert_schar2(x < (half2)CHAR_MIN) ? y : (schar2)CHAR_MIN;
  y = __clc_convert_schar2(x > (half2)CHAR_MAX) ? y : (schar2)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat(half3 x)
{
  schar3 y = __clc_convert_schar3(x);
  y = __clc_convert_schar3(x < (half3)CHAR_MIN) ? y : (schar3)CHAR_MIN;
  y = __clc_convert_schar3(x > (half3)CHAR_MAX) ? y : (schar3)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat(half4 x)
{
  schar4 y = __clc_convert_schar4(x);
  y = __clc_convert_schar4(x < (half4)CHAR_MIN) ? y : (schar4)CHAR_MIN;
  y = __clc_convert_schar4(x > (half4)CHAR_MAX) ? y : (schar4)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat(half8 x)
{
  schar8 y = __clc_convert_schar8(x);
  y = __clc_convert_schar8(x < (half8)CHAR_MIN) ? y : (schar8)CHAR_MIN;
  y = __clc_convert_schar8(x > (half8)CHAR_MAX) ? y : (schar8)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat(half16 x)
{
  schar16 y = __clc_convert_schar16(x);
  y = __clc_convert_schar16(x < (half16)CHAR_MIN) ? y : (schar16)CHAR_MIN;
  y = __clc_convert_schar16(x > (half16)CHAR_MAX) ? y : (schar16)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat(half x)
{
  uchar y = __clc_convert_uchar(x);
  y = as_uchar(__clc_convert_schar(x < (half)0)) ? y : (uchar)0;
  y = as_uchar(__clc_convert_schar(x > (half)UCHAR_MAX)) ? y : (uchar)UCHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat(half2 x)
{
  uchar2 y = __clc_convert_uchar2(x);
  y = as_uchar2(__clc_convert_schar2(x < (half2)0)) ? y : (uchar2)0;
  y = as_uchar2(__clc_convert_schar2(x > (half2)UCHAR_MAX)) ? y : (uchar2)UCHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat(half3 x)
{
  uchar3 y = __clc_convert_uchar3(x);
  y = as_uchar3(__clc_convert_schar3(x < (half3)0)) ? y : (uchar3)0;
  y = as_uchar3(__clc_convert_schar3(x > (half3)UCHAR_MAX)) ? y : (uchar3)UCHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat(half4 x)
{
  uchar4 y = __clc_convert_uchar4(x);
  y = as_uchar4(__clc_convert_schar4(x < (half4)0)) ? y : (uchar4)0;
  y = as_uchar4(__clc_convert_schar4(x > (half4)UCHAR_MAX)) ? y : (uchar4)UCHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat(half8 x)
{
  uchar8 y = __clc_convert_uchar8(x);
  y = as_uchar8(__clc_convert_schar8(x < (half8)0)) ? y : (uchar8)0;
  y = as_uchar8(__clc_convert_schar8(x > (half8)UCHAR_MAX)) ? y : (uchar8)UCHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat(half16 x)
{
  uchar16 y = __clc_convert_uchar16(x);
  y = as_uchar16(__clc_convert_schar16(x < (half16)0)) ? y : (uchar16)0;
  y = as_uchar16(__clc_convert_schar16(x > (half16)UCHAR_MAX)) ? y : (uchar16)UCHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat(half x)
{
  short y = __clc_convert_short(x);
  y = __clc_convert_short(x < (half)SHRT_MIN) ? y : (short)SHRT_MIN;
  y = __clc_convert_short(x > (half)SHRT_MAX) ? y : (short)SHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat(half2 x)
{
  short2 y = __clc_convert_short2(x);
  y = __clc_convert_short2(x < (half2)SHRT_MIN) ? y : (short2)SHRT_MIN;
  y = __clc_convert_short2(x > (half2)SHRT_MAX) ? y : (short2)SHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat(half3 x)
{
  short3 y = __clc_convert_short3(x);
  y = __clc_convert_short3(x < (half3)SHRT_MIN) ? y : (short3)SHRT_MIN;
  y = __clc_convert_short3(x > (half3)SHRT_MAX) ? y : (short3)SHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat(half4 x)
{
  short4 y = __clc_convert_short4(x);
  y = __clc_convert_short4(x < (half4)SHRT_MIN) ? y : (short4)SHRT_MIN;
  y = __clc_convert_short4(x > (half4)SHRT_MAX) ? y : (short4)SHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat(half8 x)
{
  short8 y = __clc_convert_short8(x);
  y = __clc_convert_short8(x < (half8)SHRT_MIN) ? y : (short8)SHRT_MIN;
  y = __clc_convert_short8(x > (half8)SHRT_MAX) ? y : (short8)SHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat(half16 x)
{
  short16 y = __clc_convert_short16(x);
  y = __clc_convert_short16(x < (half16)SHRT_MIN) ? y : (short16)SHRT_MIN;
  y = __clc_convert_short16(x > (half16)SHRT_MAX) ? y : (short16)SHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat(half x)
{
  ushort y = __clc_convert_ushort(x);
  y = as_ushort(__clc_convert_short(x < (half)0)) ? y : (ushort)0;
  y = as_ushort(__clc_convert_short(x > (half)USHRT_MAX)) ? y : (ushort)USHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat(half2 x)
{
  ushort2 y = __clc_convert_ushort2(x);
  y = as_ushort2(__clc_convert_short2(x < (half2)0)) ? y : (ushort2)0;
  y = as_ushort2(__clc_convert_short2(x > (half2)USHRT_MAX)) ? y : (ushort2)USHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat(half3 x)
{
  ushort3 y = __clc_convert_ushort3(x);
  y = as_ushort3(__clc_convert_short3(x < (half3)0)) ? y : (ushort3)0;
  y = as_ushort3(__clc_convert_short3(x > (half3)USHRT_MAX)) ? y : (ushort3)USHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat(half4 x)
{
  ushort4 y = __clc_convert_ushort4(x);
  y = as_ushort4(__clc_convert_short4(x < (half4)0)) ? y : (ushort4)0;
  y = as_ushort4(__clc_convert_short4(x > (half4)USHRT_MAX)) ? y : (ushort4)USHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat(half8 x)
{
  ushort8 y = __clc_convert_ushort8(x);
  y = as_ushort8(__clc_convert_short8(x < (half8)0)) ? y : (ushort8)0;
  y = as_ushort8(__clc_convert_short8(x > (half8)USHRT_MAX)) ? y : (ushort8)USHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat(half16 x)
{
  ushort16 y = __clc_convert_ushort16(x);
  y = as_ushort16(__clc_convert_short16(x < (half16)0)) ? y : (ushort16)0;
  y = as_ushort16(__clc_convert_short16(x > (half16)USHRT_MAX)) ? y : (ushort16)USHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat(half x)
{
  int y = __clc_convert_int(x);
  y = __clc_convert_int(x < (half)INT_MIN) ? y : (int)INT_MIN;
  y = __clc_convert_int(x > (half)INT_MAX) ? y : (int)INT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat(half2 x)
{
  int2 y = __clc_convert_int2(x);
  y = __clc_convert_int2(x < (half2)INT_MIN) ? y : (int2)INT_MIN;
  y = __clc_convert_int2(x > (half2)INT_MAX) ? y : (int2)INT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat(half3 x)
{
  int3 y = __clc_convert_int3(x);
  y = __clc_convert_int3(x < (half3)INT_MIN) ? y : (int3)INT_MIN;
  y = __clc_convert_int3(x > (half3)INT_MAX) ? y : (int3)INT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat(half4 x)
{
  int4 y = __clc_convert_int4(x);
  y = __clc_convert_int4(x < (half4)INT_MIN) ? y : (int4)INT_MIN;
  y = __clc_convert_int4(x > (half4)INT_MAX) ? y : (int4)INT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat(half8 x)
{
  int8 y = __clc_convert_int8(x);
  y = __clc_convert_int8(x < (half8)INT_MIN) ? y : (int8)INT_MIN;
  y = __clc_convert_int8(x > (half8)INT_MAX) ? y : (int8)INT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat(half16 x)
{
  int16 y = __clc_convert_int16(x);
  y = __clc_convert_int16(x < (half16)INT_MIN) ? y : (int16)INT_MIN;
  y = __clc_convert_int16(x > (half16)INT_MAX) ? y : (int16)INT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat(half x)
{
  uint y = __clc_convert_uint(x);
  y = as_uint(__clc_convert_int(x < (half)0)) ? y : (uint)0;
  y = as_uint(__clc_convert_int(x > (half)UINT_MAX)) ? y : (uint)UINT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat(half2 x)
{
  uint2 y = __clc_convert_uint2(x);
  y = as_uint2(__clc_convert_int2(x < (half2)0)) ? y : (uint2)0;
  y = as_uint2(__clc_convert_int2(x > (half2)UINT_MAX)) ? y : (uint2)UINT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat(half3 x)
{
  uint3 y = __clc_convert_uint3(x);
  y = as_uint3(__clc_convert_int3(x < (half3)0)) ? y : (uint3)0;
  y = as_uint3(__clc_convert_int3(x > (half3)UINT_MAX)) ? y : (uint3)UINT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat(half4 x)
{
  uint4 y = __clc_convert_uint4(x);
  y = as_uint4(__clc_convert_int4(x < (half4)0)) ? y : (uint4)0;
  y = as_uint4(__clc_convert_int4(x > (half4)UINT_MAX)) ? y : (uint4)UINT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat(half8 x)
{
  uint8 y = __clc_convert_uint8(x);
  y = as_uint8(__clc_convert_int8(x < (half8)0)) ? y : (uint8)0;
  y = as_uint8(__clc_convert_int8(x > (half8)UINT_MAX)) ? y : (uint8)UINT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat(half16 x)
{
  uint16 y = __clc_convert_uint16(x);
  y = as_uint16(__clc_convert_int16(x < (half16)0)) ? y : (uint16)0;
  y = as_uint16(__clc_convert_int16(x > (half16)UINT_MAX)) ? y : (uint16)UINT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat(half x)
{
  long y = __clc_convert_long(x);
  y = __clc_convert_long(x < (half)LONG_MIN) ? y : (long)LONG_MIN;
  y = __clc_convert_long(x > (half)LONG_MAX) ? y : (long)LONG_MAX;
  return y;
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat(half2 x)
{
  long2 y = __clc_convert_long2(x);
  y = __clc_convert_long2(x < (half2)LONG_MIN) ? y : (long2)LONG_MIN;
  y = __clc_convert_long2(x > (half2)LONG_MAX) ? y : (long2)LONG_MAX;
  return y;
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat(half3 x)
{
  long3 y = __clc_convert_long3(x);
  y = __clc_convert_long3(x < (half3)LONG_MIN) ? y : (long3)LONG_MIN;
  y = __clc_convert_long3(x > (half3)LONG_MAX) ? y : (long3)LONG_MAX;
  return y;
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat(half4 x)
{
  long4 y = __clc_convert_long4(x);
  y = __clc_convert_long4(x < (half4)LONG_MIN) ? y : (long4)LONG_MIN;
  y = __clc_convert_long4(x > (half4)LONG_MAX) ? y : (long4)LONG_MAX;
  return y;
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat(half8 x)
{
  long8 y = __clc_convert_long8(x);
  y = __clc_convert_long8(x < (half8)LONG_MIN) ? y : (long8)LONG_MIN;
  y = __clc_convert_long8(x > (half8)LONG_MAX) ? y : (long8)LONG_MAX;
  return y;
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat(half16 x)
{
  long16 y = __clc_convert_long16(x);
  y = __clc_convert_long16(x < (half16)LONG_MIN) ? y : (long16)LONG_MIN;
  y = __clc_convert_long16(x > (half16)LONG_MAX) ? y : (long16)LONG_MAX;
  return y;
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat(half x)
{
  ulong y = __clc_convert_ulong(x);
  y = as_ulong(__clc_convert_long(x < (half)0)) ? y : (ulong)0;
  y = as_ulong(__clc_convert_long(x > (half)ULONG_MAX)) ? y : (ulong)ULONG_MAX;
  return y;
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat(half2 x)
{
  ulong2 y = __clc_convert_ulong2(x);
  y = as_ulong2(__clc_convert_long2(x < (half2)0)) ? y : (ulong2)0;
  y = as_ulong2(__clc_convert_long2(x > (half2)ULONG_MAX)) ? y : (ulong2)ULONG_MAX;
  return y;
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat(half3 x)
{
  ulong3 y = __clc_convert_ulong3(x);
  y = as_ulong3(__clc_convert_long3(x < (half3)0)) ? y : (ulong3)0;
  y = as_ulong3(__clc_convert_long3(x > (half3)ULONG_MAX)) ? y : (ulong3)ULONG_MAX;
  return y;
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat(half4 x)
{
  ulong4 y = __clc_convert_ulong4(x);
  y = as_ulong4(__clc_convert_long4(x < (half4)0)) ? y : (ulong4)0;
  y = as_ulong4(__clc_convert_long4(x > (half4)ULONG_MAX)) ? y : (ulong4)ULONG_MAX;
  return y;
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat(half8 x)
{
  ulong8 y = __clc_convert_ulong8(x);
  y = as_ulong8(__clc_convert_long8(x < (half8)0)) ? y : (ulong8)0;
  y = as_ulong8(__clc_convert_long8(x > (half8)ULONG_MAX)) ? y : (ulong8)ULONG_MAX;
  return y;
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat(half16 x)
{
  ulong16 y = __clc_convert_ulong16(x);
  y = as_ulong16(__clc_convert_long16(x < (half16)0)) ? y : (ulong16)0;
  y = as_ulong16(__clc_convert_long16(x > (half16)ULONG_MAX)) ? y : (ulong16)ULONG_MAX;
  return y;
}
#endif
#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat(float x)
{
  char y = __clc_convert_char(x);
  y = __clc_convert_char(x < (float)CHAR_MIN) ? y : (char)CHAR_MIN;
  y = __clc_convert_char(x > (float)CHAR_MAX) ? y : (char)CHAR_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat(float2 x)
{
  char2 y = __clc_convert_char2(x);
  y = __clc_convert_char2(x < (float2)CHAR_MIN) ? y : (char2)CHAR_MIN;
  y = __clc_convert_char2(x > (float2)CHAR_MAX) ? y : (char2)CHAR_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat(float3 x)
{
  char3 y = __clc_convert_char3(x);
  y = __clc_convert_char3(x < (float3)CHAR_MIN) ? y : (char3)CHAR_MIN;
  y = __clc_convert_char3(x > (float3)CHAR_MAX) ? y : (char3)CHAR_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat(float4 x)
{
  char4 y = __clc_convert_char4(x);
  y = __clc_convert_char4(x < (float4)CHAR_MIN) ? y : (char4)CHAR_MIN;
  y = __clc_convert_char4(x > (float4)CHAR_MAX) ? y : (char4)CHAR_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat(float8 x)
{
  char8 y = __clc_convert_char8(x);
  y = __clc_convert_char8(x < (float8)CHAR_MIN) ? y : (char8)CHAR_MIN;
  y = __clc_convert_char8(x > (float8)CHAR_MAX) ? y : (char8)CHAR_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat(float16 x)
{
  char16 y = __clc_convert_char16(x);
  y = __clc_convert_char16(x < (float16)CHAR_MIN) ? y : (char16)CHAR_MIN;
  y = __clc_convert_char16(x > (float16)CHAR_MAX) ? y : (char16)CHAR_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat(float x)
{
  schar y = __clc_convert_schar(x);
  y = __clc_convert_schar(x < (float)CHAR_MIN) ? y : (schar)CHAR_MIN;
  y = __clc_convert_schar(x > (float)CHAR_MAX) ? y : (schar)CHAR_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat(float2 x)
{
  schar2 y = __clc_convert_schar2(x);
  y = __clc_convert_schar2(x < (float2)CHAR_MIN) ? y : (schar2)CHAR_MIN;
  y = __clc_convert_schar2(x > (float2)CHAR_MAX) ? y : (schar2)CHAR_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat(float3 x)
{
  schar3 y = __clc_convert_schar3(x);
  y = __clc_convert_schar3(x < (float3)CHAR_MIN) ? y : (schar3)CHAR_MIN;
  y = __clc_convert_schar3(x > (float3)CHAR_MAX) ? y : (schar3)CHAR_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat(float4 x)
{
  schar4 y = __clc_convert_schar4(x);
  y = __clc_convert_schar4(x < (float4)CHAR_MIN) ? y : (schar4)CHAR_MIN;
  y = __clc_convert_schar4(x > (float4)CHAR_MAX) ? y : (schar4)CHAR_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat(float8 x)
{
  schar8 y = __clc_convert_schar8(x);
  y = __clc_convert_schar8(x < (float8)CHAR_MIN) ? y : (schar8)CHAR_MIN;
  y = __clc_convert_schar8(x > (float8)CHAR_MAX) ? y : (schar8)CHAR_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat(float16 x)
{
  schar16 y = __clc_convert_schar16(x);
  y = __clc_convert_schar16(x < (float16)CHAR_MIN) ? y : (schar16)CHAR_MIN;
  y = __clc_convert_schar16(x > (float16)CHAR_MAX) ? y : (schar16)CHAR_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat(float x)
{
  uchar y = __clc_convert_uchar(x);
  y = as_uchar(__clc_convert_schar(x < (float)0)) ? y : (uchar)0;
  y = as_uchar(__clc_convert_schar(x > (float)UCHAR_MAX)) ? y : (uchar)UCHAR_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat(float2 x)
{
  uchar2 y = __clc_convert_uchar2(x);
  y = as_uchar2(__clc_convert_schar2(x < (float2)0)) ? y : (uchar2)0;
  y = as_uchar2(__clc_convert_schar2(x > (float2)UCHAR_MAX)) ? y : (uchar2)UCHAR_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat(float3 x)
{
  uchar3 y = __clc_convert_uchar3(x);
  y = as_uchar3(__clc_convert_schar3(x < (float3)0)) ? y : (uchar3)0;
  y = as_uchar3(__clc_convert_schar3(x > (float3)UCHAR_MAX)) ? y : (uchar3)UCHAR_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat(float4 x)
{
  uchar4 y = __clc_convert_uchar4(x);
  y = as_uchar4(__clc_convert_schar4(x < (float4)0)) ? y : (uchar4)0;
  y = as_uchar4(__clc_convert_schar4(x > (float4)UCHAR_MAX)) ? y : (uchar4)UCHAR_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat(float8 x)
{
  uchar8 y = __clc_convert_uchar8(x);
  y = as_uchar8(__clc_convert_schar8(x < (float8)0)) ? y : (uchar8)0;
  y = as_uchar8(__clc_convert_schar8(x > (float8)UCHAR_MAX)) ? y : (uchar8)UCHAR_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat(float16 x)
{
  uchar16 y = __clc_convert_uchar16(x);
  y = as_uchar16(__clc_convert_schar16(x < (float16)0)) ? y : (uchar16)0;
  y = as_uchar16(__clc_convert_schar16(x > (float16)UCHAR_MAX)) ? y : (uchar16)UCHAR_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat(float x)
{
  short y = __clc_convert_short(x);
  y = __clc_convert_short(x < (float)SHRT_MIN) ? y : (short)SHRT_MIN;
  y = __clc_convert_short(x > (float)SHRT_MAX) ? y : (short)SHRT_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat(float2 x)
{
  short2 y = __clc_convert_short2(x);
  y = __clc_convert_short2(x < (float2)SHRT_MIN) ? y : (short2)SHRT_MIN;
  y = __clc_convert_short2(x > (float2)SHRT_MAX) ? y : (short2)SHRT_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat(float3 x)
{
  short3 y = __clc_convert_short3(x);
  y = __clc_convert_short3(x < (float3)SHRT_MIN) ? y : (short3)SHRT_MIN;
  y = __clc_convert_short3(x > (float3)SHRT_MAX) ? y : (short3)SHRT_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat(float4 x)
{
  short4 y = __clc_convert_short4(x);
  y = __clc_convert_short4(x < (float4)SHRT_MIN) ? y : (short4)SHRT_MIN;
  y = __clc_convert_short4(x > (float4)SHRT_MAX) ? y : (short4)SHRT_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat(float8 x)
{
  short8 y = __clc_convert_short8(x);
  y = __clc_convert_short8(x < (float8)SHRT_MIN) ? y : (short8)SHRT_MIN;
  y = __clc_convert_short8(x > (float8)SHRT_MAX) ? y : (short8)SHRT_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat(float16 x)
{
  short16 y = __clc_convert_short16(x);
  y = __clc_convert_short16(x < (float16)SHRT_MIN) ? y : (short16)SHRT_MIN;
  y = __clc_convert_short16(x > (float16)SHRT_MAX) ? y : (short16)SHRT_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat(float x)
{
  ushort y = __clc_convert_ushort(x);
  y = as_ushort(__clc_convert_short(x < (float)0)) ? y : (ushort)0;
  y = as_ushort(__clc_convert_short(x > (float)USHRT_MAX)) ? y : (ushort)USHRT_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat(float2 x)
{
  ushort2 y = __clc_convert_ushort2(x);
  y = as_ushort2(__clc_convert_short2(x < (float2)0)) ? y : (ushort2)0;
  y = as_ushort2(__clc_convert_short2(x > (float2)USHRT_MAX)) ? y : (ushort2)USHRT_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat(float3 x)
{
  ushort3 y = __clc_convert_ushort3(x);
  y = as_ushort3(__clc_convert_short3(x < (float3)0)) ? y : (ushort3)0;
  y = as_ushort3(__clc_convert_short3(x > (float3)USHRT_MAX)) ? y : (ushort3)USHRT_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat(float4 x)
{
  ushort4 y = __clc_convert_ushort4(x);
  y = as_ushort4(__clc_convert_short4(x < (float4)0)) ? y : (ushort4)0;
  y = as_ushort4(__clc_convert_short4(x > (float4)USHRT_MAX)) ? y : (ushort4)USHRT_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat(float8 x)
{
  ushort8 y = __clc_convert_ushort8(x);
  y = as_ushort8(__clc_convert_short8(x < (float8)0)) ? y : (ushort8)0;
  y = as_ushort8(__clc_convert_short8(x > (float8)USHRT_MAX)) ? y : (ushort8)USHRT_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat(float16 x)
{
  ushort16 y = __clc_convert_ushort16(x);
  y = as_ushort16(__clc_convert_short16(x < (float16)0)) ? y : (ushort16)0;
  y = as_ushort16(__clc_convert_short16(x > (float16)USHRT_MAX)) ? y : (ushort16)USHRT_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat(float x)
{
  int y = __clc_convert_int(x);
  y = __clc_convert_int(x < (float)INT_MIN) ? y : (int)INT_MIN;
  y = __clc_convert_int(x > (float)INT_MAX) ? y : (int)INT_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat(float2 x)
{
  int2 y = __clc_convert_int2(x);
  y = __clc_convert_int2(x < (float2)INT_MIN) ? y : (int2)INT_MIN;
  y = __clc_convert_int2(x > (float2)INT_MAX) ? y : (int2)INT_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat(float3 x)
{
  int3 y = __clc_convert_int3(x);
  y = __clc_convert_int3(x < (float3)INT_MIN) ? y : (int3)INT_MIN;
  y = __clc_convert_int3(x > (float3)INT_MAX) ? y : (int3)INT_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat(float4 x)
{
  int4 y = __clc_convert_int4(x);
  y = __clc_convert_int4(x < (float4)INT_MIN) ? y : (int4)INT_MIN;
  y = __clc_convert_int4(x > (float4)INT_MAX) ? y : (int4)INT_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat(float8 x)
{
  int8 y = __clc_convert_int8(x);
  y = __clc_convert_int8(x < (float8)INT_MIN) ? y : (int8)INT_MIN;
  y = __clc_convert_int8(x > (float8)INT_MAX) ? y : (int8)INT_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat(float16 x)
{
  int16 y = __clc_convert_int16(x);
  y = __clc_convert_int16(x < (float16)INT_MIN) ? y : (int16)INT_MIN;
  y = __clc_convert_int16(x > (float16)INT_MAX) ? y : (int16)INT_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat(float x)
{
  uint y = __clc_convert_uint(x);
  y = as_uint(__clc_convert_int(x < (float)0)) ? y : (uint)0;
  y = as_uint(__clc_convert_int(x > (float)UINT_MAX)) ? y : (uint)UINT_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat(float2 x)
{
  uint2 y = __clc_convert_uint2(x);
  y = as_uint2(__clc_convert_int2(x < (float2)0)) ? y : (uint2)0;
  y = as_uint2(__clc_convert_int2(x > (float2)UINT_MAX)) ? y : (uint2)UINT_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat(float3 x)
{
  uint3 y = __clc_convert_uint3(x);
  y = as_uint3(__clc_convert_int3(x < (float3)0)) ? y : (uint3)0;
  y = as_uint3(__clc_convert_int3(x > (float3)UINT_MAX)) ? y : (uint3)UINT_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat(float4 x)
{
  uint4 y = __clc_convert_uint4(x);
  y = as_uint4(__clc_convert_int4(x < (float4)0)) ? y : (uint4)0;
  y = as_uint4(__clc_convert_int4(x > (float4)UINT_MAX)) ? y : (uint4)UINT_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat(float8 x)
{
  uint8 y = __clc_convert_uint8(x);
  y = as_uint8(__clc_convert_int8(x < (float8)0)) ? y : (uint8)0;
  y = as_uint8(__clc_convert_int8(x > (float8)UINT_MAX)) ? y : (uint8)UINT_MAX;
  return y;
}
_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat(float16 x)
{
  uint16 y = __clc_convert_uint16(x);
  y = as_uint16(__clc_convert_int16(x < (float16)0)) ? y : (uint16)0;
  y = as_uint16(__clc_convert_int16(x > (float16)UINT_MAX)) ? y : (uint16)UINT_MAX;
  return y;
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat(float x)
{
  long y = __clc_convert_long(x);
  y = __clc_convert_long(x < (float)LONG_MIN) ? y : (long)LONG_MIN;
  y = __clc_convert_long(x > (float)LONG_MAX) ? y : (long)LONG_MAX;
  return y;
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat(float2 x)
{
  long2 y = __clc_convert_long2(x);
  y = __clc_convert_long2(x < (float2)LONG_MIN) ? y : (long2)LONG_MIN;
  y = __clc_convert_long2(x > (float2)LONG_MAX) ? y : (long2)LONG_MAX;
  return y;
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat(float3 x)
{
  long3 y = __clc_convert_long3(x);
  y = __clc_convert_long3(x < (float3)LONG_MIN) ? y : (long3)LONG_MIN;
  y = __clc_convert_long3(x > (float3)LONG_MAX) ? y : (long3)LONG_MAX;
  return y;
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat(float4 x)
{
  long4 y = __clc_convert_long4(x);
  y = __clc_convert_long4(x < (float4)LONG_MIN) ? y : (long4)LONG_MIN;
  y = __clc_convert_long4(x > (float4)LONG_MAX) ? y : (long4)LONG_MAX;
  return y;
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat(float8 x)
{
  long8 y = __clc_convert_long8(x);
  y = __clc_convert_long8(x < (float8)LONG_MIN) ? y : (long8)LONG_MIN;
  y = __clc_convert_long8(x > (float8)LONG_MAX) ? y : (long8)LONG_MAX;
  return y;
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat(float16 x)
{
  long16 y = __clc_convert_long16(x);
  y = __clc_convert_long16(x < (float16)LONG_MIN) ? y : (long16)LONG_MIN;
  y = __clc_convert_long16(x > (float16)LONG_MAX) ? y : (long16)LONG_MAX;
  return y;
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat(float x)
{
  ulong y = __clc_convert_ulong(x);
  y = as_ulong(__clc_convert_long(x < (float)0)) ? y : (ulong)0;
  y = as_ulong(__clc_convert_long(x > (float)ULONG_MAX)) ? y : (ulong)ULONG_MAX;
  return y;
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat(float2 x)
{
  ulong2 y = __clc_convert_ulong2(x);
  y = as_ulong2(__clc_convert_long2(x < (float2)0)) ? y : (ulong2)0;
  y = as_ulong2(__clc_convert_long2(x > (float2)ULONG_MAX)) ? y : (ulong2)ULONG_MAX;
  return y;
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat(float3 x)
{
  ulong3 y = __clc_convert_ulong3(x);
  y = as_ulong3(__clc_convert_long3(x < (float3)0)) ? y : (ulong3)0;
  y = as_ulong3(__clc_convert_long3(x > (float3)ULONG_MAX)) ? y : (ulong3)ULONG_MAX;
  return y;
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat(float4 x)
{
  ulong4 y = __clc_convert_ulong4(x);
  y = as_ulong4(__clc_convert_long4(x < (float4)0)) ? y : (ulong4)0;
  y = as_ulong4(__clc_convert_long4(x > (float4)ULONG_MAX)) ? y : (ulong4)ULONG_MAX;
  return y;
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat(float8 x)
{
  ulong8 y = __clc_convert_ulong8(x);
  y = as_ulong8(__clc_convert_long8(x < (float8)0)) ? y : (ulong8)0;
  y = as_ulong8(__clc_convert_long8(x > (float8)ULONG_MAX)) ? y : (ulong8)ULONG_MAX;
  return y;
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat(float16 x)
{
  ulong16 y = __clc_convert_ulong16(x);
  y = as_ulong16(__clc_convert_long16(x < (float16)0)) ? y : (ulong16)0;
  y = as_ulong16(__clc_convert_long16(x > (float16)ULONG_MAX)) ? y : (ulong16)ULONG_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat(double x)
{
  char y = __clc_convert_char(x);
  y = __clc_convert_char(x < (double)CHAR_MIN) ? y : (char)CHAR_MIN;
  y = __clc_convert_char(x > (double)CHAR_MAX) ? y : (char)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat(double2 x)
{
  char2 y = __clc_convert_char2(x);
  y = __clc_convert_char2(x < (double2)CHAR_MIN) ? y : (char2)CHAR_MIN;
  y = __clc_convert_char2(x > (double2)CHAR_MAX) ? y : (char2)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat(double3 x)
{
  char3 y = __clc_convert_char3(x);
  y = __clc_convert_char3(x < (double3)CHAR_MIN) ? y : (char3)CHAR_MIN;
  y = __clc_convert_char3(x > (double3)CHAR_MAX) ? y : (char3)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat(double4 x)
{
  char4 y = __clc_convert_char4(x);
  y = __clc_convert_char4(x < (double4)CHAR_MIN) ? y : (char4)CHAR_MIN;
  y = __clc_convert_char4(x > (double4)CHAR_MAX) ? y : (char4)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat(double8 x)
{
  char8 y = __clc_convert_char8(x);
  y = __clc_convert_char8(x < (double8)CHAR_MIN) ? y : (char8)CHAR_MIN;
  y = __clc_convert_char8(x > (double8)CHAR_MAX) ? y : (char8)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat(double16 x)
{
  char16 y = __clc_convert_char16(x);
  y = __clc_convert_char16(x < (double16)CHAR_MIN) ? y : (char16)CHAR_MIN;
  y = __clc_convert_char16(x > (double16)CHAR_MAX) ? y : (char16)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat(double x)
{
  schar y = __clc_convert_schar(x);
  y = __clc_convert_schar(x < (double)CHAR_MIN) ? y : (schar)CHAR_MIN;
  y = __clc_convert_schar(x > (double)CHAR_MAX) ? y : (schar)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat(double2 x)
{
  schar2 y = __clc_convert_schar2(x);
  y = __clc_convert_schar2(x < (double2)CHAR_MIN) ? y : (schar2)CHAR_MIN;
  y = __clc_convert_schar2(x > (double2)CHAR_MAX) ? y : (schar2)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat(double3 x)
{
  schar3 y = __clc_convert_schar3(x);
  y = __clc_convert_schar3(x < (double3)CHAR_MIN) ? y : (schar3)CHAR_MIN;
  y = __clc_convert_schar3(x > (double3)CHAR_MAX) ? y : (schar3)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat(double4 x)
{
  schar4 y = __clc_convert_schar4(x);
  y = __clc_convert_schar4(x < (double4)CHAR_MIN) ? y : (schar4)CHAR_MIN;
  y = __clc_convert_schar4(x > (double4)CHAR_MAX) ? y : (schar4)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat(double8 x)
{
  schar8 y = __clc_convert_schar8(x);
  y = __clc_convert_schar8(x < (double8)CHAR_MIN) ? y : (schar8)CHAR_MIN;
  y = __clc_convert_schar8(x > (double8)CHAR_MAX) ? y : (schar8)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat(double16 x)
{
  schar16 y = __clc_convert_schar16(x);
  y = __clc_convert_schar16(x < (double16)CHAR_MIN) ? y : (schar16)CHAR_MIN;
  y = __clc_convert_schar16(x > (double16)CHAR_MAX) ? y : (schar16)CHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat(double x)
{
  uchar y = __clc_convert_uchar(x);
  y = as_uchar(__clc_convert_schar(x < (double)0)) ? y : (uchar)0;
  y = as_uchar(__clc_convert_schar(x > (double)UCHAR_MAX)) ? y : (uchar)UCHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat(double2 x)
{
  uchar2 y = __clc_convert_uchar2(x);
  y = as_uchar2(__clc_convert_schar2(x < (double2)0)) ? y : (uchar2)0;
  y = as_uchar2(__clc_convert_schar2(x > (double2)UCHAR_MAX)) ? y : (uchar2)UCHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat(double3 x)
{
  uchar3 y = __clc_convert_uchar3(x);
  y = as_uchar3(__clc_convert_schar3(x < (double3)0)) ? y : (uchar3)0;
  y = as_uchar3(__clc_convert_schar3(x > (double3)UCHAR_MAX)) ? y : (uchar3)UCHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat(double4 x)
{
  uchar4 y = __clc_convert_uchar4(x);
  y = as_uchar4(__clc_convert_schar4(x < (double4)0)) ? y : (uchar4)0;
  y = as_uchar4(__clc_convert_schar4(x > (double4)UCHAR_MAX)) ? y : (uchar4)UCHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat(double8 x)
{
  uchar8 y = __clc_convert_uchar8(x);
  y = as_uchar8(__clc_convert_schar8(x < (double8)0)) ? y : (uchar8)0;
  y = as_uchar8(__clc_convert_schar8(x > (double8)UCHAR_MAX)) ? y : (uchar8)UCHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat(double16 x)
{
  uchar16 y = __clc_convert_uchar16(x);
  y = as_uchar16(__clc_convert_schar16(x < (double16)0)) ? y : (uchar16)0;
  y = as_uchar16(__clc_convert_schar16(x > (double16)UCHAR_MAX)) ? y : (uchar16)UCHAR_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat(double x)
{
  short y = __clc_convert_short(x);
  y = __clc_convert_short(x < (double)SHRT_MIN) ? y : (short)SHRT_MIN;
  y = __clc_convert_short(x > (double)SHRT_MAX) ? y : (short)SHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat(double2 x)
{
  short2 y = __clc_convert_short2(x);
  y = __clc_convert_short2(x < (double2)SHRT_MIN) ? y : (short2)SHRT_MIN;
  y = __clc_convert_short2(x > (double2)SHRT_MAX) ? y : (short2)SHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat(double3 x)
{
  short3 y = __clc_convert_short3(x);
  y = __clc_convert_short3(x < (double3)SHRT_MIN) ? y : (short3)SHRT_MIN;
  y = __clc_convert_short3(x > (double3)SHRT_MAX) ? y : (short3)SHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat(double4 x)
{
  short4 y = __clc_convert_short4(x);
  y = __clc_convert_short4(x < (double4)SHRT_MIN) ? y : (short4)SHRT_MIN;
  y = __clc_convert_short4(x > (double4)SHRT_MAX) ? y : (short4)SHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat(double8 x)
{
  short8 y = __clc_convert_short8(x);
  y = __clc_convert_short8(x < (double8)SHRT_MIN) ? y : (short8)SHRT_MIN;
  y = __clc_convert_short8(x > (double8)SHRT_MAX) ? y : (short8)SHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat(double16 x)
{
  short16 y = __clc_convert_short16(x);
  y = __clc_convert_short16(x < (double16)SHRT_MIN) ? y : (short16)SHRT_MIN;
  y = __clc_convert_short16(x > (double16)SHRT_MAX) ? y : (short16)SHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat(double x)
{
  ushort y = __clc_convert_ushort(x);
  y = as_ushort(__clc_convert_short(x < (double)0)) ? y : (ushort)0;
  y = as_ushort(__clc_convert_short(x > (double)USHRT_MAX)) ? y : (ushort)USHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat(double2 x)
{
  ushort2 y = __clc_convert_ushort2(x);
  y = as_ushort2(__clc_convert_short2(x < (double2)0)) ? y : (ushort2)0;
  y = as_ushort2(__clc_convert_short2(x > (double2)USHRT_MAX)) ? y : (ushort2)USHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat(double3 x)
{
  ushort3 y = __clc_convert_ushort3(x);
  y = as_ushort3(__clc_convert_short3(x < (double3)0)) ? y : (ushort3)0;
  y = as_ushort3(__clc_convert_short3(x > (double3)USHRT_MAX)) ? y : (ushort3)USHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat(double4 x)
{
  ushort4 y = __clc_convert_ushort4(x);
  y = as_ushort4(__clc_convert_short4(x < (double4)0)) ? y : (ushort4)0;
  y = as_ushort4(__clc_convert_short4(x > (double4)USHRT_MAX)) ? y : (ushort4)USHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat(double8 x)
{
  ushort8 y = __clc_convert_ushort8(x);
  y = as_ushort8(__clc_convert_short8(x < (double8)0)) ? y : (ushort8)0;
  y = as_ushort8(__clc_convert_short8(x > (double8)USHRT_MAX)) ? y : (ushort8)USHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat(double16 x)
{
  ushort16 y = __clc_convert_ushort16(x);
  y = as_ushort16(__clc_convert_short16(x < (double16)0)) ? y : (ushort16)0;
  y = as_ushort16(__clc_convert_short16(x > (double16)USHRT_MAX)) ? y : (ushort16)USHRT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat(double x)
{
  int y = __clc_convert_int(x);
  y = __clc_convert_int(x < (double)INT_MIN) ? y : (int)INT_MIN;
  y = __clc_convert_int(x > (double)INT_MAX) ? y : (int)INT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat(double2 x)
{
  int2 y = __clc_convert_int2(x);
  y = __clc_convert_int2(x < (double2)INT_MIN) ? y : (int2)INT_MIN;
  y = __clc_convert_int2(x > (double2)INT_MAX) ? y : (int2)INT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat(double3 x)
{
  int3 y = __clc_convert_int3(x);
  y = __clc_convert_int3(x < (double3)INT_MIN) ? y : (int3)INT_MIN;
  y = __clc_convert_int3(x > (double3)INT_MAX) ? y : (int3)INT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat(double4 x)
{
  int4 y = __clc_convert_int4(x);
  y = __clc_convert_int4(x < (double4)INT_MIN) ? y : (int4)INT_MIN;
  y = __clc_convert_int4(x > (double4)INT_MAX) ? y : (int4)INT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat(double8 x)
{
  int8 y = __clc_convert_int8(x);
  y = __clc_convert_int8(x < (double8)INT_MIN) ? y : (int8)INT_MIN;
  y = __clc_convert_int8(x > (double8)INT_MAX) ? y : (int8)INT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat(double16 x)
{
  int16 y = __clc_convert_int16(x);
  y = __clc_convert_int16(x < (double16)INT_MIN) ? y : (int16)INT_MIN;
  y = __clc_convert_int16(x > (double16)INT_MAX) ? y : (int16)INT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat(double x)
{
  uint y = __clc_convert_uint(x);
  y = as_uint(__clc_convert_int(x < (double)0)) ? y : (uint)0;
  y = as_uint(__clc_convert_int(x > (double)UINT_MAX)) ? y : (uint)UINT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat(double2 x)
{
  uint2 y = __clc_convert_uint2(x);
  y = as_uint2(__clc_convert_int2(x < (double2)0)) ? y : (uint2)0;
  y = as_uint2(__clc_convert_int2(x > (double2)UINT_MAX)) ? y : (uint2)UINT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat(double3 x)
{
  uint3 y = __clc_convert_uint3(x);
  y = as_uint3(__clc_convert_int3(x < (double3)0)) ? y : (uint3)0;
  y = as_uint3(__clc_convert_int3(x > (double3)UINT_MAX)) ? y : (uint3)UINT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat(double4 x)
{
  uint4 y = __clc_convert_uint4(x);
  y = as_uint4(__clc_convert_int4(x < (double4)0)) ? y : (uint4)0;
  y = as_uint4(__clc_convert_int4(x > (double4)UINT_MAX)) ? y : (uint4)UINT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat(double8 x)
{
  uint8 y = __clc_convert_uint8(x);
  y = as_uint8(__clc_convert_int8(x < (double8)0)) ? y : (uint8)0;
  y = as_uint8(__clc_convert_int8(x > (double8)UINT_MAX)) ? y : (uint8)UINT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat(double16 x)
{
  uint16 y = __clc_convert_uint16(x);
  y = as_uint16(__clc_convert_int16(x < (double16)0)) ? y : (uint16)0;
  y = as_uint16(__clc_convert_int16(x > (double16)UINT_MAX)) ? y : (uint16)UINT_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat(double x)
{
  long y = __clc_convert_long(x);
  y = __clc_convert_long(x < (double)LONG_MIN) ? y : (long)LONG_MIN;
  y = __clc_convert_long(x > (double)LONG_MAX) ? y : (long)LONG_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat(double2 x)
{
  long2 y = __clc_convert_long2(x);
  y = __clc_convert_long2(x < (double2)LONG_MIN) ? y : (long2)LONG_MIN;
  y = __clc_convert_long2(x > (double2)LONG_MAX) ? y : (long2)LONG_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat(double3 x)
{
  long3 y = __clc_convert_long3(x);
  y = __clc_convert_long3(x < (double3)LONG_MIN) ? y : (long3)LONG_MIN;
  y = __clc_convert_long3(x > (double3)LONG_MAX) ? y : (long3)LONG_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat(double4 x)
{
  long4 y = __clc_convert_long4(x);
  y = __clc_convert_long4(x < (double4)LONG_MIN) ? y : (long4)LONG_MIN;
  y = __clc_convert_long4(x > (double4)LONG_MAX) ? y : (long4)LONG_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat(double8 x)
{
  long8 y = __clc_convert_long8(x);
  y = __clc_convert_long8(x < (double8)LONG_MIN) ? y : (long8)LONG_MIN;
  y = __clc_convert_long8(x > (double8)LONG_MAX) ? y : (long8)LONG_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat(double16 x)
{
  long16 y = __clc_convert_long16(x);
  y = __clc_convert_long16(x < (double16)LONG_MIN) ? y : (long16)LONG_MIN;
  y = __clc_convert_long16(x > (double16)LONG_MAX) ? y : (long16)LONG_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat(double x)
{
  ulong y = __clc_convert_ulong(x);
  y = as_ulong(__clc_convert_long(x < (double)0)) ? y : (ulong)0;
  y = as_ulong(__clc_convert_long(x > (double)ULONG_MAX)) ? y : (ulong)ULONG_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat(double2 x)
{
  ulong2 y = __clc_convert_ulong2(x);
  y = as_ulong2(__clc_convert_long2(x < (double2)0)) ? y : (ulong2)0;
  y = as_ulong2(__clc_convert_long2(x > (double2)ULONG_MAX)) ? y : (ulong2)ULONG_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat(double3 x)
{
  ulong3 y = __clc_convert_ulong3(x);
  y = as_ulong3(__clc_convert_long3(x < (double3)0)) ? y : (ulong3)0;
  y = as_ulong3(__clc_convert_long3(x > (double3)ULONG_MAX)) ? y : (ulong3)ULONG_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat(double4 x)
{
  ulong4 y = __clc_convert_ulong4(x);
  y = as_ulong4(__clc_convert_long4(x < (double4)0)) ? y : (ulong4)0;
  y = as_ulong4(__clc_convert_long4(x > (double4)ULONG_MAX)) ? y : (ulong4)ULONG_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat(double8 x)
{
  ulong8 y = __clc_convert_ulong8(x);
  y = as_ulong8(__clc_convert_long8(x < (double8)0)) ? y : (ulong8)0;
  y = as_ulong8(__clc_convert_long8(x > (double8)ULONG_MAX)) ? y : (ulong8)ULONG_MAX;
  return y;
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat(double16 x)
{
  ulong16 y = __clc_convert_ulong16(x);
  y = as_ulong16(__clc_convert_long16(x < (double16)0)) ? y : (ulong16)0;
  y = as_ulong16(__clc_convert_long16(x > (double16)ULONG_MAX)) ? y : (ulong16)ULONG_MAX;
  return y;
}
#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtz(char x)
{
  return __clc_convert_char_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rte(char x)
{
  return __clc_convert_char_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtp(char x)
{
  return __clc_convert_char_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtn(char x)
{
  return __clc_convert_char_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtz(char2 x)
{
  return __clc_convert_char2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rte(char2 x)
{
  return __clc_convert_char2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtp(char2 x)
{
  return __clc_convert_char2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtn(char2 x)
{
  return __clc_convert_char2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtz(char3 x)
{
  return __clc_convert_char3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rte(char3 x)
{
  return __clc_convert_char3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtp(char3 x)
{
  return __clc_convert_char3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtn(char3 x)
{
  return __clc_convert_char3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtz(char4 x)
{
  return __clc_convert_char4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rte(char4 x)
{
  return __clc_convert_char4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtp(char4 x)
{
  return __clc_convert_char4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtn(char4 x)
{
  return __clc_convert_char4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtz(char8 x)
{
  return __clc_convert_char8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rte(char8 x)
{
  return __clc_convert_char8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtp(char8 x)
{
  return __clc_convert_char8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtn(char8 x)
{
  return __clc_convert_char8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtz(char16 x)
{
  return __clc_convert_char16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rte(char16 x)
{
  return __clc_convert_char16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtp(char16 x)
{
  return __clc_convert_char16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtn(char16 x)
{
  return __clc_convert_char16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtz(char x)
{
  return __clc_convert_schar_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rte(char x)
{
  return __clc_convert_schar_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtp(char x)
{
  return __clc_convert_schar_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtn(char x)
{
  return __clc_convert_schar_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtz(char2 x)
{
  return __clc_convert_schar2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rte(char2 x)
{
  return __clc_convert_schar2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtp(char2 x)
{
  return __clc_convert_schar2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtn(char2 x)
{
  return __clc_convert_schar2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtz(char3 x)
{
  return __clc_convert_schar3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rte(char3 x)
{
  return __clc_convert_schar3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtp(char3 x)
{
  return __clc_convert_schar3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtn(char3 x)
{
  return __clc_convert_schar3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtz(char4 x)
{
  return __clc_convert_schar4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rte(char4 x)
{
  return __clc_convert_schar4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtp(char4 x)
{
  return __clc_convert_schar4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtn(char4 x)
{
  return __clc_convert_schar4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtz(char8 x)
{
  return __clc_convert_schar8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rte(char8 x)
{
  return __clc_convert_schar8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtp(char8 x)
{
  return __clc_convert_schar8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtn(char8 x)
{
  return __clc_convert_schar8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtz(char16 x)
{
  return __clc_convert_schar16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rte(char16 x)
{
  return __clc_convert_schar16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtp(char16 x)
{
  return __clc_convert_schar16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtn(char16 x)
{
  return __clc_convert_schar16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtz(char x)
{
  return __clc_convert_uchar_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rte(char x)
{
  return __clc_convert_uchar_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtp(char x)
{
  return __clc_convert_uchar_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtn(char x)
{
  return __clc_convert_uchar_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtz(char2 x)
{
  return __clc_convert_uchar2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rte(char2 x)
{
  return __clc_convert_uchar2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtp(char2 x)
{
  return __clc_convert_uchar2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtn(char2 x)
{
  return __clc_convert_uchar2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtz(char3 x)
{
  return __clc_convert_uchar3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rte(char3 x)
{
  return __clc_convert_uchar3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtp(char3 x)
{
  return __clc_convert_uchar3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtn(char3 x)
{
  return __clc_convert_uchar3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtz(char4 x)
{
  return __clc_convert_uchar4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rte(char4 x)
{
  return __clc_convert_uchar4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtp(char4 x)
{
  return __clc_convert_uchar4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtn(char4 x)
{
  return __clc_convert_uchar4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtz(char8 x)
{
  return __clc_convert_uchar8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rte(char8 x)
{
  return __clc_convert_uchar8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtp(char8 x)
{
  return __clc_convert_uchar8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtn(char8 x)
{
  return __clc_convert_uchar8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtz(char16 x)
{
  return __clc_convert_uchar16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rte(char16 x)
{
  return __clc_convert_uchar16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtp(char16 x)
{
  return __clc_convert_uchar16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtn(char16 x)
{
  return __clc_convert_uchar16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtz(char x)
{
  return __clc_convert_short_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rte(char x)
{
  return __clc_convert_short_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtp(char x)
{
  return __clc_convert_short_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtn(char x)
{
  return __clc_convert_short_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtz(char2 x)
{
  return __clc_convert_short2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rte(char2 x)
{
  return __clc_convert_short2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtp(char2 x)
{
  return __clc_convert_short2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtn(char2 x)
{
  return __clc_convert_short2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtz(char3 x)
{
  return __clc_convert_short3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rte(char3 x)
{
  return __clc_convert_short3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtp(char3 x)
{
  return __clc_convert_short3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtn(char3 x)
{
  return __clc_convert_short3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtz(char4 x)
{
  return __clc_convert_short4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rte(char4 x)
{
  return __clc_convert_short4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtp(char4 x)
{
  return __clc_convert_short4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtn(char4 x)
{
  return __clc_convert_short4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtz(char8 x)
{
  return __clc_convert_short8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rte(char8 x)
{
  return __clc_convert_short8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtp(char8 x)
{
  return __clc_convert_short8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtn(char8 x)
{
  return __clc_convert_short8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtz(char16 x)
{
  return __clc_convert_short16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rte(char16 x)
{
  return __clc_convert_short16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtp(char16 x)
{
  return __clc_convert_short16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtn(char16 x)
{
  return __clc_convert_short16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtz(char x)
{
  return __clc_convert_ushort_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rte(char x)
{
  return __clc_convert_ushort_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtp(char x)
{
  return __clc_convert_ushort_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtn(char x)
{
  return __clc_convert_ushort_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtz(char2 x)
{
  return __clc_convert_ushort2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rte(char2 x)
{
  return __clc_convert_ushort2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtp(char2 x)
{
  return __clc_convert_ushort2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtn(char2 x)
{
  return __clc_convert_ushort2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtz(char3 x)
{
  return __clc_convert_ushort3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rte(char3 x)
{
  return __clc_convert_ushort3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtp(char3 x)
{
  return __clc_convert_ushort3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtn(char3 x)
{
  return __clc_convert_ushort3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtz(char4 x)
{
  return __clc_convert_ushort4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rte(char4 x)
{
  return __clc_convert_ushort4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtp(char4 x)
{
  return __clc_convert_ushort4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtn(char4 x)
{
  return __clc_convert_ushort4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtz(char8 x)
{
  return __clc_convert_ushort8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rte(char8 x)
{
  return __clc_convert_ushort8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtp(char8 x)
{
  return __clc_convert_ushort8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtn(char8 x)
{
  return __clc_convert_ushort8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtz(char16 x)
{
  return __clc_convert_ushort16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rte(char16 x)
{
  return __clc_convert_ushort16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtp(char16 x)
{
  return __clc_convert_ushort16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtn(char16 x)
{
  return __clc_convert_ushort16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtz(char x)
{
  return __clc_convert_int_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rte(char x)
{
  return __clc_convert_int_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtp(char x)
{
  return __clc_convert_int_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtn(char x)
{
  return __clc_convert_int_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtz(char2 x)
{
  return __clc_convert_int2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rte(char2 x)
{
  return __clc_convert_int2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtp(char2 x)
{
  return __clc_convert_int2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtn(char2 x)
{
  return __clc_convert_int2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtz(char3 x)
{
  return __clc_convert_int3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rte(char3 x)
{
  return __clc_convert_int3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtp(char3 x)
{
  return __clc_convert_int3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtn(char3 x)
{
  return __clc_convert_int3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtz(char4 x)
{
  return __clc_convert_int4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rte(char4 x)
{
  return __clc_convert_int4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtp(char4 x)
{
  return __clc_convert_int4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtn(char4 x)
{
  return __clc_convert_int4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtz(char8 x)
{
  return __clc_convert_int8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rte(char8 x)
{
  return __clc_convert_int8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtp(char8 x)
{
  return __clc_convert_int8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtn(char8 x)
{
  return __clc_convert_int8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtz(char16 x)
{
  return __clc_convert_int16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rte(char16 x)
{
  return __clc_convert_int16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtp(char16 x)
{
  return __clc_convert_int16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtn(char16 x)
{
  return __clc_convert_int16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtz(char x)
{
  return __clc_convert_uint_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rte(char x)
{
  return __clc_convert_uint_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtp(char x)
{
  return __clc_convert_uint_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtn(char x)
{
  return __clc_convert_uint_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtz(char2 x)
{
  return __clc_convert_uint2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rte(char2 x)
{
  return __clc_convert_uint2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtp(char2 x)
{
  return __clc_convert_uint2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtn(char2 x)
{
  return __clc_convert_uint2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtz(char3 x)
{
  return __clc_convert_uint3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rte(char3 x)
{
  return __clc_convert_uint3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtp(char3 x)
{
  return __clc_convert_uint3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtn(char3 x)
{
  return __clc_convert_uint3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtz(char4 x)
{
  return __clc_convert_uint4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rte(char4 x)
{
  return __clc_convert_uint4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtp(char4 x)
{
  return __clc_convert_uint4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtn(char4 x)
{
  return __clc_convert_uint4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtz(char8 x)
{
  return __clc_convert_uint8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rte(char8 x)
{
  return __clc_convert_uint8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtp(char8 x)
{
  return __clc_convert_uint8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtn(char8 x)
{
  return __clc_convert_uint8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtz(char16 x)
{
  return __clc_convert_uint16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rte(char16 x)
{
  return __clc_convert_uint16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtp(char16 x)
{
  return __clc_convert_uint16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtn(char16 x)
{
  return __clc_convert_uint16_rtn(x);
}

#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtz(char x)
{
  return __clc_convert_long_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rte(char x)
{
  return __clc_convert_long_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtp(char x)
{
  return __clc_convert_long_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtn(char x)
{
  return __clc_convert_long_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtz(char2 x)
{
  return __clc_convert_long2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rte(char2 x)
{
  return __clc_convert_long2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtp(char2 x)
{
  return __clc_convert_long2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtn(char2 x)
{
  return __clc_convert_long2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtz(char3 x)
{
  return __clc_convert_long3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rte(char3 x)
{
  return __clc_convert_long3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtp(char3 x)
{
  return __clc_convert_long3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtn(char3 x)
{
  return __clc_convert_long3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtz(char4 x)
{
  return __clc_convert_long4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rte(char4 x)
{
  return __clc_convert_long4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtp(char4 x)
{
  return __clc_convert_long4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtn(char4 x)
{
  return __clc_convert_long4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtz(char8 x)
{
  return __clc_convert_long8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rte(char8 x)
{
  return __clc_convert_long8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtp(char8 x)
{
  return __clc_convert_long8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtn(char8 x)
{
  return __clc_convert_long8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtz(char16 x)
{
  return __clc_convert_long16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rte(char16 x)
{
  return __clc_convert_long16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtp(char16 x)
{
  return __clc_convert_long16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtn(char16 x)
{
  return __clc_convert_long16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtz(char x)
{
  return __clc_convert_ulong_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rte(char x)
{
  return __clc_convert_ulong_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtp(char x)
{
  return __clc_convert_ulong_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtn(char x)
{
  return __clc_convert_ulong_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtz(char2 x)
{
  return __clc_convert_ulong2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rte(char2 x)
{
  return __clc_convert_ulong2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtp(char2 x)
{
  return __clc_convert_ulong2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtn(char2 x)
{
  return __clc_convert_ulong2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtz(char3 x)
{
  return __clc_convert_ulong3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rte(char3 x)
{
  return __clc_convert_ulong3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtp(char3 x)
{
  return __clc_convert_ulong3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtn(char3 x)
{
  return __clc_convert_ulong3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtz(char4 x)
{
  return __clc_convert_ulong4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rte(char4 x)
{
  return __clc_convert_ulong4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtp(char4 x)
{
  return __clc_convert_ulong4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtn(char4 x)
{
  return __clc_convert_ulong4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtz(char8 x)
{
  return __clc_convert_ulong8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rte(char8 x)
{
  return __clc_convert_ulong8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtp(char8 x)
{
  return __clc_convert_ulong8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtn(char8 x)
{
  return __clc_convert_ulong8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtz(char16 x)
{
  return __clc_convert_ulong16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rte(char16 x)
{
  return __clc_convert_ulong16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtp(char16 x)
{
  return __clc_convert_ulong16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtn(char16 x)
{
  return __clc_convert_ulong16_rtn(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtz(schar x)
{
  return __clc_convert_char_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rte(schar x)
{
  return __clc_convert_char_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtp(schar x)
{
  return __clc_convert_char_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtn(schar x)
{
  return __clc_convert_char_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtz(schar2 x)
{
  return __clc_convert_char2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rte(schar2 x)
{
  return __clc_convert_char2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtp(schar2 x)
{
  return __clc_convert_char2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtn(schar2 x)
{
  return __clc_convert_char2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtz(schar3 x)
{
  return __clc_convert_char3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rte(schar3 x)
{
  return __clc_convert_char3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtp(schar3 x)
{
  return __clc_convert_char3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtn(schar3 x)
{
  return __clc_convert_char3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtz(schar4 x)
{
  return __clc_convert_char4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rte(schar4 x)
{
  return __clc_convert_char4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtp(schar4 x)
{
  return __clc_convert_char4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtn(schar4 x)
{
  return __clc_convert_char4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtz(schar8 x)
{
  return __clc_convert_char8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rte(schar8 x)
{
  return __clc_convert_char8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtp(schar8 x)
{
  return __clc_convert_char8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtn(schar8 x)
{
  return __clc_convert_char8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtz(schar16 x)
{
  return __clc_convert_char16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rte(schar16 x)
{
  return __clc_convert_char16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtp(schar16 x)
{
  return __clc_convert_char16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtn(schar16 x)
{
  return __clc_convert_char16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtz(schar x)
{
  return __clc_convert_schar_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rte(schar x)
{
  return __clc_convert_schar_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtp(schar x)
{
  return __clc_convert_schar_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtn(schar x)
{
  return __clc_convert_schar_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtz(schar2 x)
{
  return __clc_convert_schar2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rte(schar2 x)
{
  return __clc_convert_schar2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtp(schar2 x)
{
  return __clc_convert_schar2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtn(schar2 x)
{
  return __clc_convert_schar2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtz(schar3 x)
{
  return __clc_convert_schar3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rte(schar3 x)
{
  return __clc_convert_schar3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtp(schar3 x)
{
  return __clc_convert_schar3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtn(schar3 x)
{
  return __clc_convert_schar3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtz(schar4 x)
{
  return __clc_convert_schar4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rte(schar4 x)
{
  return __clc_convert_schar4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtp(schar4 x)
{
  return __clc_convert_schar4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtn(schar4 x)
{
  return __clc_convert_schar4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtz(schar8 x)
{
  return __clc_convert_schar8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rte(schar8 x)
{
  return __clc_convert_schar8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtp(schar8 x)
{
  return __clc_convert_schar8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtn(schar8 x)
{
  return __clc_convert_schar8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtz(schar16 x)
{
  return __clc_convert_schar16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rte(schar16 x)
{
  return __clc_convert_schar16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtp(schar16 x)
{
  return __clc_convert_schar16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtn(schar16 x)
{
  return __clc_convert_schar16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtz(schar x)
{
  return __clc_convert_uchar_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rte(schar x)
{
  return __clc_convert_uchar_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtp(schar x)
{
  return __clc_convert_uchar_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtn(schar x)
{
  return __clc_convert_uchar_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtz(schar2 x)
{
  return __clc_convert_uchar2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rte(schar2 x)
{
  return __clc_convert_uchar2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtp(schar2 x)
{
  return __clc_convert_uchar2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtn(schar2 x)
{
  return __clc_convert_uchar2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtz(schar3 x)
{
  return __clc_convert_uchar3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rte(schar3 x)
{
  return __clc_convert_uchar3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtp(schar3 x)
{
  return __clc_convert_uchar3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtn(schar3 x)
{
  return __clc_convert_uchar3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtz(schar4 x)
{
  return __clc_convert_uchar4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rte(schar4 x)
{
  return __clc_convert_uchar4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtp(schar4 x)
{
  return __clc_convert_uchar4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtn(schar4 x)
{
  return __clc_convert_uchar4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtz(schar8 x)
{
  return __clc_convert_uchar8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rte(schar8 x)
{
  return __clc_convert_uchar8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtp(schar8 x)
{
  return __clc_convert_uchar8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtn(schar8 x)
{
  return __clc_convert_uchar8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtz(schar16 x)
{
  return __clc_convert_uchar16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rte(schar16 x)
{
  return __clc_convert_uchar16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtp(schar16 x)
{
  return __clc_convert_uchar16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtn(schar16 x)
{
  return __clc_convert_uchar16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtz(schar x)
{
  return __clc_convert_short_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rte(schar x)
{
  return __clc_convert_short_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtp(schar x)
{
  return __clc_convert_short_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtn(schar x)
{
  return __clc_convert_short_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtz(schar2 x)
{
  return __clc_convert_short2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rte(schar2 x)
{
  return __clc_convert_short2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtp(schar2 x)
{
  return __clc_convert_short2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtn(schar2 x)
{
  return __clc_convert_short2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtz(schar3 x)
{
  return __clc_convert_short3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rte(schar3 x)
{
  return __clc_convert_short3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtp(schar3 x)
{
  return __clc_convert_short3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtn(schar3 x)
{
  return __clc_convert_short3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtz(schar4 x)
{
  return __clc_convert_short4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rte(schar4 x)
{
  return __clc_convert_short4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtp(schar4 x)
{
  return __clc_convert_short4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtn(schar4 x)
{
  return __clc_convert_short4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtz(schar8 x)
{
  return __clc_convert_short8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rte(schar8 x)
{
  return __clc_convert_short8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtp(schar8 x)
{
  return __clc_convert_short8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtn(schar8 x)
{
  return __clc_convert_short8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtz(schar16 x)
{
  return __clc_convert_short16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rte(schar16 x)
{
  return __clc_convert_short16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtp(schar16 x)
{
  return __clc_convert_short16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtn(schar16 x)
{
  return __clc_convert_short16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtz(schar x)
{
  return __clc_convert_ushort_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rte(schar x)
{
  return __clc_convert_ushort_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtp(schar x)
{
  return __clc_convert_ushort_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtn(schar x)
{
  return __clc_convert_ushort_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtz(schar2 x)
{
  return __clc_convert_ushort2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rte(schar2 x)
{
  return __clc_convert_ushort2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtp(schar2 x)
{
  return __clc_convert_ushort2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtn(schar2 x)
{
  return __clc_convert_ushort2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtz(schar3 x)
{
  return __clc_convert_ushort3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rte(schar3 x)
{
  return __clc_convert_ushort3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtp(schar3 x)
{
  return __clc_convert_ushort3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtn(schar3 x)
{
  return __clc_convert_ushort3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtz(schar4 x)
{
  return __clc_convert_ushort4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rte(schar4 x)
{
  return __clc_convert_ushort4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtp(schar4 x)
{
  return __clc_convert_ushort4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtn(schar4 x)
{
  return __clc_convert_ushort4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtz(schar8 x)
{
  return __clc_convert_ushort8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rte(schar8 x)
{
  return __clc_convert_ushort8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtp(schar8 x)
{
  return __clc_convert_ushort8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtn(schar8 x)
{
  return __clc_convert_ushort8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtz(schar16 x)
{
  return __clc_convert_ushort16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rte(schar16 x)
{
  return __clc_convert_ushort16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtp(schar16 x)
{
  return __clc_convert_ushort16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtn(schar16 x)
{
  return __clc_convert_ushort16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtz(schar x)
{
  return __clc_convert_int_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rte(schar x)
{
  return __clc_convert_int_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtp(schar x)
{
  return __clc_convert_int_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtn(schar x)
{
  return __clc_convert_int_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtz(schar2 x)
{
  return __clc_convert_int2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rte(schar2 x)
{
  return __clc_convert_int2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtp(schar2 x)
{
  return __clc_convert_int2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtn(schar2 x)
{
  return __clc_convert_int2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtz(schar3 x)
{
  return __clc_convert_int3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rte(schar3 x)
{
  return __clc_convert_int3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtp(schar3 x)
{
  return __clc_convert_int3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtn(schar3 x)
{
  return __clc_convert_int3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtz(schar4 x)
{
  return __clc_convert_int4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rte(schar4 x)
{
  return __clc_convert_int4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtp(schar4 x)
{
  return __clc_convert_int4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtn(schar4 x)
{
  return __clc_convert_int4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtz(schar8 x)
{
  return __clc_convert_int8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rte(schar8 x)
{
  return __clc_convert_int8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtp(schar8 x)
{
  return __clc_convert_int8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtn(schar8 x)
{
  return __clc_convert_int8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtz(schar16 x)
{
  return __clc_convert_int16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rte(schar16 x)
{
  return __clc_convert_int16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtp(schar16 x)
{
  return __clc_convert_int16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtn(schar16 x)
{
  return __clc_convert_int16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtz(schar x)
{
  return __clc_convert_uint_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rte(schar x)
{
  return __clc_convert_uint_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtp(schar x)
{
  return __clc_convert_uint_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtn(schar x)
{
  return __clc_convert_uint_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtz(schar2 x)
{
  return __clc_convert_uint2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rte(schar2 x)
{
  return __clc_convert_uint2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtp(schar2 x)
{
  return __clc_convert_uint2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtn(schar2 x)
{
  return __clc_convert_uint2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtz(schar3 x)
{
  return __clc_convert_uint3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rte(schar3 x)
{
  return __clc_convert_uint3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtp(schar3 x)
{
  return __clc_convert_uint3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtn(schar3 x)
{
  return __clc_convert_uint3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtz(schar4 x)
{
  return __clc_convert_uint4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rte(schar4 x)
{
  return __clc_convert_uint4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtp(schar4 x)
{
  return __clc_convert_uint4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtn(schar4 x)
{
  return __clc_convert_uint4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtz(schar8 x)
{
  return __clc_convert_uint8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rte(schar8 x)
{
  return __clc_convert_uint8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtp(schar8 x)
{
  return __clc_convert_uint8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtn(schar8 x)
{
  return __clc_convert_uint8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtz(schar16 x)
{
  return __clc_convert_uint16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rte(schar16 x)
{
  return __clc_convert_uint16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtp(schar16 x)
{
  return __clc_convert_uint16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtn(schar16 x)
{
  return __clc_convert_uint16_rtn(x);
}

#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtz(schar x)
{
  return __clc_convert_long_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rte(schar x)
{
  return __clc_convert_long_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtp(schar x)
{
  return __clc_convert_long_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtn(schar x)
{
  return __clc_convert_long_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtz(schar2 x)
{
  return __clc_convert_long2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rte(schar2 x)
{
  return __clc_convert_long2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtp(schar2 x)
{
  return __clc_convert_long2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtn(schar2 x)
{
  return __clc_convert_long2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtz(schar3 x)
{
  return __clc_convert_long3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rte(schar3 x)
{
  return __clc_convert_long3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtp(schar3 x)
{
  return __clc_convert_long3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtn(schar3 x)
{
  return __clc_convert_long3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtz(schar4 x)
{
  return __clc_convert_long4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rte(schar4 x)
{
  return __clc_convert_long4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtp(schar4 x)
{
  return __clc_convert_long4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtn(schar4 x)
{
  return __clc_convert_long4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtz(schar8 x)
{
  return __clc_convert_long8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rte(schar8 x)
{
  return __clc_convert_long8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtp(schar8 x)
{
  return __clc_convert_long8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtn(schar8 x)
{
  return __clc_convert_long8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtz(schar16 x)
{
  return __clc_convert_long16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rte(schar16 x)
{
  return __clc_convert_long16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtp(schar16 x)
{
  return __clc_convert_long16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtn(schar16 x)
{
  return __clc_convert_long16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtz(schar x)
{
  return __clc_convert_ulong_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rte(schar x)
{
  return __clc_convert_ulong_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtp(schar x)
{
  return __clc_convert_ulong_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtn(schar x)
{
  return __clc_convert_ulong_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtz(schar2 x)
{
  return __clc_convert_ulong2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rte(schar2 x)
{
  return __clc_convert_ulong2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtp(schar2 x)
{
  return __clc_convert_ulong2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtn(schar2 x)
{
  return __clc_convert_ulong2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtz(schar3 x)
{
  return __clc_convert_ulong3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rte(schar3 x)
{
  return __clc_convert_ulong3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtp(schar3 x)
{
  return __clc_convert_ulong3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtn(schar3 x)
{
  return __clc_convert_ulong3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtz(schar4 x)
{
  return __clc_convert_ulong4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rte(schar4 x)
{
  return __clc_convert_ulong4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtp(schar4 x)
{
  return __clc_convert_ulong4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtn(schar4 x)
{
  return __clc_convert_ulong4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtz(schar8 x)
{
  return __clc_convert_ulong8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rte(schar8 x)
{
  return __clc_convert_ulong8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtp(schar8 x)
{
  return __clc_convert_ulong8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtn(schar8 x)
{
  return __clc_convert_ulong8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtz(schar16 x)
{
  return __clc_convert_ulong16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rte(schar16 x)
{
  return __clc_convert_ulong16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtp(schar16 x)
{
  return __clc_convert_ulong16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtn(schar16 x)
{
  return __clc_convert_ulong16_rtn(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtz(uchar x)
{
  return __clc_convert_char_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rte(uchar x)
{
  return __clc_convert_char_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtp(uchar x)
{
  return __clc_convert_char_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtn(uchar x)
{
  return __clc_convert_char_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtz(uchar2 x)
{
  return __clc_convert_char2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rte(uchar2 x)
{
  return __clc_convert_char2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtp(uchar2 x)
{
  return __clc_convert_char2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtn(uchar2 x)
{
  return __clc_convert_char2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtz(uchar3 x)
{
  return __clc_convert_char3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rte(uchar3 x)
{
  return __clc_convert_char3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtp(uchar3 x)
{
  return __clc_convert_char3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtn(uchar3 x)
{
  return __clc_convert_char3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtz(uchar4 x)
{
  return __clc_convert_char4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rte(uchar4 x)
{
  return __clc_convert_char4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtp(uchar4 x)
{
  return __clc_convert_char4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtn(uchar4 x)
{
  return __clc_convert_char4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtz(uchar8 x)
{
  return __clc_convert_char8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rte(uchar8 x)
{
  return __clc_convert_char8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtp(uchar8 x)
{
  return __clc_convert_char8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtn(uchar8 x)
{
  return __clc_convert_char8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtz(uchar16 x)
{
  return __clc_convert_char16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rte(uchar16 x)
{
  return __clc_convert_char16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtp(uchar16 x)
{
  return __clc_convert_char16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtn(uchar16 x)
{
  return __clc_convert_char16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtz(uchar x)
{
  return __clc_convert_schar_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rte(uchar x)
{
  return __clc_convert_schar_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtp(uchar x)
{
  return __clc_convert_schar_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtn(uchar x)
{
  return __clc_convert_schar_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtz(uchar2 x)
{
  return __clc_convert_schar2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rte(uchar2 x)
{
  return __clc_convert_schar2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtp(uchar2 x)
{
  return __clc_convert_schar2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtn(uchar2 x)
{
  return __clc_convert_schar2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtz(uchar3 x)
{
  return __clc_convert_schar3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rte(uchar3 x)
{
  return __clc_convert_schar3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtp(uchar3 x)
{
  return __clc_convert_schar3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtn(uchar3 x)
{
  return __clc_convert_schar3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtz(uchar4 x)
{
  return __clc_convert_schar4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rte(uchar4 x)
{
  return __clc_convert_schar4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtp(uchar4 x)
{
  return __clc_convert_schar4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtn(uchar4 x)
{
  return __clc_convert_schar4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtz(uchar8 x)
{
  return __clc_convert_schar8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rte(uchar8 x)
{
  return __clc_convert_schar8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtp(uchar8 x)
{
  return __clc_convert_schar8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtn(uchar8 x)
{
  return __clc_convert_schar8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtz(uchar16 x)
{
  return __clc_convert_schar16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rte(uchar16 x)
{
  return __clc_convert_schar16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtp(uchar16 x)
{
  return __clc_convert_schar16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtn(uchar16 x)
{
  return __clc_convert_schar16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtz(uchar x)
{
  return __clc_convert_uchar_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rte(uchar x)
{
  return __clc_convert_uchar_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtp(uchar x)
{
  return __clc_convert_uchar_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtn(uchar x)
{
  return __clc_convert_uchar_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtz(uchar2 x)
{
  return __clc_convert_uchar2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rte(uchar2 x)
{
  return __clc_convert_uchar2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtp(uchar2 x)
{
  return __clc_convert_uchar2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtn(uchar2 x)
{
  return __clc_convert_uchar2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtz(uchar3 x)
{
  return __clc_convert_uchar3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rte(uchar3 x)
{
  return __clc_convert_uchar3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtp(uchar3 x)
{
  return __clc_convert_uchar3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtn(uchar3 x)
{
  return __clc_convert_uchar3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtz(uchar4 x)
{
  return __clc_convert_uchar4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rte(uchar4 x)
{
  return __clc_convert_uchar4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtp(uchar4 x)
{
  return __clc_convert_uchar4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtn(uchar4 x)
{
  return __clc_convert_uchar4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtz(uchar8 x)
{
  return __clc_convert_uchar8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rte(uchar8 x)
{
  return __clc_convert_uchar8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtp(uchar8 x)
{
  return __clc_convert_uchar8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtn(uchar8 x)
{
  return __clc_convert_uchar8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtz(uchar16 x)
{
  return __clc_convert_uchar16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rte(uchar16 x)
{
  return __clc_convert_uchar16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtp(uchar16 x)
{
  return __clc_convert_uchar16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtn(uchar16 x)
{
  return __clc_convert_uchar16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtz(uchar x)
{
  return __clc_convert_short_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rte(uchar x)
{
  return __clc_convert_short_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtp(uchar x)
{
  return __clc_convert_short_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtn(uchar x)
{
  return __clc_convert_short_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtz(uchar2 x)
{
  return __clc_convert_short2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rte(uchar2 x)
{
  return __clc_convert_short2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtp(uchar2 x)
{
  return __clc_convert_short2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtn(uchar2 x)
{
  return __clc_convert_short2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtz(uchar3 x)
{
  return __clc_convert_short3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rte(uchar3 x)
{
  return __clc_convert_short3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtp(uchar3 x)
{
  return __clc_convert_short3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtn(uchar3 x)
{
  return __clc_convert_short3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtz(uchar4 x)
{
  return __clc_convert_short4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rte(uchar4 x)
{
  return __clc_convert_short4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtp(uchar4 x)
{
  return __clc_convert_short4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtn(uchar4 x)
{
  return __clc_convert_short4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtz(uchar8 x)
{
  return __clc_convert_short8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rte(uchar8 x)
{
  return __clc_convert_short8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtp(uchar8 x)
{
  return __clc_convert_short8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtn(uchar8 x)
{
  return __clc_convert_short8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtz(uchar16 x)
{
  return __clc_convert_short16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rte(uchar16 x)
{
  return __clc_convert_short16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtp(uchar16 x)
{
  return __clc_convert_short16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtn(uchar16 x)
{
  return __clc_convert_short16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtz(uchar x)
{
  return __clc_convert_ushort_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rte(uchar x)
{
  return __clc_convert_ushort_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtp(uchar x)
{
  return __clc_convert_ushort_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtn(uchar x)
{
  return __clc_convert_ushort_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtz(uchar2 x)
{
  return __clc_convert_ushort2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rte(uchar2 x)
{
  return __clc_convert_ushort2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtp(uchar2 x)
{
  return __clc_convert_ushort2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtn(uchar2 x)
{
  return __clc_convert_ushort2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtz(uchar3 x)
{
  return __clc_convert_ushort3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rte(uchar3 x)
{
  return __clc_convert_ushort3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtp(uchar3 x)
{
  return __clc_convert_ushort3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtn(uchar3 x)
{
  return __clc_convert_ushort3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtz(uchar4 x)
{
  return __clc_convert_ushort4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rte(uchar4 x)
{
  return __clc_convert_ushort4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtp(uchar4 x)
{
  return __clc_convert_ushort4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtn(uchar4 x)
{
  return __clc_convert_ushort4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtz(uchar8 x)
{
  return __clc_convert_ushort8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rte(uchar8 x)
{
  return __clc_convert_ushort8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtp(uchar8 x)
{
  return __clc_convert_ushort8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtn(uchar8 x)
{
  return __clc_convert_ushort8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtz(uchar16 x)
{
  return __clc_convert_ushort16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rte(uchar16 x)
{
  return __clc_convert_ushort16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtp(uchar16 x)
{
  return __clc_convert_ushort16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtn(uchar16 x)
{
  return __clc_convert_ushort16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtz(uchar x)
{
  return __clc_convert_int_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rte(uchar x)
{
  return __clc_convert_int_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtp(uchar x)
{
  return __clc_convert_int_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtn(uchar x)
{
  return __clc_convert_int_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtz(uchar2 x)
{
  return __clc_convert_int2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rte(uchar2 x)
{
  return __clc_convert_int2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtp(uchar2 x)
{
  return __clc_convert_int2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtn(uchar2 x)
{
  return __clc_convert_int2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtz(uchar3 x)
{
  return __clc_convert_int3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rte(uchar3 x)
{
  return __clc_convert_int3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtp(uchar3 x)
{
  return __clc_convert_int3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtn(uchar3 x)
{
  return __clc_convert_int3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtz(uchar4 x)
{
  return __clc_convert_int4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rte(uchar4 x)
{
  return __clc_convert_int4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtp(uchar4 x)
{
  return __clc_convert_int4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtn(uchar4 x)
{
  return __clc_convert_int4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtz(uchar8 x)
{
  return __clc_convert_int8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rte(uchar8 x)
{
  return __clc_convert_int8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtp(uchar8 x)
{
  return __clc_convert_int8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtn(uchar8 x)
{
  return __clc_convert_int8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtz(uchar16 x)
{
  return __clc_convert_int16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rte(uchar16 x)
{
  return __clc_convert_int16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtp(uchar16 x)
{
  return __clc_convert_int16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtn(uchar16 x)
{
  return __clc_convert_int16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtz(uchar x)
{
  return __clc_convert_uint_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rte(uchar x)
{
  return __clc_convert_uint_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtp(uchar x)
{
  return __clc_convert_uint_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtn(uchar x)
{
  return __clc_convert_uint_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtz(uchar2 x)
{
  return __clc_convert_uint2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rte(uchar2 x)
{
  return __clc_convert_uint2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtp(uchar2 x)
{
  return __clc_convert_uint2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtn(uchar2 x)
{
  return __clc_convert_uint2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtz(uchar3 x)
{
  return __clc_convert_uint3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rte(uchar3 x)
{
  return __clc_convert_uint3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtp(uchar3 x)
{
  return __clc_convert_uint3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtn(uchar3 x)
{
  return __clc_convert_uint3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtz(uchar4 x)
{
  return __clc_convert_uint4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rte(uchar4 x)
{
  return __clc_convert_uint4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtp(uchar4 x)
{
  return __clc_convert_uint4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtn(uchar4 x)
{
  return __clc_convert_uint4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtz(uchar8 x)
{
  return __clc_convert_uint8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rte(uchar8 x)
{
  return __clc_convert_uint8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtp(uchar8 x)
{
  return __clc_convert_uint8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtn(uchar8 x)
{
  return __clc_convert_uint8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtz(uchar16 x)
{
  return __clc_convert_uint16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rte(uchar16 x)
{
  return __clc_convert_uint16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtp(uchar16 x)
{
  return __clc_convert_uint16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtn(uchar16 x)
{
  return __clc_convert_uint16_rtn(x);
}

#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtz(uchar x)
{
  return __clc_convert_long_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rte(uchar x)
{
  return __clc_convert_long_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtp(uchar x)
{
  return __clc_convert_long_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtn(uchar x)
{
  return __clc_convert_long_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtz(uchar2 x)
{
  return __clc_convert_long2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rte(uchar2 x)
{
  return __clc_convert_long2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtp(uchar2 x)
{
  return __clc_convert_long2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtn(uchar2 x)
{
  return __clc_convert_long2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtz(uchar3 x)
{
  return __clc_convert_long3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rte(uchar3 x)
{
  return __clc_convert_long3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtp(uchar3 x)
{
  return __clc_convert_long3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtn(uchar3 x)
{
  return __clc_convert_long3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtz(uchar4 x)
{
  return __clc_convert_long4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rte(uchar4 x)
{
  return __clc_convert_long4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtp(uchar4 x)
{
  return __clc_convert_long4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtn(uchar4 x)
{
  return __clc_convert_long4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtz(uchar8 x)
{
  return __clc_convert_long8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rte(uchar8 x)
{
  return __clc_convert_long8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtp(uchar8 x)
{
  return __clc_convert_long8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtn(uchar8 x)
{
  return __clc_convert_long8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtz(uchar16 x)
{
  return __clc_convert_long16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rte(uchar16 x)
{
  return __clc_convert_long16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtp(uchar16 x)
{
  return __clc_convert_long16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtn(uchar16 x)
{
  return __clc_convert_long16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtz(uchar x)
{
  return __clc_convert_ulong_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rte(uchar x)
{
  return __clc_convert_ulong_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtp(uchar x)
{
  return __clc_convert_ulong_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtn(uchar x)
{
  return __clc_convert_ulong_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtz(uchar2 x)
{
  return __clc_convert_ulong2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rte(uchar2 x)
{
  return __clc_convert_ulong2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtp(uchar2 x)
{
  return __clc_convert_ulong2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtn(uchar2 x)
{
  return __clc_convert_ulong2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtz(uchar3 x)
{
  return __clc_convert_ulong3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rte(uchar3 x)
{
  return __clc_convert_ulong3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtp(uchar3 x)
{
  return __clc_convert_ulong3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtn(uchar3 x)
{
  return __clc_convert_ulong3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtz(uchar4 x)
{
  return __clc_convert_ulong4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rte(uchar4 x)
{
  return __clc_convert_ulong4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtp(uchar4 x)
{
  return __clc_convert_ulong4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtn(uchar4 x)
{
  return __clc_convert_ulong4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtz(uchar8 x)
{
  return __clc_convert_ulong8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rte(uchar8 x)
{
  return __clc_convert_ulong8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtp(uchar8 x)
{
  return __clc_convert_ulong8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtn(uchar8 x)
{
  return __clc_convert_ulong8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtz(uchar16 x)
{
  return __clc_convert_ulong16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rte(uchar16 x)
{
  return __clc_convert_ulong16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtp(uchar16 x)
{
  return __clc_convert_ulong16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtn(uchar16 x)
{
  return __clc_convert_ulong16_rtn(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtz(short x)
{
  return __clc_convert_char_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rte(short x)
{
  return __clc_convert_char_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtp(short x)
{
  return __clc_convert_char_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtn(short x)
{
  return __clc_convert_char_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtz(short2 x)
{
  return __clc_convert_char2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rte(short2 x)
{
  return __clc_convert_char2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtp(short2 x)
{
  return __clc_convert_char2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtn(short2 x)
{
  return __clc_convert_char2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtz(short3 x)
{
  return __clc_convert_char3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rte(short3 x)
{
  return __clc_convert_char3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtp(short3 x)
{
  return __clc_convert_char3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtn(short3 x)
{
  return __clc_convert_char3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtz(short4 x)
{
  return __clc_convert_char4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rte(short4 x)
{
  return __clc_convert_char4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtp(short4 x)
{
  return __clc_convert_char4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtn(short4 x)
{
  return __clc_convert_char4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtz(short8 x)
{
  return __clc_convert_char8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rte(short8 x)
{
  return __clc_convert_char8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtp(short8 x)
{
  return __clc_convert_char8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtn(short8 x)
{
  return __clc_convert_char8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtz(short16 x)
{
  return __clc_convert_char16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rte(short16 x)
{
  return __clc_convert_char16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtp(short16 x)
{
  return __clc_convert_char16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtn(short16 x)
{
  return __clc_convert_char16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtz(short x)
{
  return __clc_convert_schar_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rte(short x)
{
  return __clc_convert_schar_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtp(short x)
{
  return __clc_convert_schar_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtn(short x)
{
  return __clc_convert_schar_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtz(short2 x)
{
  return __clc_convert_schar2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rte(short2 x)
{
  return __clc_convert_schar2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtp(short2 x)
{
  return __clc_convert_schar2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtn(short2 x)
{
  return __clc_convert_schar2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtz(short3 x)
{
  return __clc_convert_schar3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rte(short3 x)
{
  return __clc_convert_schar3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtp(short3 x)
{
  return __clc_convert_schar3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtn(short3 x)
{
  return __clc_convert_schar3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtz(short4 x)
{
  return __clc_convert_schar4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rte(short4 x)
{
  return __clc_convert_schar4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtp(short4 x)
{
  return __clc_convert_schar4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtn(short4 x)
{
  return __clc_convert_schar4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtz(short8 x)
{
  return __clc_convert_schar8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rte(short8 x)
{
  return __clc_convert_schar8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtp(short8 x)
{
  return __clc_convert_schar8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtn(short8 x)
{
  return __clc_convert_schar8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtz(short16 x)
{
  return __clc_convert_schar16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rte(short16 x)
{
  return __clc_convert_schar16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtp(short16 x)
{
  return __clc_convert_schar16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtn(short16 x)
{
  return __clc_convert_schar16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtz(short x)
{
  return __clc_convert_uchar_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rte(short x)
{
  return __clc_convert_uchar_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtp(short x)
{
  return __clc_convert_uchar_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtn(short x)
{
  return __clc_convert_uchar_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtz(short2 x)
{
  return __clc_convert_uchar2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rte(short2 x)
{
  return __clc_convert_uchar2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtp(short2 x)
{
  return __clc_convert_uchar2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtn(short2 x)
{
  return __clc_convert_uchar2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtz(short3 x)
{
  return __clc_convert_uchar3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rte(short3 x)
{
  return __clc_convert_uchar3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtp(short3 x)
{
  return __clc_convert_uchar3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtn(short3 x)
{
  return __clc_convert_uchar3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtz(short4 x)
{
  return __clc_convert_uchar4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rte(short4 x)
{
  return __clc_convert_uchar4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtp(short4 x)
{
  return __clc_convert_uchar4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtn(short4 x)
{
  return __clc_convert_uchar4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtz(short8 x)
{
  return __clc_convert_uchar8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rte(short8 x)
{
  return __clc_convert_uchar8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtp(short8 x)
{
  return __clc_convert_uchar8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtn(short8 x)
{
  return __clc_convert_uchar8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtz(short16 x)
{
  return __clc_convert_uchar16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rte(short16 x)
{
  return __clc_convert_uchar16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtp(short16 x)
{
  return __clc_convert_uchar16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtn(short16 x)
{
  return __clc_convert_uchar16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtz(short x)
{
  return __clc_convert_short_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rte(short x)
{
  return __clc_convert_short_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtp(short x)
{
  return __clc_convert_short_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtn(short x)
{
  return __clc_convert_short_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtz(short2 x)
{
  return __clc_convert_short2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rte(short2 x)
{
  return __clc_convert_short2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtp(short2 x)
{
  return __clc_convert_short2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtn(short2 x)
{
  return __clc_convert_short2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtz(short3 x)
{
  return __clc_convert_short3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rte(short3 x)
{
  return __clc_convert_short3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtp(short3 x)
{
  return __clc_convert_short3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtn(short3 x)
{
  return __clc_convert_short3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtz(short4 x)
{
  return __clc_convert_short4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rte(short4 x)
{
  return __clc_convert_short4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtp(short4 x)
{
  return __clc_convert_short4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtn(short4 x)
{
  return __clc_convert_short4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtz(short8 x)
{
  return __clc_convert_short8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rte(short8 x)
{
  return __clc_convert_short8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtp(short8 x)
{
  return __clc_convert_short8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtn(short8 x)
{
  return __clc_convert_short8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtz(short16 x)
{
  return __clc_convert_short16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rte(short16 x)
{
  return __clc_convert_short16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtp(short16 x)
{
  return __clc_convert_short16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtn(short16 x)
{
  return __clc_convert_short16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtz(short x)
{
  return __clc_convert_ushort_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rte(short x)
{
  return __clc_convert_ushort_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtp(short x)
{
  return __clc_convert_ushort_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtn(short x)
{
  return __clc_convert_ushort_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtz(short2 x)
{
  return __clc_convert_ushort2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rte(short2 x)
{
  return __clc_convert_ushort2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtp(short2 x)
{
  return __clc_convert_ushort2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtn(short2 x)
{
  return __clc_convert_ushort2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtz(short3 x)
{
  return __clc_convert_ushort3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rte(short3 x)
{
  return __clc_convert_ushort3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtp(short3 x)
{
  return __clc_convert_ushort3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtn(short3 x)
{
  return __clc_convert_ushort3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtz(short4 x)
{
  return __clc_convert_ushort4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rte(short4 x)
{
  return __clc_convert_ushort4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtp(short4 x)
{
  return __clc_convert_ushort4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtn(short4 x)
{
  return __clc_convert_ushort4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtz(short8 x)
{
  return __clc_convert_ushort8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rte(short8 x)
{
  return __clc_convert_ushort8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtp(short8 x)
{
  return __clc_convert_ushort8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtn(short8 x)
{
  return __clc_convert_ushort8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtz(short16 x)
{
  return __clc_convert_ushort16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rte(short16 x)
{
  return __clc_convert_ushort16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtp(short16 x)
{
  return __clc_convert_ushort16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtn(short16 x)
{
  return __clc_convert_ushort16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtz(short x)
{
  return __clc_convert_int_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rte(short x)
{
  return __clc_convert_int_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtp(short x)
{
  return __clc_convert_int_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtn(short x)
{
  return __clc_convert_int_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtz(short2 x)
{
  return __clc_convert_int2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rte(short2 x)
{
  return __clc_convert_int2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtp(short2 x)
{
  return __clc_convert_int2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtn(short2 x)
{
  return __clc_convert_int2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtz(short3 x)
{
  return __clc_convert_int3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rte(short3 x)
{
  return __clc_convert_int3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtp(short3 x)
{
  return __clc_convert_int3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtn(short3 x)
{
  return __clc_convert_int3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtz(short4 x)
{
  return __clc_convert_int4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rte(short4 x)
{
  return __clc_convert_int4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtp(short4 x)
{
  return __clc_convert_int4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtn(short4 x)
{
  return __clc_convert_int4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtz(short8 x)
{
  return __clc_convert_int8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rte(short8 x)
{
  return __clc_convert_int8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtp(short8 x)
{
  return __clc_convert_int8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtn(short8 x)
{
  return __clc_convert_int8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtz(short16 x)
{
  return __clc_convert_int16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rte(short16 x)
{
  return __clc_convert_int16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtp(short16 x)
{
  return __clc_convert_int16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtn(short16 x)
{
  return __clc_convert_int16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtz(short x)
{
  return __clc_convert_uint_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rte(short x)
{
  return __clc_convert_uint_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtp(short x)
{
  return __clc_convert_uint_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtn(short x)
{
  return __clc_convert_uint_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtz(short2 x)
{
  return __clc_convert_uint2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rte(short2 x)
{
  return __clc_convert_uint2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtp(short2 x)
{
  return __clc_convert_uint2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtn(short2 x)
{
  return __clc_convert_uint2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtz(short3 x)
{
  return __clc_convert_uint3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rte(short3 x)
{
  return __clc_convert_uint3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtp(short3 x)
{
  return __clc_convert_uint3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtn(short3 x)
{
  return __clc_convert_uint3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtz(short4 x)
{
  return __clc_convert_uint4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rte(short4 x)
{
  return __clc_convert_uint4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtp(short4 x)
{
  return __clc_convert_uint4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtn(short4 x)
{
  return __clc_convert_uint4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtz(short8 x)
{
  return __clc_convert_uint8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rte(short8 x)
{
  return __clc_convert_uint8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtp(short8 x)
{
  return __clc_convert_uint8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtn(short8 x)
{
  return __clc_convert_uint8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtz(short16 x)
{
  return __clc_convert_uint16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rte(short16 x)
{
  return __clc_convert_uint16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtp(short16 x)
{
  return __clc_convert_uint16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtn(short16 x)
{
  return __clc_convert_uint16_rtn(x);
}

#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtz(short x)
{
  return __clc_convert_long_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rte(short x)
{
  return __clc_convert_long_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtp(short x)
{
  return __clc_convert_long_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtn(short x)
{
  return __clc_convert_long_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtz(short2 x)
{
  return __clc_convert_long2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rte(short2 x)
{
  return __clc_convert_long2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtp(short2 x)
{
  return __clc_convert_long2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtn(short2 x)
{
  return __clc_convert_long2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtz(short3 x)
{
  return __clc_convert_long3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rte(short3 x)
{
  return __clc_convert_long3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtp(short3 x)
{
  return __clc_convert_long3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtn(short3 x)
{
  return __clc_convert_long3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtz(short4 x)
{
  return __clc_convert_long4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rte(short4 x)
{
  return __clc_convert_long4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtp(short4 x)
{
  return __clc_convert_long4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtn(short4 x)
{
  return __clc_convert_long4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtz(short8 x)
{
  return __clc_convert_long8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rte(short8 x)
{
  return __clc_convert_long8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtp(short8 x)
{
  return __clc_convert_long8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtn(short8 x)
{
  return __clc_convert_long8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtz(short16 x)
{
  return __clc_convert_long16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rte(short16 x)
{
  return __clc_convert_long16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtp(short16 x)
{
  return __clc_convert_long16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtn(short16 x)
{
  return __clc_convert_long16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtz(short x)
{
  return __clc_convert_ulong_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rte(short x)
{
  return __clc_convert_ulong_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtp(short x)
{
  return __clc_convert_ulong_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtn(short x)
{
  return __clc_convert_ulong_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtz(short2 x)
{
  return __clc_convert_ulong2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rte(short2 x)
{
  return __clc_convert_ulong2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtp(short2 x)
{
  return __clc_convert_ulong2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtn(short2 x)
{
  return __clc_convert_ulong2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtz(short3 x)
{
  return __clc_convert_ulong3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rte(short3 x)
{
  return __clc_convert_ulong3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtp(short3 x)
{
  return __clc_convert_ulong3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtn(short3 x)
{
  return __clc_convert_ulong3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtz(short4 x)
{
  return __clc_convert_ulong4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rte(short4 x)
{
  return __clc_convert_ulong4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtp(short4 x)
{
  return __clc_convert_ulong4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtn(short4 x)
{
  return __clc_convert_ulong4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtz(short8 x)
{
  return __clc_convert_ulong8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rte(short8 x)
{
  return __clc_convert_ulong8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtp(short8 x)
{
  return __clc_convert_ulong8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtn(short8 x)
{
  return __clc_convert_ulong8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtz(short16 x)
{
  return __clc_convert_ulong16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rte(short16 x)
{
  return __clc_convert_ulong16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtp(short16 x)
{
  return __clc_convert_ulong16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtn(short16 x)
{
  return __clc_convert_ulong16_rtn(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtz(ushort x)
{
  return __clc_convert_char_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rte(ushort x)
{
  return __clc_convert_char_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtp(ushort x)
{
  return __clc_convert_char_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtn(ushort x)
{
  return __clc_convert_char_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtz(ushort2 x)
{
  return __clc_convert_char2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rte(ushort2 x)
{
  return __clc_convert_char2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtp(ushort2 x)
{
  return __clc_convert_char2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtn(ushort2 x)
{
  return __clc_convert_char2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtz(ushort3 x)
{
  return __clc_convert_char3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rte(ushort3 x)
{
  return __clc_convert_char3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtp(ushort3 x)
{
  return __clc_convert_char3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtn(ushort3 x)
{
  return __clc_convert_char3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtz(ushort4 x)
{
  return __clc_convert_char4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rte(ushort4 x)
{
  return __clc_convert_char4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtp(ushort4 x)
{
  return __clc_convert_char4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtn(ushort4 x)
{
  return __clc_convert_char4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtz(ushort8 x)
{
  return __clc_convert_char8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rte(ushort8 x)
{
  return __clc_convert_char8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtp(ushort8 x)
{
  return __clc_convert_char8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtn(ushort8 x)
{
  return __clc_convert_char8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtz(ushort16 x)
{
  return __clc_convert_char16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rte(ushort16 x)
{
  return __clc_convert_char16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtp(ushort16 x)
{
  return __clc_convert_char16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtn(ushort16 x)
{
  return __clc_convert_char16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtz(ushort x)
{
  return __clc_convert_schar_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rte(ushort x)
{
  return __clc_convert_schar_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtp(ushort x)
{
  return __clc_convert_schar_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtn(ushort x)
{
  return __clc_convert_schar_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtz(ushort2 x)
{
  return __clc_convert_schar2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rte(ushort2 x)
{
  return __clc_convert_schar2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtp(ushort2 x)
{
  return __clc_convert_schar2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtn(ushort2 x)
{
  return __clc_convert_schar2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtz(ushort3 x)
{
  return __clc_convert_schar3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rte(ushort3 x)
{
  return __clc_convert_schar3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtp(ushort3 x)
{
  return __clc_convert_schar3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtn(ushort3 x)
{
  return __clc_convert_schar3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtz(ushort4 x)
{
  return __clc_convert_schar4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rte(ushort4 x)
{
  return __clc_convert_schar4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtp(ushort4 x)
{
  return __clc_convert_schar4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtn(ushort4 x)
{
  return __clc_convert_schar4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtz(ushort8 x)
{
  return __clc_convert_schar8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rte(ushort8 x)
{
  return __clc_convert_schar8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtp(ushort8 x)
{
  return __clc_convert_schar8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtn(ushort8 x)
{
  return __clc_convert_schar8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtz(ushort16 x)
{
  return __clc_convert_schar16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rte(ushort16 x)
{
  return __clc_convert_schar16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtp(ushort16 x)
{
  return __clc_convert_schar16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtn(ushort16 x)
{
  return __clc_convert_schar16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtz(ushort x)
{
  return __clc_convert_uchar_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rte(ushort x)
{
  return __clc_convert_uchar_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtp(ushort x)
{
  return __clc_convert_uchar_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtn(ushort x)
{
  return __clc_convert_uchar_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtz(ushort2 x)
{
  return __clc_convert_uchar2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rte(ushort2 x)
{
  return __clc_convert_uchar2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtp(ushort2 x)
{
  return __clc_convert_uchar2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtn(ushort2 x)
{
  return __clc_convert_uchar2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtz(ushort3 x)
{
  return __clc_convert_uchar3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rte(ushort3 x)
{
  return __clc_convert_uchar3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtp(ushort3 x)
{
  return __clc_convert_uchar3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtn(ushort3 x)
{
  return __clc_convert_uchar3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtz(ushort4 x)
{
  return __clc_convert_uchar4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rte(ushort4 x)
{
  return __clc_convert_uchar4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtp(ushort4 x)
{
  return __clc_convert_uchar4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtn(ushort4 x)
{
  return __clc_convert_uchar4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtz(ushort8 x)
{
  return __clc_convert_uchar8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rte(ushort8 x)
{
  return __clc_convert_uchar8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtp(ushort8 x)
{
  return __clc_convert_uchar8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtn(ushort8 x)
{
  return __clc_convert_uchar8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtz(ushort16 x)
{
  return __clc_convert_uchar16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rte(ushort16 x)
{
  return __clc_convert_uchar16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtp(ushort16 x)
{
  return __clc_convert_uchar16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtn(ushort16 x)
{
  return __clc_convert_uchar16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtz(ushort x)
{
  return __clc_convert_short_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rte(ushort x)
{
  return __clc_convert_short_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtp(ushort x)
{
  return __clc_convert_short_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtn(ushort x)
{
  return __clc_convert_short_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtz(ushort2 x)
{
  return __clc_convert_short2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rte(ushort2 x)
{
  return __clc_convert_short2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtp(ushort2 x)
{
  return __clc_convert_short2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtn(ushort2 x)
{
  return __clc_convert_short2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtz(ushort3 x)
{
  return __clc_convert_short3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rte(ushort3 x)
{
  return __clc_convert_short3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtp(ushort3 x)
{
  return __clc_convert_short3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtn(ushort3 x)
{
  return __clc_convert_short3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtz(ushort4 x)
{
  return __clc_convert_short4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rte(ushort4 x)
{
  return __clc_convert_short4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtp(ushort4 x)
{
  return __clc_convert_short4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtn(ushort4 x)
{
  return __clc_convert_short4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtz(ushort8 x)
{
  return __clc_convert_short8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rte(ushort8 x)
{
  return __clc_convert_short8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtp(ushort8 x)
{
  return __clc_convert_short8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtn(ushort8 x)
{
  return __clc_convert_short8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtz(ushort16 x)
{
  return __clc_convert_short16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rte(ushort16 x)
{
  return __clc_convert_short16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtp(ushort16 x)
{
  return __clc_convert_short16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtn(ushort16 x)
{
  return __clc_convert_short16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtz(ushort x)
{
  return __clc_convert_ushort_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rte(ushort x)
{
  return __clc_convert_ushort_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtp(ushort x)
{
  return __clc_convert_ushort_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtn(ushort x)
{
  return __clc_convert_ushort_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtz(ushort2 x)
{
  return __clc_convert_ushort2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rte(ushort2 x)
{
  return __clc_convert_ushort2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtp(ushort2 x)
{
  return __clc_convert_ushort2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtn(ushort2 x)
{
  return __clc_convert_ushort2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtz(ushort3 x)
{
  return __clc_convert_ushort3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rte(ushort3 x)
{
  return __clc_convert_ushort3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtp(ushort3 x)
{
  return __clc_convert_ushort3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtn(ushort3 x)
{
  return __clc_convert_ushort3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtz(ushort4 x)
{
  return __clc_convert_ushort4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rte(ushort4 x)
{
  return __clc_convert_ushort4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtp(ushort4 x)
{
  return __clc_convert_ushort4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtn(ushort4 x)
{
  return __clc_convert_ushort4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtz(ushort8 x)
{
  return __clc_convert_ushort8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rte(ushort8 x)
{
  return __clc_convert_ushort8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtp(ushort8 x)
{
  return __clc_convert_ushort8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtn(ushort8 x)
{
  return __clc_convert_ushort8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtz(ushort16 x)
{
  return __clc_convert_ushort16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rte(ushort16 x)
{
  return __clc_convert_ushort16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtp(ushort16 x)
{
  return __clc_convert_ushort16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtn(ushort16 x)
{
  return __clc_convert_ushort16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtz(ushort x)
{
  return __clc_convert_int_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rte(ushort x)
{
  return __clc_convert_int_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtp(ushort x)
{
  return __clc_convert_int_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtn(ushort x)
{
  return __clc_convert_int_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtz(ushort2 x)
{
  return __clc_convert_int2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rte(ushort2 x)
{
  return __clc_convert_int2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtp(ushort2 x)
{
  return __clc_convert_int2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtn(ushort2 x)
{
  return __clc_convert_int2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtz(ushort3 x)
{
  return __clc_convert_int3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rte(ushort3 x)
{
  return __clc_convert_int3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtp(ushort3 x)
{
  return __clc_convert_int3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtn(ushort3 x)
{
  return __clc_convert_int3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtz(ushort4 x)
{
  return __clc_convert_int4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rte(ushort4 x)
{
  return __clc_convert_int4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtp(ushort4 x)
{
  return __clc_convert_int4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtn(ushort4 x)
{
  return __clc_convert_int4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtz(ushort8 x)
{
  return __clc_convert_int8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rte(ushort8 x)
{
  return __clc_convert_int8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtp(ushort8 x)
{
  return __clc_convert_int8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtn(ushort8 x)
{
  return __clc_convert_int8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtz(ushort16 x)
{
  return __clc_convert_int16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rte(ushort16 x)
{
  return __clc_convert_int16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtp(ushort16 x)
{
  return __clc_convert_int16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtn(ushort16 x)
{
  return __clc_convert_int16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtz(ushort x)
{
  return __clc_convert_uint_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rte(ushort x)
{
  return __clc_convert_uint_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtp(ushort x)
{
  return __clc_convert_uint_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtn(ushort x)
{
  return __clc_convert_uint_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtz(ushort2 x)
{
  return __clc_convert_uint2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rte(ushort2 x)
{
  return __clc_convert_uint2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtp(ushort2 x)
{
  return __clc_convert_uint2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtn(ushort2 x)
{
  return __clc_convert_uint2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtz(ushort3 x)
{
  return __clc_convert_uint3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rte(ushort3 x)
{
  return __clc_convert_uint3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtp(ushort3 x)
{
  return __clc_convert_uint3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtn(ushort3 x)
{
  return __clc_convert_uint3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtz(ushort4 x)
{
  return __clc_convert_uint4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rte(ushort4 x)
{
  return __clc_convert_uint4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtp(ushort4 x)
{
  return __clc_convert_uint4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtn(ushort4 x)
{
  return __clc_convert_uint4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtz(ushort8 x)
{
  return __clc_convert_uint8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rte(ushort8 x)
{
  return __clc_convert_uint8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtp(ushort8 x)
{
  return __clc_convert_uint8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtn(ushort8 x)
{
  return __clc_convert_uint8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtz(ushort16 x)
{
  return __clc_convert_uint16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rte(ushort16 x)
{
  return __clc_convert_uint16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtp(ushort16 x)
{
  return __clc_convert_uint16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtn(ushort16 x)
{
  return __clc_convert_uint16_rtn(x);
}

#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtz(ushort x)
{
  return __clc_convert_long_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rte(ushort x)
{
  return __clc_convert_long_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtp(ushort x)
{
  return __clc_convert_long_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtn(ushort x)
{
  return __clc_convert_long_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtz(ushort2 x)
{
  return __clc_convert_long2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rte(ushort2 x)
{
  return __clc_convert_long2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtp(ushort2 x)
{
  return __clc_convert_long2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtn(ushort2 x)
{
  return __clc_convert_long2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtz(ushort3 x)
{
  return __clc_convert_long3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rte(ushort3 x)
{
  return __clc_convert_long3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtp(ushort3 x)
{
  return __clc_convert_long3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtn(ushort3 x)
{
  return __clc_convert_long3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtz(ushort4 x)
{
  return __clc_convert_long4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rte(ushort4 x)
{
  return __clc_convert_long4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtp(ushort4 x)
{
  return __clc_convert_long4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtn(ushort4 x)
{
  return __clc_convert_long4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtz(ushort8 x)
{
  return __clc_convert_long8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rte(ushort8 x)
{
  return __clc_convert_long8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtp(ushort8 x)
{
  return __clc_convert_long8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtn(ushort8 x)
{
  return __clc_convert_long8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtz(ushort16 x)
{
  return __clc_convert_long16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rte(ushort16 x)
{
  return __clc_convert_long16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtp(ushort16 x)
{
  return __clc_convert_long16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtn(ushort16 x)
{
  return __clc_convert_long16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtz(ushort x)
{
  return __clc_convert_ulong_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rte(ushort x)
{
  return __clc_convert_ulong_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtp(ushort x)
{
  return __clc_convert_ulong_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtn(ushort x)
{
  return __clc_convert_ulong_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtz(ushort2 x)
{
  return __clc_convert_ulong2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rte(ushort2 x)
{
  return __clc_convert_ulong2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtp(ushort2 x)
{
  return __clc_convert_ulong2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtn(ushort2 x)
{
  return __clc_convert_ulong2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtz(ushort3 x)
{
  return __clc_convert_ulong3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rte(ushort3 x)
{
  return __clc_convert_ulong3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtp(ushort3 x)
{
  return __clc_convert_ulong3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtn(ushort3 x)
{
  return __clc_convert_ulong3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtz(ushort4 x)
{
  return __clc_convert_ulong4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rte(ushort4 x)
{
  return __clc_convert_ulong4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtp(ushort4 x)
{
  return __clc_convert_ulong4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtn(ushort4 x)
{
  return __clc_convert_ulong4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtz(ushort8 x)
{
  return __clc_convert_ulong8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rte(ushort8 x)
{
  return __clc_convert_ulong8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtp(ushort8 x)
{
  return __clc_convert_ulong8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtn(ushort8 x)
{
  return __clc_convert_ulong8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtz(ushort16 x)
{
  return __clc_convert_ulong16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rte(ushort16 x)
{
  return __clc_convert_ulong16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtp(ushort16 x)
{
  return __clc_convert_ulong16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtn(ushort16 x)
{
  return __clc_convert_ulong16_rtn(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtz(int x)
{
  return __clc_convert_char_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rte(int x)
{
  return __clc_convert_char_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtp(int x)
{
  return __clc_convert_char_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtn(int x)
{
  return __clc_convert_char_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtz(int2 x)
{
  return __clc_convert_char2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rte(int2 x)
{
  return __clc_convert_char2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtp(int2 x)
{
  return __clc_convert_char2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtn(int2 x)
{
  return __clc_convert_char2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtz(int3 x)
{
  return __clc_convert_char3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rte(int3 x)
{
  return __clc_convert_char3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtp(int3 x)
{
  return __clc_convert_char3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtn(int3 x)
{
  return __clc_convert_char3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtz(int4 x)
{
  return __clc_convert_char4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rte(int4 x)
{
  return __clc_convert_char4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtp(int4 x)
{
  return __clc_convert_char4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtn(int4 x)
{
  return __clc_convert_char4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtz(int8 x)
{
  return __clc_convert_char8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rte(int8 x)
{
  return __clc_convert_char8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtp(int8 x)
{
  return __clc_convert_char8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtn(int8 x)
{
  return __clc_convert_char8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtz(int16 x)
{
  return __clc_convert_char16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rte(int16 x)
{
  return __clc_convert_char16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtp(int16 x)
{
  return __clc_convert_char16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtn(int16 x)
{
  return __clc_convert_char16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtz(int x)
{
  return __clc_convert_schar_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rte(int x)
{
  return __clc_convert_schar_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtp(int x)
{
  return __clc_convert_schar_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtn(int x)
{
  return __clc_convert_schar_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtz(int2 x)
{
  return __clc_convert_schar2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rte(int2 x)
{
  return __clc_convert_schar2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtp(int2 x)
{
  return __clc_convert_schar2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtn(int2 x)
{
  return __clc_convert_schar2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtz(int3 x)
{
  return __clc_convert_schar3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rte(int3 x)
{
  return __clc_convert_schar3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtp(int3 x)
{
  return __clc_convert_schar3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtn(int3 x)
{
  return __clc_convert_schar3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtz(int4 x)
{
  return __clc_convert_schar4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rte(int4 x)
{
  return __clc_convert_schar4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtp(int4 x)
{
  return __clc_convert_schar4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtn(int4 x)
{
  return __clc_convert_schar4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtz(int8 x)
{
  return __clc_convert_schar8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rte(int8 x)
{
  return __clc_convert_schar8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtp(int8 x)
{
  return __clc_convert_schar8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtn(int8 x)
{
  return __clc_convert_schar8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtz(int16 x)
{
  return __clc_convert_schar16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rte(int16 x)
{
  return __clc_convert_schar16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtp(int16 x)
{
  return __clc_convert_schar16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtn(int16 x)
{
  return __clc_convert_schar16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtz(int x)
{
  return __clc_convert_uchar_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rte(int x)
{
  return __clc_convert_uchar_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtp(int x)
{
  return __clc_convert_uchar_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtn(int x)
{
  return __clc_convert_uchar_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtz(int2 x)
{
  return __clc_convert_uchar2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rte(int2 x)
{
  return __clc_convert_uchar2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtp(int2 x)
{
  return __clc_convert_uchar2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtn(int2 x)
{
  return __clc_convert_uchar2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtz(int3 x)
{
  return __clc_convert_uchar3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rte(int3 x)
{
  return __clc_convert_uchar3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtp(int3 x)
{
  return __clc_convert_uchar3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtn(int3 x)
{
  return __clc_convert_uchar3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtz(int4 x)
{
  return __clc_convert_uchar4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rte(int4 x)
{
  return __clc_convert_uchar4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtp(int4 x)
{
  return __clc_convert_uchar4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtn(int4 x)
{
  return __clc_convert_uchar4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtz(int8 x)
{
  return __clc_convert_uchar8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rte(int8 x)
{
  return __clc_convert_uchar8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtp(int8 x)
{
  return __clc_convert_uchar8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtn(int8 x)
{
  return __clc_convert_uchar8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtz(int16 x)
{
  return __clc_convert_uchar16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rte(int16 x)
{
  return __clc_convert_uchar16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtp(int16 x)
{
  return __clc_convert_uchar16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtn(int16 x)
{
  return __clc_convert_uchar16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtz(int x)
{
  return __clc_convert_short_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rte(int x)
{
  return __clc_convert_short_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtp(int x)
{
  return __clc_convert_short_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtn(int x)
{
  return __clc_convert_short_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtz(int2 x)
{
  return __clc_convert_short2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rte(int2 x)
{
  return __clc_convert_short2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtp(int2 x)
{
  return __clc_convert_short2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtn(int2 x)
{
  return __clc_convert_short2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtz(int3 x)
{
  return __clc_convert_short3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rte(int3 x)
{
  return __clc_convert_short3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtp(int3 x)
{
  return __clc_convert_short3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtn(int3 x)
{
  return __clc_convert_short3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtz(int4 x)
{
  return __clc_convert_short4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rte(int4 x)
{
  return __clc_convert_short4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtp(int4 x)
{
  return __clc_convert_short4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtn(int4 x)
{
  return __clc_convert_short4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtz(int8 x)
{
  return __clc_convert_short8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rte(int8 x)
{
  return __clc_convert_short8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtp(int8 x)
{
  return __clc_convert_short8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtn(int8 x)
{
  return __clc_convert_short8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtz(int16 x)
{
  return __clc_convert_short16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rte(int16 x)
{
  return __clc_convert_short16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtp(int16 x)
{
  return __clc_convert_short16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtn(int16 x)
{
  return __clc_convert_short16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtz(int x)
{
  return __clc_convert_ushort_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rte(int x)
{
  return __clc_convert_ushort_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtp(int x)
{
  return __clc_convert_ushort_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtn(int x)
{
  return __clc_convert_ushort_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtz(int2 x)
{
  return __clc_convert_ushort2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rte(int2 x)
{
  return __clc_convert_ushort2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtp(int2 x)
{
  return __clc_convert_ushort2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtn(int2 x)
{
  return __clc_convert_ushort2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtz(int3 x)
{
  return __clc_convert_ushort3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rte(int3 x)
{
  return __clc_convert_ushort3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtp(int3 x)
{
  return __clc_convert_ushort3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtn(int3 x)
{
  return __clc_convert_ushort3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtz(int4 x)
{
  return __clc_convert_ushort4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rte(int4 x)
{
  return __clc_convert_ushort4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtp(int4 x)
{
  return __clc_convert_ushort4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtn(int4 x)
{
  return __clc_convert_ushort4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtz(int8 x)
{
  return __clc_convert_ushort8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rte(int8 x)
{
  return __clc_convert_ushort8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtp(int8 x)
{
  return __clc_convert_ushort8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtn(int8 x)
{
  return __clc_convert_ushort8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtz(int16 x)
{
  return __clc_convert_ushort16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rte(int16 x)
{
  return __clc_convert_ushort16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtp(int16 x)
{
  return __clc_convert_ushort16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtn(int16 x)
{
  return __clc_convert_ushort16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtz(int x)
{
  return __clc_convert_int_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rte(int x)
{
  return __clc_convert_int_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtp(int x)
{
  return __clc_convert_int_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtn(int x)
{
  return __clc_convert_int_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtz(int2 x)
{
  return __clc_convert_int2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rte(int2 x)
{
  return __clc_convert_int2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtp(int2 x)
{
  return __clc_convert_int2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtn(int2 x)
{
  return __clc_convert_int2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtz(int3 x)
{
  return __clc_convert_int3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rte(int3 x)
{
  return __clc_convert_int3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtp(int3 x)
{
  return __clc_convert_int3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtn(int3 x)
{
  return __clc_convert_int3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtz(int4 x)
{
  return __clc_convert_int4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rte(int4 x)
{
  return __clc_convert_int4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtp(int4 x)
{
  return __clc_convert_int4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtn(int4 x)
{
  return __clc_convert_int4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtz(int8 x)
{
  return __clc_convert_int8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rte(int8 x)
{
  return __clc_convert_int8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtp(int8 x)
{
  return __clc_convert_int8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtn(int8 x)
{
  return __clc_convert_int8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtz(int16 x)
{
  return __clc_convert_int16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rte(int16 x)
{
  return __clc_convert_int16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtp(int16 x)
{
  return __clc_convert_int16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtn(int16 x)
{
  return __clc_convert_int16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtz(int x)
{
  return __clc_convert_uint_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rte(int x)
{
  return __clc_convert_uint_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtp(int x)
{
  return __clc_convert_uint_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtn(int x)
{
  return __clc_convert_uint_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtz(int2 x)
{
  return __clc_convert_uint2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rte(int2 x)
{
  return __clc_convert_uint2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtp(int2 x)
{
  return __clc_convert_uint2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtn(int2 x)
{
  return __clc_convert_uint2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtz(int3 x)
{
  return __clc_convert_uint3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rte(int3 x)
{
  return __clc_convert_uint3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtp(int3 x)
{
  return __clc_convert_uint3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtn(int3 x)
{
  return __clc_convert_uint3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtz(int4 x)
{
  return __clc_convert_uint4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rte(int4 x)
{
  return __clc_convert_uint4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtp(int4 x)
{
  return __clc_convert_uint4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtn(int4 x)
{
  return __clc_convert_uint4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtz(int8 x)
{
  return __clc_convert_uint8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rte(int8 x)
{
  return __clc_convert_uint8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtp(int8 x)
{
  return __clc_convert_uint8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtn(int8 x)
{
  return __clc_convert_uint8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtz(int16 x)
{
  return __clc_convert_uint16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rte(int16 x)
{
  return __clc_convert_uint16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtp(int16 x)
{
  return __clc_convert_uint16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtn(int16 x)
{
  return __clc_convert_uint16_rtn(x);
}

#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtz(int x)
{
  return __clc_convert_long_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rte(int x)
{
  return __clc_convert_long_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtp(int x)
{
  return __clc_convert_long_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtn(int x)
{
  return __clc_convert_long_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtz(int2 x)
{
  return __clc_convert_long2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rte(int2 x)
{
  return __clc_convert_long2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtp(int2 x)
{
  return __clc_convert_long2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtn(int2 x)
{
  return __clc_convert_long2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtz(int3 x)
{
  return __clc_convert_long3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rte(int3 x)
{
  return __clc_convert_long3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtp(int3 x)
{
  return __clc_convert_long3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtn(int3 x)
{
  return __clc_convert_long3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtz(int4 x)
{
  return __clc_convert_long4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rte(int4 x)
{
  return __clc_convert_long4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtp(int4 x)
{
  return __clc_convert_long4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtn(int4 x)
{
  return __clc_convert_long4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtz(int8 x)
{
  return __clc_convert_long8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rte(int8 x)
{
  return __clc_convert_long8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtp(int8 x)
{
  return __clc_convert_long8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtn(int8 x)
{
  return __clc_convert_long8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtz(int16 x)
{
  return __clc_convert_long16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rte(int16 x)
{
  return __clc_convert_long16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtp(int16 x)
{
  return __clc_convert_long16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtn(int16 x)
{
  return __clc_convert_long16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtz(int x)
{
  return __clc_convert_ulong_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rte(int x)
{
  return __clc_convert_ulong_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtp(int x)
{
  return __clc_convert_ulong_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtn(int x)
{
  return __clc_convert_ulong_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtz(int2 x)
{
  return __clc_convert_ulong2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rte(int2 x)
{
  return __clc_convert_ulong2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtp(int2 x)
{
  return __clc_convert_ulong2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtn(int2 x)
{
  return __clc_convert_ulong2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtz(int3 x)
{
  return __clc_convert_ulong3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rte(int3 x)
{
  return __clc_convert_ulong3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtp(int3 x)
{
  return __clc_convert_ulong3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtn(int3 x)
{
  return __clc_convert_ulong3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtz(int4 x)
{
  return __clc_convert_ulong4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rte(int4 x)
{
  return __clc_convert_ulong4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtp(int4 x)
{
  return __clc_convert_ulong4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtn(int4 x)
{
  return __clc_convert_ulong4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtz(int8 x)
{
  return __clc_convert_ulong8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rte(int8 x)
{
  return __clc_convert_ulong8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtp(int8 x)
{
  return __clc_convert_ulong8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtn(int8 x)
{
  return __clc_convert_ulong8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtz(int16 x)
{
  return __clc_convert_ulong16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rte(int16 x)
{
  return __clc_convert_ulong16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtp(int16 x)
{
  return __clc_convert_ulong16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtn(int16 x)
{
  return __clc_convert_ulong16_rtn(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtz(uint x)
{
  return __clc_convert_char_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rte(uint x)
{
  return __clc_convert_char_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtp(uint x)
{
  return __clc_convert_char_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtn(uint x)
{
  return __clc_convert_char_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtz(uint2 x)
{
  return __clc_convert_char2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rte(uint2 x)
{
  return __clc_convert_char2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtp(uint2 x)
{
  return __clc_convert_char2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtn(uint2 x)
{
  return __clc_convert_char2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtz(uint3 x)
{
  return __clc_convert_char3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rte(uint3 x)
{
  return __clc_convert_char3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtp(uint3 x)
{
  return __clc_convert_char3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtn(uint3 x)
{
  return __clc_convert_char3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtz(uint4 x)
{
  return __clc_convert_char4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rte(uint4 x)
{
  return __clc_convert_char4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtp(uint4 x)
{
  return __clc_convert_char4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtn(uint4 x)
{
  return __clc_convert_char4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtz(uint8 x)
{
  return __clc_convert_char8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rte(uint8 x)
{
  return __clc_convert_char8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtp(uint8 x)
{
  return __clc_convert_char8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtn(uint8 x)
{
  return __clc_convert_char8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtz(uint16 x)
{
  return __clc_convert_char16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rte(uint16 x)
{
  return __clc_convert_char16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtp(uint16 x)
{
  return __clc_convert_char16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtn(uint16 x)
{
  return __clc_convert_char16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtz(uint x)
{
  return __clc_convert_schar_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rte(uint x)
{
  return __clc_convert_schar_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtp(uint x)
{
  return __clc_convert_schar_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtn(uint x)
{
  return __clc_convert_schar_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtz(uint2 x)
{
  return __clc_convert_schar2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rte(uint2 x)
{
  return __clc_convert_schar2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtp(uint2 x)
{
  return __clc_convert_schar2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtn(uint2 x)
{
  return __clc_convert_schar2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtz(uint3 x)
{
  return __clc_convert_schar3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rte(uint3 x)
{
  return __clc_convert_schar3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtp(uint3 x)
{
  return __clc_convert_schar3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtn(uint3 x)
{
  return __clc_convert_schar3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtz(uint4 x)
{
  return __clc_convert_schar4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rte(uint4 x)
{
  return __clc_convert_schar4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtp(uint4 x)
{
  return __clc_convert_schar4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtn(uint4 x)
{
  return __clc_convert_schar4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtz(uint8 x)
{
  return __clc_convert_schar8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rte(uint8 x)
{
  return __clc_convert_schar8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtp(uint8 x)
{
  return __clc_convert_schar8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtn(uint8 x)
{
  return __clc_convert_schar8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtz(uint16 x)
{
  return __clc_convert_schar16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rte(uint16 x)
{
  return __clc_convert_schar16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtp(uint16 x)
{
  return __clc_convert_schar16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtn(uint16 x)
{
  return __clc_convert_schar16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtz(uint x)
{
  return __clc_convert_uchar_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rte(uint x)
{
  return __clc_convert_uchar_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtp(uint x)
{
  return __clc_convert_uchar_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtn(uint x)
{
  return __clc_convert_uchar_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtz(uint2 x)
{
  return __clc_convert_uchar2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rte(uint2 x)
{
  return __clc_convert_uchar2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtp(uint2 x)
{
  return __clc_convert_uchar2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtn(uint2 x)
{
  return __clc_convert_uchar2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtz(uint3 x)
{
  return __clc_convert_uchar3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rte(uint3 x)
{
  return __clc_convert_uchar3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtp(uint3 x)
{
  return __clc_convert_uchar3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtn(uint3 x)
{
  return __clc_convert_uchar3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtz(uint4 x)
{
  return __clc_convert_uchar4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rte(uint4 x)
{
  return __clc_convert_uchar4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtp(uint4 x)
{
  return __clc_convert_uchar4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtn(uint4 x)
{
  return __clc_convert_uchar4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtz(uint8 x)
{
  return __clc_convert_uchar8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rte(uint8 x)
{
  return __clc_convert_uchar8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtp(uint8 x)
{
  return __clc_convert_uchar8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtn(uint8 x)
{
  return __clc_convert_uchar8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtz(uint16 x)
{
  return __clc_convert_uchar16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rte(uint16 x)
{
  return __clc_convert_uchar16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtp(uint16 x)
{
  return __clc_convert_uchar16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtn(uint16 x)
{
  return __clc_convert_uchar16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtz(uint x)
{
  return __clc_convert_short_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rte(uint x)
{
  return __clc_convert_short_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtp(uint x)
{
  return __clc_convert_short_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtn(uint x)
{
  return __clc_convert_short_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtz(uint2 x)
{
  return __clc_convert_short2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rte(uint2 x)
{
  return __clc_convert_short2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtp(uint2 x)
{
  return __clc_convert_short2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtn(uint2 x)
{
  return __clc_convert_short2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtz(uint3 x)
{
  return __clc_convert_short3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rte(uint3 x)
{
  return __clc_convert_short3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtp(uint3 x)
{
  return __clc_convert_short3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtn(uint3 x)
{
  return __clc_convert_short3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtz(uint4 x)
{
  return __clc_convert_short4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rte(uint4 x)
{
  return __clc_convert_short4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtp(uint4 x)
{
  return __clc_convert_short4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtn(uint4 x)
{
  return __clc_convert_short4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtz(uint8 x)
{
  return __clc_convert_short8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rte(uint8 x)
{
  return __clc_convert_short8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtp(uint8 x)
{
  return __clc_convert_short8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtn(uint8 x)
{
  return __clc_convert_short8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtz(uint16 x)
{
  return __clc_convert_short16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rte(uint16 x)
{
  return __clc_convert_short16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtp(uint16 x)
{
  return __clc_convert_short16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtn(uint16 x)
{
  return __clc_convert_short16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtz(uint x)
{
  return __clc_convert_ushort_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rte(uint x)
{
  return __clc_convert_ushort_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtp(uint x)
{
  return __clc_convert_ushort_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtn(uint x)
{
  return __clc_convert_ushort_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtz(uint2 x)
{
  return __clc_convert_ushort2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rte(uint2 x)
{
  return __clc_convert_ushort2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtp(uint2 x)
{
  return __clc_convert_ushort2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtn(uint2 x)
{
  return __clc_convert_ushort2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtz(uint3 x)
{
  return __clc_convert_ushort3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rte(uint3 x)
{
  return __clc_convert_ushort3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtp(uint3 x)
{
  return __clc_convert_ushort3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtn(uint3 x)
{
  return __clc_convert_ushort3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtz(uint4 x)
{
  return __clc_convert_ushort4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rte(uint4 x)
{
  return __clc_convert_ushort4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtp(uint4 x)
{
  return __clc_convert_ushort4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtn(uint4 x)
{
  return __clc_convert_ushort4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtz(uint8 x)
{
  return __clc_convert_ushort8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rte(uint8 x)
{
  return __clc_convert_ushort8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtp(uint8 x)
{
  return __clc_convert_ushort8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtn(uint8 x)
{
  return __clc_convert_ushort8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtz(uint16 x)
{
  return __clc_convert_ushort16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rte(uint16 x)
{
  return __clc_convert_ushort16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtp(uint16 x)
{
  return __clc_convert_ushort16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtn(uint16 x)
{
  return __clc_convert_ushort16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtz(uint x)
{
  return __clc_convert_int_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rte(uint x)
{
  return __clc_convert_int_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtp(uint x)
{
  return __clc_convert_int_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtn(uint x)
{
  return __clc_convert_int_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtz(uint2 x)
{
  return __clc_convert_int2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rte(uint2 x)
{
  return __clc_convert_int2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtp(uint2 x)
{
  return __clc_convert_int2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtn(uint2 x)
{
  return __clc_convert_int2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtz(uint3 x)
{
  return __clc_convert_int3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rte(uint3 x)
{
  return __clc_convert_int3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtp(uint3 x)
{
  return __clc_convert_int3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtn(uint3 x)
{
  return __clc_convert_int3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtz(uint4 x)
{
  return __clc_convert_int4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rte(uint4 x)
{
  return __clc_convert_int4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtp(uint4 x)
{
  return __clc_convert_int4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtn(uint4 x)
{
  return __clc_convert_int4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtz(uint8 x)
{
  return __clc_convert_int8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rte(uint8 x)
{
  return __clc_convert_int8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtp(uint8 x)
{
  return __clc_convert_int8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtn(uint8 x)
{
  return __clc_convert_int8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtz(uint16 x)
{
  return __clc_convert_int16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rte(uint16 x)
{
  return __clc_convert_int16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtp(uint16 x)
{
  return __clc_convert_int16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtn(uint16 x)
{
  return __clc_convert_int16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtz(uint x)
{
  return __clc_convert_uint_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rte(uint x)
{
  return __clc_convert_uint_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtp(uint x)
{
  return __clc_convert_uint_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtn(uint x)
{
  return __clc_convert_uint_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtz(uint2 x)
{
  return __clc_convert_uint2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rte(uint2 x)
{
  return __clc_convert_uint2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtp(uint2 x)
{
  return __clc_convert_uint2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtn(uint2 x)
{
  return __clc_convert_uint2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtz(uint3 x)
{
  return __clc_convert_uint3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rte(uint3 x)
{
  return __clc_convert_uint3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtp(uint3 x)
{
  return __clc_convert_uint3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtn(uint3 x)
{
  return __clc_convert_uint3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtz(uint4 x)
{
  return __clc_convert_uint4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rte(uint4 x)
{
  return __clc_convert_uint4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtp(uint4 x)
{
  return __clc_convert_uint4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtn(uint4 x)
{
  return __clc_convert_uint4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtz(uint8 x)
{
  return __clc_convert_uint8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rte(uint8 x)
{
  return __clc_convert_uint8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtp(uint8 x)
{
  return __clc_convert_uint8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtn(uint8 x)
{
  return __clc_convert_uint8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtz(uint16 x)
{
  return __clc_convert_uint16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rte(uint16 x)
{
  return __clc_convert_uint16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtp(uint16 x)
{
  return __clc_convert_uint16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtn(uint16 x)
{
  return __clc_convert_uint16_rtn(x);
}

#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtz(uint x)
{
  return __clc_convert_long_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rte(uint x)
{
  return __clc_convert_long_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtp(uint x)
{
  return __clc_convert_long_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtn(uint x)
{
  return __clc_convert_long_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtz(uint2 x)
{
  return __clc_convert_long2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rte(uint2 x)
{
  return __clc_convert_long2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtp(uint2 x)
{
  return __clc_convert_long2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtn(uint2 x)
{
  return __clc_convert_long2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtz(uint3 x)
{
  return __clc_convert_long3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rte(uint3 x)
{
  return __clc_convert_long3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtp(uint3 x)
{
  return __clc_convert_long3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtn(uint3 x)
{
  return __clc_convert_long3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtz(uint4 x)
{
  return __clc_convert_long4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rte(uint4 x)
{
  return __clc_convert_long4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtp(uint4 x)
{
  return __clc_convert_long4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtn(uint4 x)
{
  return __clc_convert_long4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtz(uint8 x)
{
  return __clc_convert_long8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rte(uint8 x)
{
  return __clc_convert_long8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtp(uint8 x)
{
  return __clc_convert_long8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtn(uint8 x)
{
  return __clc_convert_long8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtz(uint16 x)
{
  return __clc_convert_long16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rte(uint16 x)
{
  return __clc_convert_long16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtp(uint16 x)
{
  return __clc_convert_long16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtn(uint16 x)
{
  return __clc_convert_long16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtz(uint x)
{
  return __clc_convert_ulong_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rte(uint x)
{
  return __clc_convert_ulong_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtp(uint x)
{
  return __clc_convert_ulong_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtn(uint x)
{
  return __clc_convert_ulong_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtz(uint2 x)
{
  return __clc_convert_ulong2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rte(uint2 x)
{
  return __clc_convert_ulong2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtp(uint2 x)
{
  return __clc_convert_ulong2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtn(uint2 x)
{
  return __clc_convert_ulong2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtz(uint3 x)
{
  return __clc_convert_ulong3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rte(uint3 x)
{
  return __clc_convert_ulong3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtp(uint3 x)
{
  return __clc_convert_ulong3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtn(uint3 x)
{
  return __clc_convert_ulong3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtz(uint4 x)
{
  return __clc_convert_ulong4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rte(uint4 x)
{
  return __clc_convert_ulong4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtp(uint4 x)
{
  return __clc_convert_ulong4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtn(uint4 x)
{
  return __clc_convert_ulong4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtz(uint8 x)
{
  return __clc_convert_ulong8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rte(uint8 x)
{
  return __clc_convert_ulong8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtp(uint8 x)
{
  return __clc_convert_ulong8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtn(uint8 x)
{
  return __clc_convert_ulong8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtz(uint16 x)
{
  return __clc_convert_ulong16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rte(uint16 x)
{
  return __clc_convert_ulong16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtp(uint16 x)
{
  return __clc_convert_ulong16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtn(uint16 x)
{
  return __clc_convert_ulong16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtz(long x)
{
  return __clc_convert_char_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rte(long x)
{
  return __clc_convert_char_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtp(long x)
{
  return __clc_convert_char_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtn(long x)
{
  return __clc_convert_char_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtz(long2 x)
{
  return __clc_convert_char2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rte(long2 x)
{
  return __clc_convert_char2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtp(long2 x)
{
  return __clc_convert_char2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtn(long2 x)
{
  return __clc_convert_char2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtz(long3 x)
{
  return __clc_convert_char3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rte(long3 x)
{
  return __clc_convert_char3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtp(long3 x)
{
  return __clc_convert_char3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtn(long3 x)
{
  return __clc_convert_char3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtz(long4 x)
{
  return __clc_convert_char4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rte(long4 x)
{
  return __clc_convert_char4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtp(long4 x)
{
  return __clc_convert_char4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtn(long4 x)
{
  return __clc_convert_char4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtz(long8 x)
{
  return __clc_convert_char8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rte(long8 x)
{
  return __clc_convert_char8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtp(long8 x)
{
  return __clc_convert_char8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtn(long8 x)
{
  return __clc_convert_char8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtz(long16 x)
{
  return __clc_convert_char16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rte(long16 x)
{
  return __clc_convert_char16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtp(long16 x)
{
  return __clc_convert_char16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtn(long16 x)
{
  return __clc_convert_char16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtz(long x)
{
  return __clc_convert_schar_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rte(long x)
{
  return __clc_convert_schar_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtp(long x)
{
  return __clc_convert_schar_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtn(long x)
{
  return __clc_convert_schar_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtz(long2 x)
{
  return __clc_convert_schar2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rte(long2 x)
{
  return __clc_convert_schar2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtp(long2 x)
{
  return __clc_convert_schar2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtn(long2 x)
{
  return __clc_convert_schar2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtz(long3 x)
{
  return __clc_convert_schar3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rte(long3 x)
{
  return __clc_convert_schar3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtp(long3 x)
{
  return __clc_convert_schar3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtn(long3 x)
{
  return __clc_convert_schar3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtz(long4 x)
{
  return __clc_convert_schar4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rte(long4 x)
{
  return __clc_convert_schar4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtp(long4 x)
{
  return __clc_convert_schar4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtn(long4 x)
{
  return __clc_convert_schar4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtz(long8 x)
{
  return __clc_convert_schar8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rte(long8 x)
{
  return __clc_convert_schar8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtp(long8 x)
{
  return __clc_convert_schar8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtn(long8 x)
{
  return __clc_convert_schar8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtz(long16 x)
{
  return __clc_convert_schar16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rte(long16 x)
{
  return __clc_convert_schar16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtp(long16 x)
{
  return __clc_convert_schar16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtn(long16 x)
{
  return __clc_convert_schar16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtz(long x)
{
  return __clc_convert_uchar_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rte(long x)
{
  return __clc_convert_uchar_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtp(long x)
{
  return __clc_convert_uchar_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtn(long x)
{
  return __clc_convert_uchar_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtz(long2 x)
{
  return __clc_convert_uchar2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rte(long2 x)
{
  return __clc_convert_uchar2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtp(long2 x)
{
  return __clc_convert_uchar2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtn(long2 x)
{
  return __clc_convert_uchar2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtz(long3 x)
{
  return __clc_convert_uchar3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rte(long3 x)
{
  return __clc_convert_uchar3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtp(long3 x)
{
  return __clc_convert_uchar3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtn(long3 x)
{
  return __clc_convert_uchar3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtz(long4 x)
{
  return __clc_convert_uchar4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rte(long4 x)
{
  return __clc_convert_uchar4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtp(long4 x)
{
  return __clc_convert_uchar4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtn(long4 x)
{
  return __clc_convert_uchar4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtz(long8 x)
{
  return __clc_convert_uchar8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rte(long8 x)
{
  return __clc_convert_uchar8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtp(long8 x)
{
  return __clc_convert_uchar8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtn(long8 x)
{
  return __clc_convert_uchar8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtz(long16 x)
{
  return __clc_convert_uchar16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rte(long16 x)
{
  return __clc_convert_uchar16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtp(long16 x)
{
  return __clc_convert_uchar16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtn(long16 x)
{
  return __clc_convert_uchar16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtz(long x)
{
  return __clc_convert_short_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rte(long x)
{
  return __clc_convert_short_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtp(long x)
{
  return __clc_convert_short_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtn(long x)
{
  return __clc_convert_short_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtz(long2 x)
{
  return __clc_convert_short2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rte(long2 x)
{
  return __clc_convert_short2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtp(long2 x)
{
  return __clc_convert_short2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtn(long2 x)
{
  return __clc_convert_short2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtz(long3 x)
{
  return __clc_convert_short3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rte(long3 x)
{
  return __clc_convert_short3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtp(long3 x)
{
  return __clc_convert_short3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtn(long3 x)
{
  return __clc_convert_short3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtz(long4 x)
{
  return __clc_convert_short4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rte(long4 x)
{
  return __clc_convert_short4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtp(long4 x)
{
  return __clc_convert_short4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtn(long4 x)
{
  return __clc_convert_short4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtz(long8 x)
{
  return __clc_convert_short8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rte(long8 x)
{
  return __clc_convert_short8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtp(long8 x)
{
  return __clc_convert_short8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtn(long8 x)
{
  return __clc_convert_short8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtz(long16 x)
{
  return __clc_convert_short16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rte(long16 x)
{
  return __clc_convert_short16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtp(long16 x)
{
  return __clc_convert_short16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtn(long16 x)
{
  return __clc_convert_short16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtz(long x)
{
  return __clc_convert_ushort_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rte(long x)
{
  return __clc_convert_ushort_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtp(long x)
{
  return __clc_convert_ushort_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtn(long x)
{
  return __clc_convert_ushort_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtz(long2 x)
{
  return __clc_convert_ushort2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rte(long2 x)
{
  return __clc_convert_ushort2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtp(long2 x)
{
  return __clc_convert_ushort2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtn(long2 x)
{
  return __clc_convert_ushort2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtz(long3 x)
{
  return __clc_convert_ushort3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rte(long3 x)
{
  return __clc_convert_ushort3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtp(long3 x)
{
  return __clc_convert_ushort3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtn(long3 x)
{
  return __clc_convert_ushort3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtz(long4 x)
{
  return __clc_convert_ushort4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rte(long4 x)
{
  return __clc_convert_ushort4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtp(long4 x)
{
  return __clc_convert_ushort4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtn(long4 x)
{
  return __clc_convert_ushort4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtz(long8 x)
{
  return __clc_convert_ushort8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rte(long8 x)
{
  return __clc_convert_ushort8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtp(long8 x)
{
  return __clc_convert_ushort8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtn(long8 x)
{
  return __clc_convert_ushort8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtz(long16 x)
{
  return __clc_convert_ushort16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rte(long16 x)
{
  return __clc_convert_ushort16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtp(long16 x)
{
  return __clc_convert_ushort16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtn(long16 x)
{
  return __clc_convert_ushort16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtz(long x)
{
  return __clc_convert_int_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rte(long x)
{
  return __clc_convert_int_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtp(long x)
{
  return __clc_convert_int_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtn(long x)
{
  return __clc_convert_int_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtz(long2 x)
{
  return __clc_convert_int2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rte(long2 x)
{
  return __clc_convert_int2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtp(long2 x)
{
  return __clc_convert_int2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtn(long2 x)
{
  return __clc_convert_int2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtz(long3 x)
{
  return __clc_convert_int3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rte(long3 x)
{
  return __clc_convert_int3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtp(long3 x)
{
  return __clc_convert_int3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtn(long3 x)
{
  return __clc_convert_int3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtz(long4 x)
{
  return __clc_convert_int4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rte(long4 x)
{
  return __clc_convert_int4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtp(long4 x)
{
  return __clc_convert_int4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtn(long4 x)
{
  return __clc_convert_int4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtz(long8 x)
{
  return __clc_convert_int8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rte(long8 x)
{
  return __clc_convert_int8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtp(long8 x)
{
  return __clc_convert_int8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtn(long8 x)
{
  return __clc_convert_int8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtz(long16 x)
{
  return __clc_convert_int16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rte(long16 x)
{
  return __clc_convert_int16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtp(long16 x)
{
  return __clc_convert_int16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtn(long16 x)
{
  return __clc_convert_int16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtz(long x)
{
  return __clc_convert_uint_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rte(long x)
{
  return __clc_convert_uint_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtp(long x)
{
  return __clc_convert_uint_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtn(long x)
{
  return __clc_convert_uint_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtz(long2 x)
{
  return __clc_convert_uint2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rte(long2 x)
{
  return __clc_convert_uint2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtp(long2 x)
{
  return __clc_convert_uint2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtn(long2 x)
{
  return __clc_convert_uint2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtz(long3 x)
{
  return __clc_convert_uint3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rte(long3 x)
{
  return __clc_convert_uint3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtp(long3 x)
{
  return __clc_convert_uint3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtn(long3 x)
{
  return __clc_convert_uint3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtz(long4 x)
{
  return __clc_convert_uint4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rte(long4 x)
{
  return __clc_convert_uint4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtp(long4 x)
{
  return __clc_convert_uint4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtn(long4 x)
{
  return __clc_convert_uint4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtz(long8 x)
{
  return __clc_convert_uint8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rte(long8 x)
{
  return __clc_convert_uint8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtp(long8 x)
{
  return __clc_convert_uint8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtn(long8 x)
{
  return __clc_convert_uint8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtz(long16 x)
{
  return __clc_convert_uint16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rte(long16 x)
{
  return __clc_convert_uint16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtp(long16 x)
{
  return __clc_convert_uint16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtn(long16 x)
{
  return __clc_convert_uint16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtz(long x)
{
  return __clc_convert_long_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rte(long x)
{
  return __clc_convert_long_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtp(long x)
{
  return __clc_convert_long_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtn(long x)
{
  return __clc_convert_long_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtz(long2 x)
{
  return __clc_convert_long2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rte(long2 x)
{
  return __clc_convert_long2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtp(long2 x)
{
  return __clc_convert_long2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtn(long2 x)
{
  return __clc_convert_long2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtz(long3 x)
{
  return __clc_convert_long3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rte(long3 x)
{
  return __clc_convert_long3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtp(long3 x)
{
  return __clc_convert_long3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtn(long3 x)
{
  return __clc_convert_long3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtz(long4 x)
{
  return __clc_convert_long4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rte(long4 x)
{
  return __clc_convert_long4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtp(long4 x)
{
  return __clc_convert_long4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtn(long4 x)
{
  return __clc_convert_long4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtz(long8 x)
{
  return __clc_convert_long8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rte(long8 x)
{
  return __clc_convert_long8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtp(long8 x)
{
  return __clc_convert_long8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtn(long8 x)
{
  return __clc_convert_long8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtz(long16 x)
{
  return __clc_convert_long16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rte(long16 x)
{
  return __clc_convert_long16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtp(long16 x)
{
  return __clc_convert_long16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtn(long16 x)
{
  return __clc_convert_long16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtz(long x)
{
  return __clc_convert_ulong_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rte(long x)
{
  return __clc_convert_ulong_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtp(long x)
{
  return __clc_convert_ulong_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtn(long x)
{
  return __clc_convert_ulong_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtz(long2 x)
{
  return __clc_convert_ulong2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rte(long2 x)
{
  return __clc_convert_ulong2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtp(long2 x)
{
  return __clc_convert_ulong2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtn(long2 x)
{
  return __clc_convert_ulong2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtz(long3 x)
{
  return __clc_convert_ulong3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rte(long3 x)
{
  return __clc_convert_ulong3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtp(long3 x)
{
  return __clc_convert_ulong3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtn(long3 x)
{
  return __clc_convert_ulong3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtz(long4 x)
{
  return __clc_convert_ulong4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rte(long4 x)
{
  return __clc_convert_ulong4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtp(long4 x)
{
  return __clc_convert_ulong4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtn(long4 x)
{
  return __clc_convert_ulong4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtz(long8 x)
{
  return __clc_convert_ulong8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rte(long8 x)
{
  return __clc_convert_ulong8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtp(long8 x)
{
  return __clc_convert_ulong8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtn(long8 x)
{
  return __clc_convert_ulong8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtz(long16 x)
{
  return __clc_convert_ulong16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rte(long16 x)
{
  return __clc_convert_ulong16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtp(long16 x)
{
  return __clc_convert_ulong16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtn(long16 x)
{
  return __clc_convert_ulong16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtz(ulong x)
{
  return __clc_convert_char_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rte(ulong x)
{
  return __clc_convert_char_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtp(ulong x)
{
  return __clc_convert_char_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char __clc_convert_char_sat_rtn(ulong x)
{
  return __clc_convert_char_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtz(ulong2 x)
{
  return __clc_convert_char2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rte(ulong2 x)
{
  return __clc_convert_char2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtp(ulong2 x)
{
  return __clc_convert_char2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char2 __clc_convert_char2_sat_rtn(ulong2 x)
{
  return __clc_convert_char2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtz(ulong3 x)
{
  return __clc_convert_char3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rte(ulong3 x)
{
  return __clc_convert_char3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtp(ulong3 x)
{
  return __clc_convert_char3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char3 __clc_convert_char3_sat_rtn(ulong3 x)
{
  return __clc_convert_char3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtz(ulong4 x)
{
  return __clc_convert_char4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rte(ulong4 x)
{
  return __clc_convert_char4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtp(ulong4 x)
{
  return __clc_convert_char4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char4 __clc_convert_char4_sat_rtn(ulong4 x)
{
  return __clc_convert_char4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtz(ulong8 x)
{
  return __clc_convert_char8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rte(ulong8 x)
{
  return __clc_convert_char8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtp(ulong8 x)
{
  return __clc_convert_char8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char8 __clc_convert_char8_sat_rtn(ulong8 x)
{
  return __clc_convert_char8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtz(ulong16 x)
{
  return __clc_convert_char16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rte(ulong16 x)
{
  return __clc_convert_char16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtp(ulong16 x)
{
  return __clc_convert_char16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
char16 __clc_convert_char16_sat_rtn(ulong16 x)
{
  return __clc_convert_char16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtz(ulong x)
{
  return __clc_convert_schar_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rte(ulong x)
{
  return __clc_convert_schar_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtp(ulong x)
{
  return __clc_convert_schar_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar __clc_convert_schar_sat_rtn(ulong x)
{
  return __clc_convert_schar_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtz(ulong2 x)
{
  return __clc_convert_schar2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rte(ulong2 x)
{
  return __clc_convert_schar2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtp(ulong2 x)
{
  return __clc_convert_schar2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar2 __clc_convert_schar2_sat_rtn(ulong2 x)
{
  return __clc_convert_schar2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtz(ulong3 x)
{
  return __clc_convert_schar3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rte(ulong3 x)
{
  return __clc_convert_schar3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtp(ulong3 x)
{
  return __clc_convert_schar3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar3 __clc_convert_schar3_sat_rtn(ulong3 x)
{
  return __clc_convert_schar3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtz(ulong4 x)
{
  return __clc_convert_schar4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rte(ulong4 x)
{
  return __clc_convert_schar4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtp(ulong4 x)
{
  return __clc_convert_schar4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar4 __clc_convert_schar4_sat_rtn(ulong4 x)
{
  return __clc_convert_schar4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtz(ulong8 x)
{
  return __clc_convert_schar8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rte(ulong8 x)
{
  return __clc_convert_schar8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtp(ulong8 x)
{
  return __clc_convert_schar8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar8 __clc_convert_schar8_sat_rtn(ulong8 x)
{
  return __clc_convert_schar8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtz(ulong16 x)
{
  return __clc_convert_schar16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rte(ulong16 x)
{
  return __clc_convert_schar16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtp(ulong16 x)
{
  return __clc_convert_schar16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
schar16 __clc_convert_schar16_sat_rtn(ulong16 x)
{
  return __clc_convert_schar16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtz(ulong x)
{
  return __clc_convert_uchar_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rte(ulong x)
{
  return __clc_convert_uchar_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtp(ulong x)
{
  return __clc_convert_uchar_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar __clc_convert_uchar_sat_rtn(ulong x)
{
  return __clc_convert_uchar_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtz(ulong2 x)
{
  return __clc_convert_uchar2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rte(ulong2 x)
{
  return __clc_convert_uchar2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtp(ulong2 x)
{
  return __clc_convert_uchar2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar2 __clc_convert_uchar2_sat_rtn(ulong2 x)
{
  return __clc_convert_uchar2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtz(ulong3 x)
{
  return __clc_convert_uchar3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rte(ulong3 x)
{
  return __clc_convert_uchar3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtp(ulong3 x)
{
  return __clc_convert_uchar3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar3 __clc_convert_uchar3_sat_rtn(ulong3 x)
{
  return __clc_convert_uchar3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtz(ulong4 x)
{
  return __clc_convert_uchar4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rte(ulong4 x)
{
  return __clc_convert_uchar4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtp(ulong4 x)
{
  return __clc_convert_uchar4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar4 __clc_convert_uchar4_sat_rtn(ulong4 x)
{
  return __clc_convert_uchar4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtz(ulong8 x)
{
  return __clc_convert_uchar8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rte(ulong8 x)
{
  return __clc_convert_uchar8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtp(ulong8 x)
{
  return __clc_convert_uchar8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar8 __clc_convert_uchar8_sat_rtn(ulong8 x)
{
  return __clc_convert_uchar8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtz(ulong16 x)
{
  return __clc_convert_uchar16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rte(ulong16 x)
{
  return __clc_convert_uchar16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtp(ulong16 x)
{
  return __clc_convert_uchar16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uchar16 __clc_convert_uchar16_sat_rtn(ulong16 x)
{
  return __clc_convert_uchar16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtz(ulong x)
{
  return __clc_convert_short_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rte(ulong x)
{
  return __clc_convert_short_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtp(ulong x)
{
  return __clc_convert_short_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short __clc_convert_short_sat_rtn(ulong x)
{
  return __clc_convert_short_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtz(ulong2 x)
{
  return __clc_convert_short2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rte(ulong2 x)
{
  return __clc_convert_short2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtp(ulong2 x)
{
  return __clc_convert_short2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short2 __clc_convert_short2_sat_rtn(ulong2 x)
{
  return __clc_convert_short2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtz(ulong3 x)
{
  return __clc_convert_short3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rte(ulong3 x)
{
  return __clc_convert_short3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtp(ulong3 x)
{
  return __clc_convert_short3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short3 __clc_convert_short3_sat_rtn(ulong3 x)
{
  return __clc_convert_short3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtz(ulong4 x)
{
  return __clc_convert_short4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rte(ulong4 x)
{
  return __clc_convert_short4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtp(ulong4 x)
{
  return __clc_convert_short4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short4 __clc_convert_short4_sat_rtn(ulong4 x)
{
  return __clc_convert_short4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtz(ulong8 x)
{
  return __clc_convert_short8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rte(ulong8 x)
{
  return __clc_convert_short8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtp(ulong8 x)
{
  return __clc_convert_short8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short8 __clc_convert_short8_sat_rtn(ulong8 x)
{
  return __clc_convert_short8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtz(ulong16 x)
{
  return __clc_convert_short16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rte(ulong16 x)
{
  return __clc_convert_short16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtp(ulong16 x)
{
  return __clc_convert_short16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
short16 __clc_convert_short16_sat_rtn(ulong16 x)
{
  return __clc_convert_short16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtz(ulong x)
{
  return __clc_convert_ushort_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rte(ulong x)
{
  return __clc_convert_ushort_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtp(ulong x)
{
  return __clc_convert_ushort_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort __clc_convert_ushort_sat_rtn(ulong x)
{
  return __clc_convert_ushort_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtz(ulong2 x)
{
  return __clc_convert_ushort2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rte(ulong2 x)
{
  return __clc_convert_ushort2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtp(ulong2 x)
{
  return __clc_convert_ushort2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort2 __clc_convert_ushort2_sat_rtn(ulong2 x)
{
  return __clc_convert_ushort2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtz(ulong3 x)
{
  return __clc_convert_ushort3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rte(ulong3 x)
{
  return __clc_convert_ushort3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtp(ulong3 x)
{
  return __clc_convert_ushort3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort3 __clc_convert_ushort3_sat_rtn(ulong3 x)
{
  return __clc_convert_ushort3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtz(ulong4 x)
{
  return __clc_convert_ushort4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rte(ulong4 x)
{
  return __clc_convert_ushort4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtp(ulong4 x)
{
  return __clc_convert_ushort4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort4 __clc_convert_ushort4_sat_rtn(ulong4 x)
{
  return __clc_convert_ushort4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtz(ulong8 x)
{
  return __clc_convert_ushort8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rte(ulong8 x)
{
  return __clc_convert_ushort8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtp(ulong8 x)
{
  return __clc_convert_ushort8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort8 __clc_convert_ushort8_sat_rtn(ulong8 x)
{
  return __clc_convert_ushort8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtz(ulong16 x)
{
  return __clc_convert_ushort16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rte(ulong16 x)
{
  return __clc_convert_ushort16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtp(ulong16 x)
{
  return __clc_convert_ushort16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ushort16 __clc_convert_ushort16_sat_rtn(ulong16 x)
{
  return __clc_convert_ushort16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtz(ulong x)
{
  return __clc_convert_int_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rte(ulong x)
{
  return __clc_convert_int_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtp(ulong x)
{
  return __clc_convert_int_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int __clc_convert_int_sat_rtn(ulong x)
{
  return __clc_convert_int_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtz(ulong2 x)
{
  return __clc_convert_int2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rte(ulong2 x)
{
  return __clc_convert_int2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtp(ulong2 x)
{
  return __clc_convert_int2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int2 __clc_convert_int2_sat_rtn(ulong2 x)
{
  return __clc_convert_int2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtz(ulong3 x)
{
  return __clc_convert_int3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rte(ulong3 x)
{
  return __clc_convert_int3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtp(ulong3 x)
{
  return __clc_convert_int3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int3 __clc_convert_int3_sat_rtn(ulong3 x)
{
  return __clc_convert_int3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtz(ulong4 x)
{
  return __clc_convert_int4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rte(ulong4 x)
{
  return __clc_convert_int4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtp(ulong4 x)
{
  return __clc_convert_int4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int4 __clc_convert_int4_sat_rtn(ulong4 x)
{
  return __clc_convert_int4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtz(ulong8 x)
{
  return __clc_convert_int8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rte(ulong8 x)
{
  return __clc_convert_int8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtp(ulong8 x)
{
  return __clc_convert_int8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int8 __clc_convert_int8_sat_rtn(ulong8 x)
{
  return __clc_convert_int8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtz(ulong16 x)
{
  return __clc_convert_int16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rte(ulong16 x)
{
  return __clc_convert_int16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtp(ulong16 x)
{
  return __clc_convert_int16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
int16 __clc_convert_int16_sat_rtn(ulong16 x)
{
  return __clc_convert_int16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtz(ulong x)
{
  return __clc_convert_uint_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rte(ulong x)
{
  return __clc_convert_uint_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtp(ulong x)
{
  return __clc_convert_uint_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint __clc_convert_uint_sat_rtn(ulong x)
{
  return __clc_convert_uint_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtz(ulong2 x)
{
  return __clc_convert_uint2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rte(ulong2 x)
{
  return __clc_convert_uint2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtp(ulong2 x)
{
  return __clc_convert_uint2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint2 __clc_convert_uint2_sat_rtn(ulong2 x)
{
  return __clc_convert_uint2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtz(ulong3 x)
{
  return __clc_convert_uint3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rte(ulong3 x)
{
  return __clc_convert_uint3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtp(ulong3 x)
{
  return __clc_convert_uint3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint3 __clc_convert_uint3_sat_rtn(ulong3 x)
{
  return __clc_convert_uint3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtz(ulong4 x)
{
  return __clc_convert_uint4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rte(ulong4 x)
{
  return __clc_convert_uint4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtp(ulong4 x)
{
  return __clc_convert_uint4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint4 __clc_convert_uint4_sat_rtn(ulong4 x)
{
  return __clc_convert_uint4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtz(ulong8 x)
{
  return __clc_convert_uint8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rte(ulong8 x)
{
  return __clc_convert_uint8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtp(ulong8 x)
{
  return __clc_convert_uint8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint8 __clc_convert_uint8_sat_rtn(ulong8 x)
{
  return __clc_convert_uint8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtz(ulong16 x)
{
  return __clc_convert_uint16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rte(ulong16 x)
{
  return __clc_convert_uint16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtp(ulong16 x)
{
  return __clc_convert_uint16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
uint16 __clc_convert_uint16_sat_rtn(ulong16 x)
{
  return __clc_convert_uint16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtz(ulong x)
{
  return __clc_convert_long_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rte(ulong x)
{
  return __clc_convert_long_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtp(ulong x)
{
  return __clc_convert_long_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long __clc_convert_long_sat_rtn(ulong x)
{
  return __clc_convert_long_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtz(ulong2 x)
{
  return __clc_convert_long2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rte(ulong2 x)
{
  return __clc_convert_long2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtp(ulong2 x)
{
  return __clc_convert_long2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long2 __clc_convert_long2_sat_rtn(ulong2 x)
{
  return __clc_convert_long2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtz(ulong3 x)
{
  return __clc_convert_long3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rte(ulong3 x)
{
  return __clc_convert_long3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtp(ulong3 x)
{
  return __clc_convert_long3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long3 __clc_convert_long3_sat_rtn(ulong3 x)
{
  return __clc_convert_long3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtz(ulong4 x)
{
  return __clc_convert_long4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rte(ulong4 x)
{
  return __clc_convert_long4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtp(ulong4 x)
{
  return __clc_convert_long4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long4 __clc_convert_long4_sat_rtn(ulong4 x)
{
  return __clc_convert_long4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtz(ulong8 x)
{
  return __clc_convert_long8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rte(ulong8 x)
{
  return __clc_convert_long8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtp(ulong8 x)
{
  return __clc_convert_long8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long8 __clc_convert_long8_sat_rtn(ulong8 x)
{
  return __clc_convert_long8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtz(ulong16 x)
{
  return __clc_convert_long16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rte(ulong16 x)
{
  return __clc_convert_long16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtp(ulong16 x)
{
  return __clc_convert_long16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
long16 __clc_convert_long16_sat_rtn(ulong16 x)
{
  return __clc_convert_long16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtz(ulong x)
{
  return __clc_convert_ulong_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rte(ulong x)
{
  return __clc_convert_ulong_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtp(ulong x)
{
  return __clc_convert_ulong_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong __clc_convert_ulong_sat_rtn(ulong x)
{
  return __clc_convert_ulong_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtz(ulong2 x)
{
  return __clc_convert_ulong2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rte(ulong2 x)
{
  return __clc_convert_ulong2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtp(ulong2 x)
{
  return __clc_convert_ulong2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong2 __clc_convert_ulong2_sat_rtn(ulong2 x)
{
  return __clc_convert_ulong2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtz(ulong3 x)
{
  return __clc_convert_ulong3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rte(ulong3 x)
{
  return __clc_convert_ulong3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtp(ulong3 x)
{
  return __clc_convert_ulong3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong3 __clc_convert_ulong3_sat_rtn(ulong3 x)
{
  return __clc_convert_ulong3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtz(ulong4 x)
{
  return __clc_convert_ulong4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rte(ulong4 x)
{
  return __clc_convert_ulong4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtp(ulong4 x)
{
  return __clc_convert_ulong4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong4 __clc_convert_ulong4_sat_rtn(ulong4 x)
{
  return __clc_convert_ulong4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtz(ulong8 x)
{
  return __clc_convert_ulong8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rte(ulong8 x)
{
  return __clc_convert_ulong8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtp(ulong8 x)
{
  return __clc_convert_ulong8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong8 __clc_convert_ulong8_sat_rtn(ulong8 x)
{
  return __clc_convert_ulong8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtz(ulong16 x)
{
  return __clc_convert_ulong16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rte(ulong16 x)
{
  return __clc_convert_ulong16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtp(ulong16 x)
{
  return __clc_convert_ulong16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
ulong16 __clc_convert_ulong16_sat_rtn(ulong16 x)
{
  return __clc_convert_ulong16_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_rtz(half x)
{
  return __clc_convert_char(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_sat_rtz(half x)
{
  return __clc_convert_char_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_rte(half x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_sat_rte(half x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_rtp(half x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_sat_rtp(half x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_rtn(half x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_sat_rtn(half x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_rtz(half2 x)
{
  return __clc_convert_char2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_sat_rtz(half2 x)
{
  return __clc_convert_char2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_rte(half2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_sat_rte(half2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_rtp(half2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_sat_rtp(half2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_rtn(half2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_sat_rtn(half2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_rtz(half3 x)
{
  return __clc_convert_char3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_sat_rtz(half3 x)
{
  return __clc_convert_char3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_rte(half3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_sat_rte(half3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_rtp(half3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_sat_rtp(half3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_rtn(half3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_sat_rtn(half3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_rtz(half4 x)
{
  return __clc_convert_char4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_sat_rtz(half4 x)
{
  return __clc_convert_char4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_rte(half4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_sat_rte(half4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_rtp(half4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_sat_rtp(half4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_rtn(half4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_sat_rtn(half4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_rtz(half8 x)
{
  return __clc_convert_char8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_sat_rtz(half8 x)
{
  return __clc_convert_char8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_rte(half8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_sat_rte(half8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_rtp(half8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_sat_rtp(half8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_rtn(half8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_sat_rtn(half8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_rtz(half16 x)
{
  return __clc_convert_char16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_sat_rtz(half16 x)
{
  return __clc_convert_char16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_rte(half16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_sat_rte(half16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_rtp(half16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_sat_rtp(half16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_rtn(half16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_sat_rtn(half16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_rtz(half x)
{
  return __clc_convert_schar(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_sat_rtz(half x)
{
  return __clc_convert_schar_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_rte(half x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_sat_rte(half x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_rtp(half x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_sat_rtp(half x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_rtn(half x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_sat_rtn(half x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_rtz(half2 x)
{
  return __clc_convert_schar2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_sat_rtz(half2 x)
{
  return __clc_convert_schar2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_rte(half2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_sat_rte(half2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_rtp(half2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_sat_rtp(half2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_rtn(half2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_sat_rtn(half2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_rtz(half3 x)
{
  return __clc_convert_schar3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_sat_rtz(half3 x)
{
  return __clc_convert_schar3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_rte(half3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_sat_rte(half3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_rtp(half3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_sat_rtp(half3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_rtn(half3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_sat_rtn(half3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_rtz(half4 x)
{
  return __clc_convert_schar4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_sat_rtz(half4 x)
{
  return __clc_convert_schar4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_rte(half4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_sat_rte(half4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_rtp(half4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_sat_rtp(half4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_rtn(half4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_sat_rtn(half4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_rtz(half8 x)
{
  return __clc_convert_schar8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_sat_rtz(half8 x)
{
  return __clc_convert_schar8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_rte(half8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_sat_rte(half8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_rtp(half8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_sat_rtp(half8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_rtn(half8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_sat_rtn(half8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_rtz(half16 x)
{
  return __clc_convert_schar16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_sat_rtz(half16 x)
{
  return __clc_convert_schar16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_rte(half16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_sat_rte(half16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_rtp(half16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_sat_rtp(half16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_rtn(half16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_sat_rtn(half16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_rtz(half x)
{
  return __clc_convert_uchar(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_sat_rtz(half x)
{
  return __clc_convert_uchar_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_rte(half x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_sat_rte(half x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_rtp(half x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_sat_rtp(half x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_rtn(half x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_sat_rtn(half x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_rtz(half2 x)
{
  return __clc_convert_uchar2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_sat_rtz(half2 x)
{
  return __clc_convert_uchar2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_rte(half2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_sat_rte(half2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_rtp(half2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_sat_rtp(half2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_rtn(half2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_sat_rtn(half2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_rtz(half3 x)
{
  return __clc_convert_uchar3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_sat_rtz(half3 x)
{
  return __clc_convert_uchar3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_rte(half3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_sat_rte(half3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_rtp(half3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_sat_rtp(half3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_rtn(half3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_sat_rtn(half3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_rtz(half4 x)
{
  return __clc_convert_uchar4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_sat_rtz(half4 x)
{
  return __clc_convert_uchar4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_rte(half4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_sat_rte(half4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_rtp(half4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_sat_rtp(half4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_rtn(half4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_sat_rtn(half4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_rtz(half8 x)
{
  return __clc_convert_uchar8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_sat_rtz(half8 x)
{
  return __clc_convert_uchar8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_rte(half8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_sat_rte(half8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_rtp(half8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_sat_rtp(half8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_rtn(half8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_sat_rtn(half8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_rtz(half16 x)
{
  return __clc_convert_uchar16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_sat_rtz(half16 x)
{
  return __clc_convert_uchar16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_rte(half16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_sat_rte(half16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_rtp(half16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_sat_rtp(half16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_rtn(half16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_sat_rtn(half16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_rtz(half x)
{
  return __clc_convert_short(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_sat_rtz(half x)
{
  return __clc_convert_short_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_rte(half x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_sat_rte(half x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_rtp(half x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_sat_rtp(half x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_rtn(half x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_sat_rtn(half x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_rtz(half2 x)
{
  return __clc_convert_short2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_sat_rtz(half2 x)
{
  return __clc_convert_short2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_rte(half2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_sat_rte(half2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_rtp(half2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_sat_rtp(half2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_rtn(half2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_sat_rtn(half2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_rtz(half3 x)
{
  return __clc_convert_short3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_sat_rtz(half3 x)
{
  return __clc_convert_short3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_rte(half3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_sat_rte(half3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_rtp(half3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_sat_rtp(half3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_rtn(half3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_sat_rtn(half3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_rtz(half4 x)
{
  return __clc_convert_short4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_sat_rtz(half4 x)
{
  return __clc_convert_short4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_rte(half4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_sat_rte(half4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_rtp(half4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_sat_rtp(half4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_rtn(half4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_sat_rtn(half4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_rtz(half8 x)
{
  return __clc_convert_short8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_sat_rtz(half8 x)
{
  return __clc_convert_short8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_rte(half8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_sat_rte(half8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_rtp(half8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_sat_rtp(half8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_rtn(half8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_sat_rtn(half8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_rtz(half16 x)
{
  return __clc_convert_short16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_sat_rtz(half16 x)
{
  return __clc_convert_short16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_rte(half16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_sat_rte(half16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_rtp(half16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_sat_rtp(half16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_rtn(half16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_sat_rtn(half16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_rtz(half x)
{
  return __clc_convert_ushort(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_sat_rtz(half x)
{
  return __clc_convert_ushort_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_rte(half x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_sat_rte(half x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_rtp(half x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_sat_rtp(half x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_rtn(half x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_sat_rtn(half x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_rtz(half2 x)
{
  return __clc_convert_ushort2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_sat_rtz(half2 x)
{
  return __clc_convert_ushort2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_rte(half2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_sat_rte(half2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_rtp(half2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_sat_rtp(half2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_rtn(half2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_sat_rtn(half2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_rtz(half3 x)
{
  return __clc_convert_ushort3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_sat_rtz(half3 x)
{
  return __clc_convert_ushort3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_rte(half3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_sat_rte(half3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_rtp(half3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_sat_rtp(half3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_rtn(half3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_sat_rtn(half3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_rtz(half4 x)
{
  return __clc_convert_ushort4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_sat_rtz(half4 x)
{
  return __clc_convert_ushort4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_rte(half4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_sat_rte(half4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_rtp(half4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_sat_rtp(half4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_rtn(half4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_sat_rtn(half4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_rtz(half8 x)
{
  return __clc_convert_ushort8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_sat_rtz(half8 x)
{
  return __clc_convert_ushort8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_rte(half8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_sat_rte(half8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_rtp(half8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_sat_rtp(half8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_rtn(half8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_sat_rtn(half8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_rtz(half16 x)
{
  return __clc_convert_ushort16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_sat_rtz(half16 x)
{
  return __clc_convert_ushort16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_rte(half16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_sat_rte(half16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_rtp(half16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_sat_rtp(half16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_rtn(half16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_sat_rtn(half16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_rtz(half x)
{
  return __clc_convert_int(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_sat_rtz(half x)
{
  return __clc_convert_int_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_rte(half x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_sat_rte(half x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_rtp(half x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_sat_rtp(half x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_rtn(half x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_sat_rtn(half x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_rtz(half2 x)
{
  return __clc_convert_int2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_sat_rtz(half2 x)
{
  return __clc_convert_int2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_rte(half2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_sat_rte(half2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_rtp(half2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_sat_rtp(half2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_rtn(half2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_sat_rtn(half2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_rtz(half3 x)
{
  return __clc_convert_int3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_sat_rtz(half3 x)
{
  return __clc_convert_int3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_rte(half3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_sat_rte(half3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_rtp(half3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_sat_rtp(half3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_rtn(half3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_sat_rtn(half3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_rtz(half4 x)
{
  return __clc_convert_int4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_sat_rtz(half4 x)
{
  return __clc_convert_int4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_rte(half4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_sat_rte(half4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_rtp(half4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_sat_rtp(half4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_rtn(half4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_sat_rtn(half4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_rtz(half8 x)
{
  return __clc_convert_int8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_sat_rtz(half8 x)
{
  return __clc_convert_int8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_rte(half8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_sat_rte(half8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_rtp(half8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_sat_rtp(half8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_rtn(half8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_sat_rtn(half8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_rtz(half16 x)
{
  return __clc_convert_int16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_sat_rtz(half16 x)
{
  return __clc_convert_int16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_rte(half16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_sat_rte(half16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_rtp(half16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_sat_rtp(half16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_rtn(half16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_sat_rtn(half16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_rtz(half x)
{
  return __clc_convert_uint(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_sat_rtz(half x)
{
  return __clc_convert_uint_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_rte(half x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_sat_rte(half x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_rtp(half x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_sat_rtp(half x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_rtn(half x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_sat_rtn(half x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_rtz(half2 x)
{
  return __clc_convert_uint2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_sat_rtz(half2 x)
{
  return __clc_convert_uint2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_rte(half2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_sat_rte(half2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_rtp(half2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_sat_rtp(half2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_rtn(half2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_sat_rtn(half2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint2_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_rtz(half3 x)
{
  return __clc_convert_uint3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_sat_rtz(half3 x)
{
  return __clc_convert_uint3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_rte(half3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_sat_rte(half3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_rtp(half3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_sat_rtp(half3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_rtn(half3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_sat_rtn(half3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint3_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_rtz(half4 x)
{
  return __clc_convert_uint4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_sat_rtz(half4 x)
{
  return __clc_convert_uint4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_rte(half4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_sat_rte(half4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_rtp(half4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_sat_rtp(half4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_rtn(half4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_sat_rtn(half4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint4_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_rtz(half8 x)
{
  return __clc_convert_uint8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_sat_rtz(half8 x)
{
  return __clc_convert_uint8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_rte(half8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_sat_rte(half8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_rtp(half8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_sat_rtp(half8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_rtn(half8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_sat_rtn(half8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint8_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_rtz(half16 x)
{
  return __clc_convert_uint16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_sat_rtz(half16 x)
{
  return __clc_convert_uint16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_rte(half16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_sat_rte(half16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_rtp(half16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_sat_rtp(half16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_rtn(half16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_sat_rtn(half16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint16_sat(x);
}
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_rtz(half x)
{
  return __clc_convert_long(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_sat_rtz(half x)
{
  return __clc_convert_long_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_rte(half x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_sat_rte(half x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_rtp(half x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_sat_rtp(half x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_rtn(half x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_sat_rtn(half x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_rtz(half2 x)
{
  return __clc_convert_long2(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_sat_rtz(half2 x)
{
  return __clc_convert_long2_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_rte(half2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long2(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_sat_rte(half2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long2_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_rtp(half2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long2(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_sat_rtp(half2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long2_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_rtn(half2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long2(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_sat_rtn(half2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long2_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_rtz(half3 x)
{
  return __clc_convert_long3(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_sat_rtz(half3 x)
{
  return __clc_convert_long3_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_rte(half3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long3(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_sat_rte(half3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long3_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_rtp(half3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long3(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_sat_rtp(half3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long3_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_rtn(half3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long3(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_sat_rtn(half3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long3_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_rtz(half4 x)
{
  return __clc_convert_long4(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_sat_rtz(half4 x)
{
  return __clc_convert_long4_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_rte(half4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long4(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_sat_rte(half4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long4_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_rtp(half4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long4(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_sat_rtp(half4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long4_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_rtn(half4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long4(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_sat_rtn(half4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long4_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_rtz(half8 x)
{
  return __clc_convert_long8(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_sat_rtz(half8 x)
{
  return __clc_convert_long8_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_rte(half8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long8(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_sat_rte(half8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long8_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_rtp(half8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long8(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_sat_rtp(half8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long8_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_rtn(half8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long8(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_sat_rtn(half8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long8_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_rtz(half16 x)
{
  return __clc_convert_long16(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_sat_rtz(half16 x)
{
  return __clc_convert_long16_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_rte(half16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long16(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_sat_rte(half16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long16_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_rtp(half16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long16(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_sat_rtp(half16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long16_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_rtn(half16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long16(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_sat_rtn(half16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long16_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_rtz(half x)
{
  return __clc_convert_ulong(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_sat_rtz(half x)
{
  return __clc_convert_ulong_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_rte(half x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_sat_rte(half x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_rtp(half x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_sat_rtp(half x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_rtn(half x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_sat_rtn(half x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_rtz(half2 x)
{
  return __clc_convert_ulong2(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_sat_rtz(half2 x)
{
  return __clc_convert_ulong2_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_rte(half2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong2(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_sat_rte(half2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong2_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_rtp(half2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong2(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_sat_rtp(half2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong2_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_rtn(half2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong2(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_sat_rtn(half2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong2_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_rtz(half3 x)
{
  return __clc_convert_ulong3(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_sat_rtz(half3 x)
{
  return __clc_convert_ulong3_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_rte(half3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong3(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_sat_rte(half3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong3_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_rtp(half3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong3(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_sat_rtp(half3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong3_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_rtn(half3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong3(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_sat_rtn(half3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong3_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_rtz(half4 x)
{
  return __clc_convert_ulong4(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_sat_rtz(half4 x)
{
  return __clc_convert_ulong4_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_rte(half4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong4(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_sat_rte(half4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong4_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_rtp(half4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong4(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_sat_rtp(half4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong4_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_rtn(half4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong4(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_sat_rtn(half4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong4_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_rtz(half8 x)
{
  return __clc_convert_ulong8(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_sat_rtz(half8 x)
{
  return __clc_convert_ulong8_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_rte(half8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong8(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_sat_rte(half8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong8_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_rtp(half8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong8(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_sat_rtp(half8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong8_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_rtn(half8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong8(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_sat_rtn(half8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong8_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_rtz(half16 x)
{
  return __clc_convert_ulong16(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_sat_rtz(half16 x)
{
  return __clc_convert_ulong16_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_rte(half16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong16(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_sat_rte(half16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong16_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_rtp(half16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong16(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_sat_rtp(half16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong16_sat(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_rtn(half16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong16(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_sat_rtn(half16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong16_sat(x);
}
#endif
#endif
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_rtz(float x)
{
  return __clc_convert_char(x);
}
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_sat_rtz(float x)
{
  return __clc_convert_char_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_rte(float x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char(x);
}
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_sat_rte(float x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_rtp(float x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char(x);
}
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_sat_rtp(float x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_rtn(float x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char(x);
}
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_sat_rtn(float x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_rtz(float2 x)
{
  return __clc_convert_char2(x);
}
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_sat_rtz(float2 x)
{
  return __clc_convert_char2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_rte(float2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char2(x);
}
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_sat_rte(float2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_rtp(float2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char2(x);
}
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_sat_rtp(float2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_rtn(float2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char2(x);
}
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_sat_rtn(float2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_rtz(float3 x)
{
  return __clc_convert_char3(x);
}
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_sat_rtz(float3 x)
{
  return __clc_convert_char3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_rte(float3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char3(x);
}
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_sat_rte(float3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_rtp(float3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char3(x);
}
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_sat_rtp(float3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_rtn(float3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char3(x);
}
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_sat_rtn(float3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_rtz(float4 x)
{
  return __clc_convert_char4(x);
}
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_sat_rtz(float4 x)
{
  return __clc_convert_char4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_rte(float4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char4(x);
}
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_sat_rte(float4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_rtp(float4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char4(x);
}
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_sat_rtp(float4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_rtn(float4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char4(x);
}
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_sat_rtn(float4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_rtz(float8 x)
{
  return __clc_convert_char8(x);
}
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_sat_rtz(float8 x)
{
  return __clc_convert_char8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_rte(float8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char8(x);
}
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_sat_rte(float8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_rtp(float8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char8(x);
}
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_sat_rtp(float8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_rtn(float8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char8(x);
}
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_sat_rtn(float8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_rtz(float16 x)
{
  return __clc_convert_char16(x);
}
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_sat_rtz(float16 x)
{
  return __clc_convert_char16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_rte(float16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char16(x);
}
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_sat_rte(float16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_rtp(float16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char16(x);
}
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_sat_rtp(float16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_rtn(float16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char16(x);
}
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_sat_rtn(float16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_rtz(float x)
{
  return __clc_convert_schar(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_sat_rtz(float x)
{
  return __clc_convert_schar_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_rte(float x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_sat_rte(float x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_rtp(float x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_sat_rtp(float x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_rtn(float x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_sat_rtn(float x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_rtz(float2 x)
{
  return __clc_convert_schar2(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_sat_rtz(float2 x)
{
  return __clc_convert_schar2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_rte(float2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar2(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_sat_rte(float2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_rtp(float2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar2(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_sat_rtp(float2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_rtn(float2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar2(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_sat_rtn(float2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_rtz(float3 x)
{
  return __clc_convert_schar3(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_sat_rtz(float3 x)
{
  return __clc_convert_schar3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_rte(float3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar3(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_sat_rte(float3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_rtp(float3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar3(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_sat_rtp(float3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_rtn(float3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar3(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_sat_rtn(float3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_rtz(float4 x)
{
  return __clc_convert_schar4(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_sat_rtz(float4 x)
{
  return __clc_convert_schar4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_rte(float4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar4(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_sat_rte(float4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_rtp(float4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar4(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_sat_rtp(float4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_rtn(float4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar4(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_sat_rtn(float4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_rtz(float8 x)
{
  return __clc_convert_schar8(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_sat_rtz(float8 x)
{
  return __clc_convert_schar8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_rte(float8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar8(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_sat_rte(float8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_rtp(float8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar8(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_sat_rtp(float8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_rtn(float8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar8(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_sat_rtn(float8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_rtz(float16 x)
{
  return __clc_convert_schar16(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_sat_rtz(float16 x)
{
  return __clc_convert_schar16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_rte(float16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar16(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_sat_rte(float16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_rtp(float16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar16(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_sat_rtp(float16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_rtn(float16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar16(x);
}
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_sat_rtn(float16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_rtz(float x)
{
  return __clc_convert_uchar(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_sat_rtz(float x)
{
  return __clc_convert_uchar_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_rte(float x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_sat_rte(float x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_rtp(float x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_sat_rtp(float x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_rtn(float x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_sat_rtn(float x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_rtz(float2 x)
{
  return __clc_convert_uchar2(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_sat_rtz(float2 x)
{
  return __clc_convert_uchar2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_rte(float2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar2(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_sat_rte(float2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_rtp(float2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar2(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_sat_rtp(float2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_rtn(float2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar2(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_sat_rtn(float2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_rtz(float3 x)
{
  return __clc_convert_uchar3(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_sat_rtz(float3 x)
{
  return __clc_convert_uchar3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_rte(float3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar3(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_sat_rte(float3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_rtp(float3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar3(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_sat_rtp(float3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_rtn(float3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar3(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_sat_rtn(float3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_rtz(float4 x)
{
  return __clc_convert_uchar4(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_sat_rtz(float4 x)
{
  return __clc_convert_uchar4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_rte(float4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar4(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_sat_rte(float4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_rtp(float4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar4(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_sat_rtp(float4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_rtn(float4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar4(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_sat_rtn(float4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_rtz(float8 x)
{
  return __clc_convert_uchar8(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_sat_rtz(float8 x)
{
  return __clc_convert_uchar8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_rte(float8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar8(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_sat_rte(float8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_rtp(float8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar8(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_sat_rtp(float8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_rtn(float8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar8(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_sat_rtn(float8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_rtz(float16 x)
{
  return __clc_convert_uchar16(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_sat_rtz(float16 x)
{
  return __clc_convert_uchar16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_rte(float16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar16(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_sat_rte(float16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_rtp(float16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar16(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_sat_rtp(float16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_rtn(float16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar16(x);
}
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_sat_rtn(float16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_rtz(float x)
{
  return __clc_convert_short(x);
}
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_sat_rtz(float x)
{
  return __clc_convert_short_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_rte(float x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short(x);
}
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_sat_rte(float x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_rtp(float x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short(x);
}
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_sat_rtp(float x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_rtn(float x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short(x);
}
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_sat_rtn(float x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_rtz(float2 x)
{
  return __clc_convert_short2(x);
}
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_sat_rtz(float2 x)
{
  return __clc_convert_short2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_rte(float2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short2(x);
}
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_sat_rte(float2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_rtp(float2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short2(x);
}
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_sat_rtp(float2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_rtn(float2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short2(x);
}
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_sat_rtn(float2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_rtz(float3 x)
{
  return __clc_convert_short3(x);
}
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_sat_rtz(float3 x)
{
  return __clc_convert_short3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_rte(float3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short3(x);
}
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_sat_rte(float3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_rtp(float3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short3(x);
}
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_sat_rtp(float3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_rtn(float3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short3(x);
}
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_sat_rtn(float3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_rtz(float4 x)
{
  return __clc_convert_short4(x);
}
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_sat_rtz(float4 x)
{
  return __clc_convert_short4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_rte(float4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short4(x);
}
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_sat_rte(float4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_rtp(float4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short4(x);
}
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_sat_rtp(float4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_rtn(float4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short4(x);
}
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_sat_rtn(float4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_rtz(float8 x)
{
  return __clc_convert_short8(x);
}
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_sat_rtz(float8 x)
{
  return __clc_convert_short8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_rte(float8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short8(x);
}
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_sat_rte(float8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_rtp(float8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short8(x);
}
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_sat_rtp(float8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_rtn(float8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short8(x);
}
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_sat_rtn(float8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_rtz(float16 x)
{
  return __clc_convert_short16(x);
}
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_sat_rtz(float16 x)
{
  return __clc_convert_short16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_rte(float16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short16(x);
}
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_sat_rte(float16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_rtp(float16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short16(x);
}
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_sat_rtp(float16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_rtn(float16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short16(x);
}
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_sat_rtn(float16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_rtz(float x)
{
  return __clc_convert_ushort(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_sat_rtz(float x)
{
  return __clc_convert_ushort_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_rte(float x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_sat_rte(float x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_rtp(float x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_sat_rtp(float x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_rtn(float x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_sat_rtn(float x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_rtz(float2 x)
{
  return __clc_convert_ushort2(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_sat_rtz(float2 x)
{
  return __clc_convert_ushort2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_rte(float2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort2(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_sat_rte(float2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_rtp(float2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort2(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_sat_rtp(float2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_rtn(float2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort2(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_sat_rtn(float2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_rtz(float3 x)
{
  return __clc_convert_ushort3(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_sat_rtz(float3 x)
{
  return __clc_convert_ushort3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_rte(float3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort3(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_sat_rte(float3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_rtp(float3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort3(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_sat_rtp(float3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_rtn(float3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort3(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_sat_rtn(float3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_rtz(float4 x)
{
  return __clc_convert_ushort4(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_sat_rtz(float4 x)
{
  return __clc_convert_ushort4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_rte(float4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort4(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_sat_rte(float4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_rtp(float4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort4(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_sat_rtp(float4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_rtn(float4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort4(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_sat_rtn(float4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_rtz(float8 x)
{
  return __clc_convert_ushort8(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_sat_rtz(float8 x)
{
  return __clc_convert_ushort8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_rte(float8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort8(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_sat_rte(float8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_rtp(float8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort8(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_sat_rtp(float8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_rtn(float8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort8(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_sat_rtn(float8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_rtz(float16 x)
{
  return __clc_convert_ushort16(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_sat_rtz(float16 x)
{
  return __clc_convert_ushort16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_rte(float16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort16(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_sat_rte(float16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_rtp(float16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort16(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_sat_rtp(float16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_rtn(float16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort16(x);
}
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_sat_rtn(float16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_rtz(float x)
{
  return __clc_convert_int(x);
}
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_sat_rtz(float x)
{
  return __clc_convert_int_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_rte(float x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int(x);
}
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_sat_rte(float x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_rtp(float x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int(x);
}
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_sat_rtp(float x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_rtn(float x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int(x);
}
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_sat_rtn(float x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_rtz(float2 x)
{
  return __clc_convert_int2(x);
}
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_sat_rtz(float2 x)
{
  return __clc_convert_int2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_rte(float2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int2(x);
}
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_sat_rte(float2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_rtp(float2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int2(x);
}
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_sat_rtp(float2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_rtn(float2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int2(x);
}
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_sat_rtn(float2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_rtz(float3 x)
{
  return __clc_convert_int3(x);
}
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_sat_rtz(float3 x)
{
  return __clc_convert_int3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_rte(float3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int3(x);
}
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_sat_rte(float3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_rtp(float3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int3(x);
}
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_sat_rtp(float3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_rtn(float3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int3(x);
}
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_sat_rtn(float3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_rtz(float4 x)
{
  return __clc_convert_int4(x);
}
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_sat_rtz(float4 x)
{
  return __clc_convert_int4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_rte(float4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int4(x);
}
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_sat_rte(float4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_rtp(float4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int4(x);
}
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_sat_rtp(float4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_rtn(float4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int4(x);
}
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_sat_rtn(float4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_rtz(float8 x)
{
  return __clc_convert_int8(x);
}
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_sat_rtz(float8 x)
{
  return __clc_convert_int8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_rte(float8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int8(x);
}
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_sat_rte(float8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_rtp(float8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int8(x);
}
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_sat_rtp(float8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_rtn(float8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int8(x);
}
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_sat_rtn(float8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_rtz(float16 x)
{
  return __clc_convert_int16(x);
}
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_sat_rtz(float16 x)
{
  return __clc_convert_int16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_rte(float16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int16(x);
}
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_sat_rte(float16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_rtp(float16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int16(x);
}
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_sat_rtp(float16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_rtn(float16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int16(x);
}
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_sat_rtn(float16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_rtz(float x)
{
  return __clc_convert_uint(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_sat_rtz(float x)
{
  return __clc_convert_uint_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_rte(float x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_sat_rte(float x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_rtp(float x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_sat_rtp(float x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_rtn(float x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_sat_rtn(float x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_rtz(float2 x)
{
  return __clc_convert_uint2(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_sat_rtz(float2 x)
{
  return __clc_convert_uint2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_rte(float2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint2(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_sat_rte(float2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_rtp(float2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint2(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_sat_rtp(float2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_rtn(float2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint2(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_sat_rtn(float2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint2_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_rtz(float3 x)
{
  return __clc_convert_uint3(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_sat_rtz(float3 x)
{
  return __clc_convert_uint3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_rte(float3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint3(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_sat_rte(float3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_rtp(float3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint3(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_sat_rtp(float3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_rtn(float3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint3(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_sat_rtn(float3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint3_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_rtz(float4 x)
{
  return __clc_convert_uint4(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_sat_rtz(float4 x)
{
  return __clc_convert_uint4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_rte(float4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint4(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_sat_rte(float4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_rtp(float4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint4(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_sat_rtp(float4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_rtn(float4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint4(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_sat_rtn(float4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint4_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_rtz(float8 x)
{
  return __clc_convert_uint8(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_sat_rtz(float8 x)
{
  return __clc_convert_uint8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_rte(float8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint8(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_sat_rte(float8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_rtp(float8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint8(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_sat_rtp(float8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_rtn(float8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint8(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_sat_rtn(float8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint8_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_rtz(float16 x)
{
  return __clc_convert_uint16(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_sat_rtz(float16 x)
{
  return __clc_convert_uint16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_rte(float16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint16(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_sat_rte(float16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_rtp(float16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint16(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_sat_rtp(float16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint16_sat(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_rtn(float16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint16(x);
}
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_sat_rtn(float16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint16_sat(x);
}
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_rtz(float x)
{
  return __clc_convert_long(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_sat_rtz(float x)
{
  return __clc_convert_long_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_rte(float x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_sat_rte(float x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_rtp(float x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_sat_rtp(float x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_rtn(float x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_sat_rtn(float x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_rtz(float2 x)
{
  return __clc_convert_long2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_sat_rtz(float2 x)
{
  return __clc_convert_long2_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_rte(float2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_sat_rte(float2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long2_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_rtp(float2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_sat_rtp(float2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long2_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_rtn(float2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_sat_rtn(float2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long2_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_rtz(float3 x)
{
  return __clc_convert_long3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_sat_rtz(float3 x)
{
  return __clc_convert_long3_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_rte(float3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_sat_rte(float3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long3_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_rtp(float3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_sat_rtp(float3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long3_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_rtn(float3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_sat_rtn(float3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long3_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_rtz(float4 x)
{
  return __clc_convert_long4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_sat_rtz(float4 x)
{
  return __clc_convert_long4_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_rte(float4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_sat_rte(float4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long4_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_rtp(float4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_sat_rtp(float4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long4_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_rtn(float4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_sat_rtn(float4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long4_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_rtz(float8 x)
{
  return __clc_convert_long8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_sat_rtz(float8 x)
{
  return __clc_convert_long8_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_rte(float8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_sat_rte(float8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long8_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_rtp(float8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_sat_rtp(float8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long8_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_rtn(float8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_sat_rtn(float8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long8_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_rtz(float16 x)
{
  return __clc_convert_long16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_sat_rtz(float16 x)
{
  return __clc_convert_long16_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_rte(float16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_sat_rte(float16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long16_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_rtp(float16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_sat_rtp(float16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long16_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_rtn(float16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_sat_rtn(float16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long16_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_rtz(float x)
{
  return __clc_convert_ulong(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_sat_rtz(float x)
{
  return __clc_convert_ulong_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_rte(float x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_sat_rte(float x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_rtp(float x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_sat_rtp(float x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_rtn(float x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_sat_rtn(float x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_rtz(float2 x)
{
  return __clc_convert_ulong2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_sat_rtz(float2 x)
{
  return __clc_convert_ulong2_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_rte(float2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_sat_rte(float2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong2_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_rtp(float2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_sat_rtp(float2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong2_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_rtn(float2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_sat_rtn(float2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong2_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_rtz(float3 x)
{
  return __clc_convert_ulong3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_sat_rtz(float3 x)
{
  return __clc_convert_ulong3_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_rte(float3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_sat_rte(float3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong3_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_rtp(float3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_sat_rtp(float3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong3_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_rtn(float3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_sat_rtn(float3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong3_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_rtz(float4 x)
{
  return __clc_convert_ulong4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_sat_rtz(float4 x)
{
  return __clc_convert_ulong4_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_rte(float4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_sat_rte(float4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong4_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_rtp(float4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_sat_rtp(float4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong4_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_rtn(float4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_sat_rtn(float4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong4_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_rtz(float8 x)
{
  return __clc_convert_ulong8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_sat_rtz(float8 x)
{
  return __clc_convert_ulong8_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_rte(float8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_sat_rte(float8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong8_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_rtp(float8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_sat_rtp(float8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong8_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_rtn(float8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_sat_rtn(float8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong8_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_rtz(float16 x)
{
  return __clc_convert_ulong16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_sat_rtz(float16 x)
{
  return __clc_convert_ulong16_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_rte(float16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_sat_rte(float16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong16_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_rtp(float16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_sat_rtp(float16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong16_sat(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_rtn(float16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_sat_rtn(float16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_rtz(double x)
{
  return __clc_convert_char(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_sat_rtz(double x)
{
  return __clc_convert_char_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_rte(double x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_sat_rte(double x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_rtp(double x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_sat_rtp(double x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_rtn(double x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char __clc_convert_char_sat_rtn(double x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_rtz(double2 x)
{
  return __clc_convert_char2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_sat_rtz(double2 x)
{
  return __clc_convert_char2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_rte(double2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_sat_rte(double2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_rtp(double2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_sat_rtp(double2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_rtn(double2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char2 __clc_convert_char2_sat_rtn(double2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_rtz(double3 x)
{
  return __clc_convert_char3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_sat_rtz(double3 x)
{
  return __clc_convert_char3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_rte(double3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_sat_rte(double3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_rtp(double3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_sat_rtp(double3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_rtn(double3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char3 __clc_convert_char3_sat_rtn(double3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_rtz(double4 x)
{
  return __clc_convert_char4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_sat_rtz(double4 x)
{
  return __clc_convert_char4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_rte(double4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_sat_rte(double4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_rtp(double4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_sat_rtp(double4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_rtn(double4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char4 __clc_convert_char4_sat_rtn(double4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_rtz(double8 x)
{
  return __clc_convert_char8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_sat_rtz(double8 x)
{
  return __clc_convert_char8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_rte(double8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_sat_rte(double8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_rtp(double8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_sat_rtp(double8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_rtn(double8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char8 __clc_convert_char8_sat_rtn(double8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_rtz(double16 x)
{
  return __clc_convert_char16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_sat_rtz(double16 x)
{
  return __clc_convert_char16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_rte(double16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_sat_rte(double16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_char16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_rtp(double16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_sat_rtp(double16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_char16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_rtn(double16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  char16 __clc_convert_char16_sat_rtn(double16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_char16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_rtz(double x)
{
  return __clc_convert_schar(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_sat_rtz(double x)
{
  return __clc_convert_schar_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_rte(double x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_sat_rte(double x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_rtp(double x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_sat_rtp(double x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_rtn(double x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar __clc_convert_schar_sat_rtn(double x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_rtz(double2 x)
{
  return __clc_convert_schar2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_sat_rtz(double2 x)
{
  return __clc_convert_schar2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_rte(double2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_sat_rte(double2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_rtp(double2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_sat_rtp(double2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_rtn(double2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar2 __clc_convert_schar2_sat_rtn(double2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_rtz(double3 x)
{
  return __clc_convert_schar3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_sat_rtz(double3 x)
{
  return __clc_convert_schar3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_rte(double3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_sat_rte(double3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_rtp(double3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_sat_rtp(double3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_rtn(double3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar3 __clc_convert_schar3_sat_rtn(double3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_rtz(double4 x)
{
  return __clc_convert_schar4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_sat_rtz(double4 x)
{
  return __clc_convert_schar4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_rte(double4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_sat_rte(double4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_rtp(double4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_sat_rtp(double4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_rtn(double4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar4 __clc_convert_schar4_sat_rtn(double4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_rtz(double8 x)
{
  return __clc_convert_schar8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_sat_rtz(double8 x)
{
  return __clc_convert_schar8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_rte(double8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_sat_rte(double8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_rtp(double8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_sat_rtp(double8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_rtn(double8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar8 __clc_convert_schar8_sat_rtn(double8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_rtz(double16 x)
{
  return __clc_convert_schar16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_sat_rtz(double16 x)
{
  return __clc_convert_schar16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_rte(double16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_sat_rte(double16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_schar16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_rtp(double16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_sat_rtp(double16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_schar16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_rtn(double16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  schar16 __clc_convert_schar16_sat_rtn(double16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_schar16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_rtz(double x)
{
  return __clc_convert_uchar(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_sat_rtz(double x)
{
  return __clc_convert_uchar_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_rte(double x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_sat_rte(double x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_rtp(double x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_sat_rtp(double x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_rtn(double x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar __clc_convert_uchar_sat_rtn(double x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_rtz(double2 x)
{
  return __clc_convert_uchar2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_sat_rtz(double2 x)
{
  return __clc_convert_uchar2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_rte(double2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_sat_rte(double2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_rtp(double2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_sat_rtp(double2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_rtn(double2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar2 __clc_convert_uchar2_sat_rtn(double2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_rtz(double3 x)
{
  return __clc_convert_uchar3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_sat_rtz(double3 x)
{
  return __clc_convert_uchar3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_rte(double3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_sat_rte(double3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_rtp(double3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_sat_rtp(double3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_rtn(double3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar3 __clc_convert_uchar3_sat_rtn(double3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_rtz(double4 x)
{
  return __clc_convert_uchar4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_sat_rtz(double4 x)
{
  return __clc_convert_uchar4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_rte(double4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_sat_rte(double4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_rtp(double4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_sat_rtp(double4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_rtn(double4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar4 __clc_convert_uchar4_sat_rtn(double4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_rtz(double8 x)
{
  return __clc_convert_uchar8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_sat_rtz(double8 x)
{
  return __clc_convert_uchar8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_rte(double8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_sat_rte(double8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_rtp(double8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_sat_rtp(double8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_rtn(double8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar8 __clc_convert_uchar8_sat_rtn(double8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_rtz(double16 x)
{
  return __clc_convert_uchar16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_sat_rtz(double16 x)
{
  return __clc_convert_uchar16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_rte(double16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_sat_rte(double16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uchar16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_rtp(double16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_sat_rtp(double16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uchar16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_rtn(double16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uchar16 __clc_convert_uchar16_sat_rtn(double16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uchar16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_rtz(double x)
{
  return __clc_convert_short(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_sat_rtz(double x)
{
  return __clc_convert_short_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_rte(double x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_sat_rte(double x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_rtp(double x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_sat_rtp(double x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_rtn(double x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short __clc_convert_short_sat_rtn(double x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_rtz(double2 x)
{
  return __clc_convert_short2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_sat_rtz(double2 x)
{
  return __clc_convert_short2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_rte(double2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_sat_rte(double2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_rtp(double2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_sat_rtp(double2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_rtn(double2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short2 __clc_convert_short2_sat_rtn(double2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_rtz(double3 x)
{
  return __clc_convert_short3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_sat_rtz(double3 x)
{
  return __clc_convert_short3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_rte(double3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_sat_rte(double3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_rtp(double3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_sat_rtp(double3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_rtn(double3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short3 __clc_convert_short3_sat_rtn(double3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_rtz(double4 x)
{
  return __clc_convert_short4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_sat_rtz(double4 x)
{
  return __clc_convert_short4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_rte(double4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_sat_rte(double4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_rtp(double4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_sat_rtp(double4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_rtn(double4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short4 __clc_convert_short4_sat_rtn(double4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_rtz(double8 x)
{
  return __clc_convert_short8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_sat_rtz(double8 x)
{
  return __clc_convert_short8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_rte(double8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_sat_rte(double8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_rtp(double8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_sat_rtp(double8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_rtn(double8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short8 __clc_convert_short8_sat_rtn(double8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_rtz(double16 x)
{
  return __clc_convert_short16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_sat_rtz(double16 x)
{
  return __clc_convert_short16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_rte(double16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_sat_rte(double16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_short16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_rtp(double16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_sat_rtp(double16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_short16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_rtn(double16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  short16 __clc_convert_short16_sat_rtn(double16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_short16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_rtz(double x)
{
  return __clc_convert_ushort(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_sat_rtz(double x)
{
  return __clc_convert_ushort_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_rte(double x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_sat_rte(double x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_rtp(double x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_sat_rtp(double x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_rtn(double x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort __clc_convert_ushort_sat_rtn(double x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_rtz(double2 x)
{
  return __clc_convert_ushort2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_sat_rtz(double2 x)
{
  return __clc_convert_ushort2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_rte(double2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_sat_rte(double2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_rtp(double2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_sat_rtp(double2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_rtn(double2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort2 __clc_convert_ushort2_sat_rtn(double2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_rtz(double3 x)
{
  return __clc_convert_ushort3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_sat_rtz(double3 x)
{
  return __clc_convert_ushort3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_rte(double3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_sat_rte(double3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_rtp(double3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_sat_rtp(double3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_rtn(double3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort3 __clc_convert_ushort3_sat_rtn(double3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_rtz(double4 x)
{
  return __clc_convert_ushort4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_sat_rtz(double4 x)
{
  return __clc_convert_ushort4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_rte(double4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_sat_rte(double4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_rtp(double4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_sat_rtp(double4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_rtn(double4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort4 __clc_convert_ushort4_sat_rtn(double4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_rtz(double8 x)
{
  return __clc_convert_ushort8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_sat_rtz(double8 x)
{
  return __clc_convert_ushort8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_rte(double8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_sat_rte(double8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_rtp(double8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_sat_rtp(double8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_rtn(double8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort8 __clc_convert_ushort8_sat_rtn(double8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_rtz(double16 x)
{
  return __clc_convert_ushort16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_sat_rtz(double16 x)
{
  return __clc_convert_ushort16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_rte(double16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_sat_rte(double16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ushort16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_rtp(double16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_sat_rtp(double16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ushort16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_rtn(double16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ushort16 __clc_convert_ushort16_sat_rtn(double16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ushort16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_rtz(double x)
{
  return __clc_convert_int(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_sat_rtz(double x)
{
  return __clc_convert_int_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_rte(double x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_sat_rte(double x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_rtp(double x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_sat_rtp(double x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_rtn(double x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int __clc_convert_int_sat_rtn(double x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_rtz(double2 x)
{
  return __clc_convert_int2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_sat_rtz(double2 x)
{
  return __clc_convert_int2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_rte(double2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_sat_rte(double2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_rtp(double2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_sat_rtp(double2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_rtn(double2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int2 __clc_convert_int2_sat_rtn(double2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_rtz(double3 x)
{
  return __clc_convert_int3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_sat_rtz(double3 x)
{
  return __clc_convert_int3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_rte(double3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_sat_rte(double3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_rtp(double3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_sat_rtp(double3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_rtn(double3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int3 __clc_convert_int3_sat_rtn(double3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_rtz(double4 x)
{
  return __clc_convert_int4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_sat_rtz(double4 x)
{
  return __clc_convert_int4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_rte(double4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_sat_rte(double4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_rtp(double4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_sat_rtp(double4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_rtn(double4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int4 __clc_convert_int4_sat_rtn(double4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_rtz(double8 x)
{
  return __clc_convert_int8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_sat_rtz(double8 x)
{
  return __clc_convert_int8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_rte(double8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_sat_rte(double8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_rtp(double8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_sat_rtp(double8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_rtn(double8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int8 __clc_convert_int8_sat_rtn(double8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_rtz(double16 x)
{
  return __clc_convert_int16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_sat_rtz(double16 x)
{
  return __clc_convert_int16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_rte(double16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_sat_rte(double16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_int16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_rtp(double16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_sat_rtp(double16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_int16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_rtn(double16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  int16 __clc_convert_int16_sat_rtn(double16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_int16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_rtz(double x)
{
  return __clc_convert_uint(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_sat_rtz(double x)
{
  return __clc_convert_uint_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_rte(double x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_sat_rte(double x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_rtp(double x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_sat_rtp(double x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_rtn(double x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint __clc_convert_uint_sat_rtn(double x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_rtz(double2 x)
{
  return __clc_convert_uint2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_sat_rtz(double2 x)
{
  return __clc_convert_uint2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_rte(double2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_sat_rte(double2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_rtp(double2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_sat_rtp(double2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_rtn(double2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint2 __clc_convert_uint2_sat_rtn(double2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_rtz(double3 x)
{
  return __clc_convert_uint3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_sat_rtz(double3 x)
{
  return __clc_convert_uint3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_rte(double3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_sat_rte(double3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_rtp(double3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_sat_rtp(double3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_rtn(double3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint3 __clc_convert_uint3_sat_rtn(double3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_rtz(double4 x)
{
  return __clc_convert_uint4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_sat_rtz(double4 x)
{
  return __clc_convert_uint4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_rte(double4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_sat_rte(double4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_rtp(double4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_sat_rtp(double4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_rtn(double4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint4 __clc_convert_uint4_sat_rtn(double4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_rtz(double8 x)
{
  return __clc_convert_uint8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_sat_rtz(double8 x)
{
  return __clc_convert_uint8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_rte(double8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_sat_rte(double8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_rtp(double8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_sat_rtp(double8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_rtn(double8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint8 __clc_convert_uint8_sat_rtn(double8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_rtz(double16 x)
{
  return __clc_convert_uint16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_sat_rtz(double16 x)
{
  return __clc_convert_uint16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_rte(double16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_sat_rte(double16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_uint16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_rtp(double16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_sat_rtp(double16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_uint16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_rtn(double16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  uint16 __clc_convert_uint16_sat_rtn(double16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_uint16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_rtz(double x)
{
  return __clc_convert_long(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_sat_rtz(double x)
{
  return __clc_convert_long_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_rte(double x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_sat_rte(double x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_rtp(double x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_sat_rtp(double x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_rtn(double x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long __clc_convert_long_sat_rtn(double x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_rtz(double2 x)
{
  return __clc_convert_long2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_sat_rtz(double2 x)
{
  return __clc_convert_long2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_rte(double2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_sat_rte(double2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_rtp(double2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_sat_rtp(double2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_rtn(double2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long2 __clc_convert_long2_sat_rtn(double2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_rtz(double3 x)
{
  return __clc_convert_long3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_sat_rtz(double3 x)
{
  return __clc_convert_long3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_rte(double3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_sat_rte(double3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_rtp(double3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_sat_rtp(double3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_rtn(double3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long3 __clc_convert_long3_sat_rtn(double3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_rtz(double4 x)
{
  return __clc_convert_long4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_sat_rtz(double4 x)
{
  return __clc_convert_long4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_rte(double4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_sat_rte(double4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_rtp(double4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_sat_rtp(double4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_rtn(double4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long4 __clc_convert_long4_sat_rtn(double4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_rtz(double8 x)
{
  return __clc_convert_long8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_sat_rtz(double8 x)
{
  return __clc_convert_long8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_rte(double8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_sat_rte(double8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_rtp(double8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_sat_rtp(double8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_rtn(double8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long8 __clc_convert_long8_sat_rtn(double8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_rtz(double16 x)
{
  return __clc_convert_long16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_sat_rtz(double16 x)
{
  return __clc_convert_long16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_rte(double16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_sat_rte(double16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_long16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_rtp(double16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_sat_rtp(double16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_long16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_rtn(double16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  long16 __clc_convert_long16_sat_rtn(double16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_long16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_rtz(double x)
{
  return __clc_convert_ulong(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_sat_rtz(double x)
{
  return __clc_convert_ulong_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_rte(double x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_sat_rte(double x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_rtp(double x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_sat_rtp(double x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_rtn(double x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong __clc_convert_ulong_sat_rtn(double x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_rtz(double2 x)
{
  return __clc_convert_ulong2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_sat_rtz(double2 x)
{
  return __clc_convert_ulong2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_rte(double2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_sat_rte(double2 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_rtp(double2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_sat_rtp(double2 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_rtn(double2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong2 __clc_convert_ulong2_sat_rtn(double2 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong2_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_rtz(double3 x)
{
  return __clc_convert_ulong3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_sat_rtz(double3 x)
{
  return __clc_convert_ulong3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_rte(double3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_sat_rte(double3 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_rtp(double3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_sat_rtp(double3 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_rtn(double3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong3 __clc_convert_ulong3_sat_rtn(double3 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong3_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_rtz(double4 x)
{
  return __clc_convert_ulong4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_sat_rtz(double4 x)
{
  return __clc_convert_ulong4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_rte(double4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_sat_rte(double4 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_rtp(double4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_sat_rtp(double4 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_rtn(double4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong4 __clc_convert_ulong4_sat_rtn(double4 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong4_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_rtz(double8 x)
{
  return __clc_convert_ulong8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_sat_rtz(double8 x)
{
  return __clc_convert_ulong8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_rte(double8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_sat_rte(double8 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_rtp(double8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_sat_rtp(double8 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_rtn(double8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong8 __clc_convert_ulong8_sat_rtn(double8 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong8_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_rtz(double16 x)
{
  return __clc_convert_ulong16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_sat_rtz(double16 x)
{
  return __clc_convert_ulong16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_rte(double16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_sat_rte(double16 x)
{
  x = __spirv_ocl_rint(x);
  return __clc_convert_ulong16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_rtp(double16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_sat_rtp(double16 x)
{
  x = __spirv_ocl_ceil(x);
  return __clc_convert_ulong16_sat(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_rtn(double16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  ulong16 __clc_convert_ulong16_sat_rtn(double16 x)
{
  x = __spirv_ocl_floor(x);
  return __clc_convert_ulong16_sat(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtz(char x)
{
  half r = __clc_convert_half(x);
  char y = __clc_convert_char(r);
  uchar abs_x = __clc_abs(x);
  uchar abs_y = __clc_abs(y);
  return __clc_convert_short(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rte(char x)
{
  return __clc_convert_half(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtp(char x)
{
  half r = __clc_convert_half(x);
  char y = __clc_convert_char(r);
  return __clc_convert_short(y < x) ? r : __spirv_ocl_nextafter(r, (half)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtn(char x)
{
  half r = __clc_convert_half(x);
  char y = __clc_convert_char(r);
  return __clc_convert_short(y > x) ? r : __spirv_ocl_nextafter(r, (half)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtz(char2 x)
{
  half2 r = __clc_convert_half2(x);
  char2 y = __clc_convert_char2(r);
  uchar2 abs_x = __clc_abs(x);
  uchar2 abs_y = __clc_abs(y);
  return __clc_convert_short2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half2)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rte(char2 x)
{
  return __clc_convert_half2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtp(char2 x)
{
  half2 r = __clc_convert_half2(x);
  char2 y = __clc_convert_char2(r);
  return __clc_convert_short2(y < x) ? r : __spirv_ocl_nextafter(r, (half2)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtn(char2 x)
{
  half2 r = __clc_convert_half2(x);
  char2 y = __clc_convert_char2(r);
  return __clc_convert_short2(y > x) ? r : __spirv_ocl_nextafter(r, (half2)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtz(char3 x)
{
  half3 r = __clc_convert_half3(x);
  char3 y = __clc_convert_char3(r);
  uchar3 abs_x = __clc_abs(x);
  uchar3 abs_y = __clc_abs(y);
  return __clc_convert_short3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half3)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rte(char3 x)
{
  return __clc_convert_half3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtp(char3 x)
{
  half3 r = __clc_convert_half3(x);
  char3 y = __clc_convert_char3(r);
  return __clc_convert_short3(y < x) ? r : __spirv_ocl_nextafter(r, (half3)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtn(char3 x)
{
  half3 r = __clc_convert_half3(x);
  char3 y = __clc_convert_char3(r);
  return __clc_convert_short3(y > x) ? r : __spirv_ocl_nextafter(r, (half3)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtz(char4 x)
{
  half4 r = __clc_convert_half4(x);
  char4 y = __clc_convert_char4(r);
  uchar4 abs_x = __clc_abs(x);
  uchar4 abs_y = __clc_abs(y);
  return __clc_convert_short4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half4)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rte(char4 x)
{
  return __clc_convert_half4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtp(char4 x)
{
  half4 r = __clc_convert_half4(x);
  char4 y = __clc_convert_char4(r);
  return __clc_convert_short4(y < x) ? r : __spirv_ocl_nextafter(r, (half4)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtn(char4 x)
{
  half4 r = __clc_convert_half4(x);
  char4 y = __clc_convert_char4(r);
  return __clc_convert_short4(y > x) ? r : __spirv_ocl_nextafter(r, (half4)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtz(char8 x)
{
  half8 r = __clc_convert_half8(x);
  char8 y = __clc_convert_char8(r);
  uchar8 abs_x = __clc_abs(x);
  uchar8 abs_y = __clc_abs(y);
  return __clc_convert_short8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half8)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rte(char8 x)
{
  return __clc_convert_half8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtp(char8 x)
{
  half8 r = __clc_convert_half8(x);
  char8 y = __clc_convert_char8(r);
  return __clc_convert_short8(y < x) ? r : __spirv_ocl_nextafter(r, (half8)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtn(char8 x)
{
  half8 r = __clc_convert_half8(x);
  char8 y = __clc_convert_char8(r);
  return __clc_convert_short8(y > x) ? r : __spirv_ocl_nextafter(r, (half8)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtz(char16 x)
{
  half16 r = __clc_convert_half16(x);
  char16 y = __clc_convert_char16(r);
  uchar16 abs_x = __clc_abs(x);
  uchar16 abs_y = __clc_abs(y);
  return __clc_convert_short16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half16)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rte(char16 x)
{
  return __clc_convert_half16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtp(char16 x)
{
  half16 r = __clc_convert_half16(x);
  char16 y = __clc_convert_char16(r);
  return __clc_convert_short16(y < x) ? r : __spirv_ocl_nextafter(r, (half16)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtn(char16 x)
{
  half16 r = __clc_convert_half16(x);
  char16 y = __clc_convert_char16(r);
  return __clc_convert_short16(y > x) ? r : __spirv_ocl_nextafter(r, (half16)-INFINITY);
}
#endif
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtz(char x)
{
  float r = __clc_convert_float(x);
  char y = __clc_convert_char(r);
  uchar abs_x = __clc_abs(x);
  uchar abs_y = __clc_abs(y);
  return __clc_convert_int(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rte(char x)
{
  return __clc_convert_float(x);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtp(char x)
{
  float r = __clc_convert_float(x);
  char y = __clc_convert_char(r);
  return __clc_convert_int(y < x) ? r : __spirv_ocl_nextafter(r, (float)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtn(char x)
{
  float r = __clc_convert_float(x);
  char y = __clc_convert_char(r);
  return __clc_convert_int(y > x) ? r : __spirv_ocl_nextafter(r, (float)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtz(char2 x)
{
  float2 r = __clc_convert_float2(x);
  char2 y = __clc_convert_char2(r);
  uchar2 abs_x = __clc_abs(x);
  uchar2 abs_y = __clc_abs(y);
  return __clc_convert_int2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float2)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rte(char2 x)
{
  return __clc_convert_float2(x);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtp(char2 x)
{
  float2 r = __clc_convert_float2(x);
  char2 y = __clc_convert_char2(r);
  return __clc_convert_int2(y < x) ? r : __spirv_ocl_nextafter(r, (float2)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtn(char2 x)
{
  float2 r = __clc_convert_float2(x);
  char2 y = __clc_convert_char2(r);
  return __clc_convert_int2(y > x) ? r : __spirv_ocl_nextafter(r, (float2)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtz(char3 x)
{
  float3 r = __clc_convert_float3(x);
  char3 y = __clc_convert_char3(r);
  uchar3 abs_x = __clc_abs(x);
  uchar3 abs_y = __clc_abs(y);
  return __clc_convert_int3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float3)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rte(char3 x)
{
  return __clc_convert_float3(x);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtp(char3 x)
{
  float3 r = __clc_convert_float3(x);
  char3 y = __clc_convert_char3(r);
  return __clc_convert_int3(y < x) ? r : __spirv_ocl_nextafter(r, (float3)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtn(char3 x)
{
  float3 r = __clc_convert_float3(x);
  char3 y = __clc_convert_char3(r);
  return __clc_convert_int3(y > x) ? r : __spirv_ocl_nextafter(r, (float3)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtz(char4 x)
{
  float4 r = __clc_convert_float4(x);
  char4 y = __clc_convert_char4(r);
  uchar4 abs_x = __clc_abs(x);
  uchar4 abs_y = __clc_abs(y);
  return __clc_convert_int4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float4)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rte(char4 x)
{
  return __clc_convert_float4(x);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtp(char4 x)
{
  float4 r = __clc_convert_float4(x);
  char4 y = __clc_convert_char4(r);
  return __clc_convert_int4(y < x) ? r : __spirv_ocl_nextafter(r, (float4)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtn(char4 x)
{
  float4 r = __clc_convert_float4(x);
  char4 y = __clc_convert_char4(r);
  return __clc_convert_int4(y > x) ? r : __spirv_ocl_nextafter(r, (float4)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtz(char8 x)
{
  float8 r = __clc_convert_float8(x);
  char8 y = __clc_convert_char8(r);
  uchar8 abs_x = __clc_abs(x);
  uchar8 abs_y = __clc_abs(y);
  return __clc_convert_int8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float8)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rte(char8 x)
{
  return __clc_convert_float8(x);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtp(char8 x)
{
  float8 r = __clc_convert_float8(x);
  char8 y = __clc_convert_char8(r);
  return __clc_convert_int8(y < x) ? r : __spirv_ocl_nextafter(r, (float8)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtn(char8 x)
{
  float8 r = __clc_convert_float8(x);
  char8 y = __clc_convert_char8(r);
  return __clc_convert_int8(y > x) ? r : __spirv_ocl_nextafter(r, (float8)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtz(char16 x)
{
  float16 r = __clc_convert_float16(x);
  char16 y = __clc_convert_char16(r);
  uchar16 abs_x = __clc_abs(x);
  uchar16 abs_y = __clc_abs(y);
  return __clc_convert_int16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float16)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rte(char16 x)
{
  return __clc_convert_float16(x);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtp(char16 x)
{
  float16 r = __clc_convert_float16(x);
  char16 y = __clc_convert_char16(r);
  return __clc_convert_int16(y < x) ? r : __spirv_ocl_nextafter(r, (float16)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtn(char16 x)
{
  float16 r = __clc_convert_float16(x);
  char16 y = __clc_convert_char16(r);
  return __clc_convert_int16(y > x) ? r : __spirv_ocl_nextafter(r, (float16)-INFINITY);
}
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtz(char x)
{
  double r = __clc_convert_double(x);
  char y = __clc_convert_char(r);
  uchar abs_x = __clc_abs(x);
  uchar abs_y = __clc_abs(y);
  return __clc_convert_long(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rte(char x)
{
  return __clc_convert_double(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtp(char x)
{
  double r = __clc_convert_double(x);
  char y = __clc_convert_char(r);
  return __clc_convert_long(y < x) ? r : __spirv_ocl_nextafter(r, (double)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtn(char x)
{
  double r = __clc_convert_double(x);
  char y = __clc_convert_char(r);
  return __clc_convert_long(y > x) ? r : __spirv_ocl_nextafter(r, (double)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtz(char2 x)
{
  double2 r = __clc_convert_double2(x);
  char2 y = __clc_convert_char2(r);
  uchar2 abs_x = __clc_abs(x);
  uchar2 abs_y = __clc_abs(y);
  return __clc_convert_long2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rte(char2 x)
{
  return __clc_convert_double2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtp(char2 x)
{
  double2 r = __clc_convert_double2(x);
  char2 y = __clc_convert_char2(r);
  return __clc_convert_long2(y < x) ? r : __spirv_ocl_nextafter(r, (double2)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtn(char2 x)
{
  double2 r = __clc_convert_double2(x);
  char2 y = __clc_convert_char2(r);
  return __clc_convert_long2(y > x) ? r : __spirv_ocl_nextafter(r, (double2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtz(char3 x)
{
  double3 r = __clc_convert_double3(x);
  char3 y = __clc_convert_char3(r);
  uchar3 abs_x = __clc_abs(x);
  uchar3 abs_y = __clc_abs(y);
  return __clc_convert_long3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rte(char3 x)
{
  return __clc_convert_double3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtp(char3 x)
{
  double3 r = __clc_convert_double3(x);
  char3 y = __clc_convert_char3(r);
  return __clc_convert_long3(y < x) ? r : __spirv_ocl_nextafter(r, (double3)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtn(char3 x)
{
  double3 r = __clc_convert_double3(x);
  char3 y = __clc_convert_char3(r);
  return __clc_convert_long3(y > x) ? r : __spirv_ocl_nextafter(r, (double3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtz(char4 x)
{
  double4 r = __clc_convert_double4(x);
  char4 y = __clc_convert_char4(r);
  uchar4 abs_x = __clc_abs(x);
  uchar4 abs_y = __clc_abs(y);
  return __clc_convert_long4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rte(char4 x)
{
  return __clc_convert_double4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtp(char4 x)
{
  double4 r = __clc_convert_double4(x);
  char4 y = __clc_convert_char4(r);
  return __clc_convert_long4(y < x) ? r : __spirv_ocl_nextafter(r, (double4)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtn(char4 x)
{
  double4 r = __clc_convert_double4(x);
  char4 y = __clc_convert_char4(r);
  return __clc_convert_long4(y > x) ? r : __spirv_ocl_nextafter(r, (double4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtz(char8 x)
{
  double8 r = __clc_convert_double8(x);
  char8 y = __clc_convert_char8(r);
  uchar8 abs_x = __clc_abs(x);
  uchar8 abs_y = __clc_abs(y);
  return __clc_convert_long8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rte(char8 x)
{
  return __clc_convert_double8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtp(char8 x)
{
  double8 r = __clc_convert_double8(x);
  char8 y = __clc_convert_char8(r);
  return __clc_convert_long8(y < x) ? r : __spirv_ocl_nextafter(r, (double8)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtn(char8 x)
{
  double8 r = __clc_convert_double8(x);
  char8 y = __clc_convert_char8(r);
  return __clc_convert_long8(y > x) ? r : __spirv_ocl_nextafter(r, (double8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtz(char16 x)
{
  double16 r = __clc_convert_double16(x);
  char16 y = __clc_convert_char16(r);
  uchar16 abs_x = __clc_abs(x);
  uchar16 abs_y = __clc_abs(y);
  return __clc_convert_long16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double16)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rte(char16 x)
{
  return __clc_convert_double16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtp(char16 x)
{
  double16 r = __clc_convert_double16(x);
  char16 y = __clc_convert_char16(r);
  return __clc_convert_long16(y < x) ? r : __spirv_ocl_nextafter(r, (double16)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtn(char16 x)
{
  double16 r = __clc_convert_double16(x);
  char16 y = __clc_convert_char16(r);
  return __clc_convert_long16(y > x) ? r : __spirv_ocl_nextafter(r, (double16)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtz(schar x)
{
  half r = __clc_convert_half(x);
  schar y = __clc_convert_schar(r);
  uchar abs_x = __clc_abs(x);
  uchar abs_y = __clc_abs(y);
  return __clc_convert_short(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rte(schar x)
{
  return __clc_convert_half(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtp(schar x)
{
  half r = __clc_convert_half(x);
  schar y = __clc_convert_schar(r);
  return __clc_convert_short(y < x) ? r : __spirv_ocl_nextafter(r, (half)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtn(schar x)
{
  half r = __clc_convert_half(x);
  schar y = __clc_convert_schar(r);
  return __clc_convert_short(y > x) ? r : __spirv_ocl_nextafter(r, (half)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtz(schar2 x)
{
  half2 r = __clc_convert_half2(x);
  schar2 y = __clc_convert_schar2(r);
  uchar2 abs_x = __clc_abs(x);
  uchar2 abs_y = __clc_abs(y);
  return __clc_convert_short2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half2)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rte(schar2 x)
{
  return __clc_convert_half2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtp(schar2 x)
{
  half2 r = __clc_convert_half2(x);
  schar2 y = __clc_convert_schar2(r);
  return __clc_convert_short2(y < x) ? r : __spirv_ocl_nextafter(r, (half2)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtn(schar2 x)
{
  half2 r = __clc_convert_half2(x);
  schar2 y = __clc_convert_schar2(r);
  return __clc_convert_short2(y > x) ? r : __spirv_ocl_nextafter(r, (half2)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtz(schar3 x)
{
  half3 r = __clc_convert_half3(x);
  schar3 y = __clc_convert_schar3(r);
  uchar3 abs_x = __clc_abs(x);
  uchar3 abs_y = __clc_abs(y);
  return __clc_convert_short3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half3)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rte(schar3 x)
{
  return __clc_convert_half3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtp(schar3 x)
{
  half3 r = __clc_convert_half3(x);
  schar3 y = __clc_convert_schar3(r);
  return __clc_convert_short3(y < x) ? r : __spirv_ocl_nextafter(r, (half3)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtn(schar3 x)
{
  half3 r = __clc_convert_half3(x);
  schar3 y = __clc_convert_schar3(r);
  return __clc_convert_short3(y > x) ? r : __spirv_ocl_nextafter(r, (half3)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtz(schar4 x)
{
  half4 r = __clc_convert_half4(x);
  schar4 y = __clc_convert_schar4(r);
  uchar4 abs_x = __clc_abs(x);
  uchar4 abs_y = __clc_abs(y);
  return __clc_convert_short4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half4)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rte(schar4 x)
{
  return __clc_convert_half4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtp(schar4 x)
{
  half4 r = __clc_convert_half4(x);
  schar4 y = __clc_convert_schar4(r);
  return __clc_convert_short4(y < x) ? r : __spirv_ocl_nextafter(r, (half4)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtn(schar4 x)
{
  half4 r = __clc_convert_half4(x);
  schar4 y = __clc_convert_schar4(r);
  return __clc_convert_short4(y > x) ? r : __spirv_ocl_nextafter(r, (half4)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtz(schar8 x)
{
  half8 r = __clc_convert_half8(x);
  schar8 y = __clc_convert_schar8(r);
  uchar8 abs_x = __clc_abs(x);
  uchar8 abs_y = __clc_abs(y);
  return __clc_convert_short8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half8)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rte(schar8 x)
{
  return __clc_convert_half8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtp(schar8 x)
{
  half8 r = __clc_convert_half8(x);
  schar8 y = __clc_convert_schar8(r);
  return __clc_convert_short8(y < x) ? r : __spirv_ocl_nextafter(r, (half8)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtn(schar8 x)
{
  half8 r = __clc_convert_half8(x);
  schar8 y = __clc_convert_schar8(r);
  return __clc_convert_short8(y > x) ? r : __spirv_ocl_nextafter(r, (half8)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtz(schar16 x)
{
  half16 r = __clc_convert_half16(x);
  schar16 y = __clc_convert_schar16(r);
  uchar16 abs_x = __clc_abs(x);
  uchar16 abs_y = __clc_abs(y);
  return __clc_convert_short16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half16)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rte(schar16 x)
{
  return __clc_convert_half16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtp(schar16 x)
{
  half16 r = __clc_convert_half16(x);
  schar16 y = __clc_convert_schar16(r);
  return __clc_convert_short16(y < x) ? r : __spirv_ocl_nextafter(r, (half16)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtn(schar16 x)
{
  half16 r = __clc_convert_half16(x);
  schar16 y = __clc_convert_schar16(r);
  return __clc_convert_short16(y > x) ? r : __spirv_ocl_nextafter(r, (half16)-INFINITY);
}
#endif
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtz(schar x)
{
  float r = __clc_convert_float(x);
  schar y = __clc_convert_schar(r);
  uchar abs_x = __clc_abs(x);
  uchar abs_y = __clc_abs(y);
  return __clc_convert_int(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rte(schar x)
{
  return __clc_convert_float(x);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtp(schar x)
{
  float r = __clc_convert_float(x);
  schar y = __clc_convert_schar(r);
  return __clc_convert_int(y < x) ? r : __spirv_ocl_nextafter(r, (float)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtn(schar x)
{
  float r = __clc_convert_float(x);
  schar y = __clc_convert_schar(r);
  return __clc_convert_int(y > x) ? r : __spirv_ocl_nextafter(r, (float)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtz(schar2 x)
{
  float2 r = __clc_convert_float2(x);
  schar2 y = __clc_convert_schar2(r);
  uchar2 abs_x = __clc_abs(x);
  uchar2 abs_y = __clc_abs(y);
  return __clc_convert_int2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float2)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rte(schar2 x)
{
  return __clc_convert_float2(x);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtp(schar2 x)
{
  float2 r = __clc_convert_float2(x);
  schar2 y = __clc_convert_schar2(r);
  return __clc_convert_int2(y < x) ? r : __spirv_ocl_nextafter(r, (float2)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtn(schar2 x)
{
  float2 r = __clc_convert_float2(x);
  schar2 y = __clc_convert_schar2(r);
  return __clc_convert_int2(y > x) ? r : __spirv_ocl_nextafter(r, (float2)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtz(schar3 x)
{
  float3 r = __clc_convert_float3(x);
  schar3 y = __clc_convert_schar3(r);
  uchar3 abs_x = __clc_abs(x);
  uchar3 abs_y = __clc_abs(y);
  return __clc_convert_int3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float3)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rte(schar3 x)
{
  return __clc_convert_float3(x);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtp(schar3 x)
{
  float3 r = __clc_convert_float3(x);
  schar3 y = __clc_convert_schar3(r);
  return __clc_convert_int3(y < x) ? r : __spirv_ocl_nextafter(r, (float3)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtn(schar3 x)
{
  float3 r = __clc_convert_float3(x);
  schar3 y = __clc_convert_schar3(r);
  return __clc_convert_int3(y > x) ? r : __spirv_ocl_nextafter(r, (float3)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtz(schar4 x)
{
  float4 r = __clc_convert_float4(x);
  schar4 y = __clc_convert_schar4(r);
  uchar4 abs_x = __clc_abs(x);
  uchar4 abs_y = __clc_abs(y);
  return __clc_convert_int4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float4)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rte(schar4 x)
{
  return __clc_convert_float4(x);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtp(schar4 x)
{
  float4 r = __clc_convert_float4(x);
  schar4 y = __clc_convert_schar4(r);
  return __clc_convert_int4(y < x) ? r : __spirv_ocl_nextafter(r, (float4)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtn(schar4 x)
{
  float4 r = __clc_convert_float4(x);
  schar4 y = __clc_convert_schar4(r);
  return __clc_convert_int4(y > x) ? r : __spirv_ocl_nextafter(r, (float4)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtz(schar8 x)
{
  float8 r = __clc_convert_float8(x);
  schar8 y = __clc_convert_schar8(r);
  uchar8 abs_x = __clc_abs(x);
  uchar8 abs_y = __clc_abs(y);
  return __clc_convert_int8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float8)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rte(schar8 x)
{
  return __clc_convert_float8(x);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtp(schar8 x)
{
  float8 r = __clc_convert_float8(x);
  schar8 y = __clc_convert_schar8(r);
  return __clc_convert_int8(y < x) ? r : __spirv_ocl_nextafter(r, (float8)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtn(schar8 x)
{
  float8 r = __clc_convert_float8(x);
  schar8 y = __clc_convert_schar8(r);
  return __clc_convert_int8(y > x) ? r : __spirv_ocl_nextafter(r, (float8)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtz(schar16 x)
{
  float16 r = __clc_convert_float16(x);
  schar16 y = __clc_convert_schar16(r);
  uchar16 abs_x = __clc_abs(x);
  uchar16 abs_y = __clc_abs(y);
  return __clc_convert_int16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float16)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rte(schar16 x)
{
  return __clc_convert_float16(x);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtp(schar16 x)
{
  float16 r = __clc_convert_float16(x);
  schar16 y = __clc_convert_schar16(r);
  return __clc_convert_int16(y < x) ? r : __spirv_ocl_nextafter(r, (float16)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtn(schar16 x)
{
  float16 r = __clc_convert_float16(x);
  schar16 y = __clc_convert_schar16(r);
  return __clc_convert_int16(y > x) ? r : __spirv_ocl_nextafter(r, (float16)-INFINITY);
}
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtz(schar x)
{
  double r = __clc_convert_double(x);
  schar y = __clc_convert_schar(r);
  uchar abs_x = __clc_abs(x);
  uchar abs_y = __clc_abs(y);
  return __clc_convert_long(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rte(schar x)
{
  return __clc_convert_double(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtp(schar x)
{
  double r = __clc_convert_double(x);
  schar y = __clc_convert_schar(r);
  return __clc_convert_long(y < x) ? r : __spirv_ocl_nextafter(r, (double)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtn(schar x)
{
  double r = __clc_convert_double(x);
  schar y = __clc_convert_schar(r);
  return __clc_convert_long(y > x) ? r : __spirv_ocl_nextafter(r, (double)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtz(schar2 x)
{
  double2 r = __clc_convert_double2(x);
  schar2 y = __clc_convert_schar2(r);
  uchar2 abs_x = __clc_abs(x);
  uchar2 abs_y = __clc_abs(y);
  return __clc_convert_long2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rte(schar2 x)
{
  return __clc_convert_double2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtp(schar2 x)
{
  double2 r = __clc_convert_double2(x);
  schar2 y = __clc_convert_schar2(r);
  return __clc_convert_long2(y < x) ? r : __spirv_ocl_nextafter(r, (double2)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtn(schar2 x)
{
  double2 r = __clc_convert_double2(x);
  schar2 y = __clc_convert_schar2(r);
  return __clc_convert_long2(y > x) ? r : __spirv_ocl_nextafter(r, (double2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtz(schar3 x)
{
  double3 r = __clc_convert_double3(x);
  schar3 y = __clc_convert_schar3(r);
  uchar3 abs_x = __clc_abs(x);
  uchar3 abs_y = __clc_abs(y);
  return __clc_convert_long3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rte(schar3 x)
{
  return __clc_convert_double3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtp(schar3 x)
{
  double3 r = __clc_convert_double3(x);
  schar3 y = __clc_convert_schar3(r);
  return __clc_convert_long3(y < x) ? r : __spirv_ocl_nextafter(r, (double3)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtn(schar3 x)
{
  double3 r = __clc_convert_double3(x);
  schar3 y = __clc_convert_schar3(r);
  return __clc_convert_long3(y > x) ? r : __spirv_ocl_nextafter(r, (double3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtz(schar4 x)
{
  double4 r = __clc_convert_double4(x);
  schar4 y = __clc_convert_schar4(r);
  uchar4 abs_x = __clc_abs(x);
  uchar4 abs_y = __clc_abs(y);
  return __clc_convert_long4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rte(schar4 x)
{
  return __clc_convert_double4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtp(schar4 x)
{
  double4 r = __clc_convert_double4(x);
  schar4 y = __clc_convert_schar4(r);
  return __clc_convert_long4(y < x) ? r : __spirv_ocl_nextafter(r, (double4)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtn(schar4 x)
{
  double4 r = __clc_convert_double4(x);
  schar4 y = __clc_convert_schar4(r);
  return __clc_convert_long4(y > x) ? r : __spirv_ocl_nextafter(r, (double4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtz(schar8 x)
{
  double8 r = __clc_convert_double8(x);
  schar8 y = __clc_convert_schar8(r);
  uchar8 abs_x = __clc_abs(x);
  uchar8 abs_y = __clc_abs(y);
  return __clc_convert_long8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rte(schar8 x)
{
  return __clc_convert_double8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtp(schar8 x)
{
  double8 r = __clc_convert_double8(x);
  schar8 y = __clc_convert_schar8(r);
  return __clc_convert_long8(y < x) ? r : __spirv_ocl_nextafter(r, (double8)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtn(schar8 x)
{
  double8 r = __clc_convert_double8(x);
  schar8 y = __clc_convert_schar8(r);
  return __clc_convert_long8(y > x) ? r : __spirv_ocl_nextafter(r, (double8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtz(schar16 x)
{
  double16 r = __clc_convert_double16(x);
  schar16 y = __clc_convert_schar16(r);
  uchar16 abs_x = __clc_abs(x);
  uchar16 abs_y = __clc_abs(y);
  return __clc_convert_long16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double16)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rte(schar16 x)
{
  return __clc_convert_double16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtp(schar16 x)
{
  double16 r = __clc_convert_double16(x);
  schar16 y = __clc_convert_schar16(r);
  return __clc_convert_long16(y < x) ? r : __spirv_ocl_nextafter(r, (double16)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtn(schar16 x)
{
  double16 r = __clc_convert_double16(x);
  schar16 y = __clc_convert_schar16(r);
  return __clc_convert_long16(y > x) ? r : __spirv_ocl_nextafter(r, (double16)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtz(uchar x)
{
  half r = __clc_convert_half(x);
  uchar y = __clc_convert_uchar(r);
  uchar abs_x = __clc_abs(x);
  uchar abs_y = __clc_abs(y);
  return __clc_convert_short(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rte(uchar x)
{
  return __clc_convert_half(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtp(uchar x)
{
  half r = __clc_convert_half(x);
  uchar y = __clc_convert_uchar(r);
  return __clc_convert_short(y < x) ? r : __spirv_ocl_nextafter(r, (half)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtn(uchar x)
{
  half r = __clc_convert_half(x);
  uchar y = __clc_convert_uchar(r);
  return __clc_convert_short(y > x) ? r : __spirv_ocl_nextafter(r, (half)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtz(uchar2 x)
{
  half2 r = __clc_convert_half2(x);
  uchar2 y = __clc_convert_uchar2(r);
  uchar2 abs_x = __clc_abs(x);
  uchar2 abs_y = __clc_abs(y);
  return __clc_convert_short2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half2)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rte(uchar2 x)
{
  return __clc_convert_half2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtp(uchar2 x)
{
  half2 r = __clc_convert_half2(x);
  uchar2 y = __clc_convert_uchar2(r);
  return __clc_convert_short2(y < x) ? r : __spirv_ocl_nextafter(r, (half2)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtn(uchar2 x)
{
  half2 r = __clc_convert_half2(x);
  uchar2 y = __clc_convert_uchar2(r);
  return __clc_convert_short2(y > x) ? r : __spirv_ocl_nextafter(r, (half2)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtz(uchar3 x)
{
  half3 r = __clc_convert_half3(x);
  uchar3 y = __clc_convert_uchar3(r);
  uchar3 abs_x = __clc_abs(x);
  uchar3 abs_y = __clc_abs(y);
  return __clc_convert_short3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half3)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rte(uchar3 x)
{
  return __clc_convert_half3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtp(uchar3 x)
{
  half3 r = __clc_convert_half3(x);
  uchar3 y = __clc_convert_uchar3(r);
  return __clc_convert_short3(y < x) ? r : __spirv_ocl_nextafter(r, (half3)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtn(uchar3 x)
{
  half3 r = __clc_convert_half3(x);
  uchar3 y = __clc_convert_uchar3(r);
  return __clc_convert_short3(y > x) ? r : __spirv_ocl_nextafter(r, (half3)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtz(uchar4 x)
{
  half4 r = __clc_convert_half4(x);
  uchar4 y = __clc_convert_uchar4(r);
  uchar4 abs_x = __clc_abs(x);
  uchar4 abs_y = __clc_abs(y);
  return __clc_convert_short4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half4)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rte(uchar4 x)
{
  return __clc_convert_half4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtp(uchar4 x)
{
  half4 r = __clc_convert_half4(x);
  uchar4 y = __clc_convert_uchar4(r);
  return __clc_convert_short4(y < x) ? r : __spirv_ocl_nextafter(r, (half4)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtn(uchar4 x)
{
  half4 r = __clc_convert_half4(x);
  uchar4 y = __clc_convert_uchar4(r);
  return __clc_convert_short4(y > x) ? r : __spirv_ocl_nextafter(r, (half4)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtz(uchar8 x)
{
  half8 r = __clc_convert_half8(x);
  uchar8 y = __clc_convert_uchar8(r);
  uchar8 abs_x = __clc_abs(x);
  uchar8 abs_y = __clc_abs(y);
  return __clc_convert_short8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half8)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rte(uchar8 x)
{
  return __clc_convert_half8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtp(uchar8 x)
{
  half8 r = __clc_convert_half8(x);
  uchar8 y = __clc_convert_uchar8(r);
  return __clc_convert_short8(y < x) ? r : __spirv_ocl_nextafter(r, (half8)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtn(uchar8 x)
{
  half8 r = __clc_convert_half8(x);
  uchar8 y = __clc_convert_uchar8(r);
  return __clc_convert_short8(y > x) ? r : __spirv_ocl_nextafter(r, (half8)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtz(uchar16 x)
{
  half16 r = __clc_convert_half16(x);
  uchar16 y = __clc_convert_uchar16(r);
  uchar16 abs_x = __clc_abs(x);
  uchar16 abs_y = __clc_abs(y);
  return __clc_convert_short16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half16)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rte(uchar16 x)
{
  return __clc_convert_half16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtp(uchar16 x)
{
  half16 r = __clc_convert_half16(x);
  uchar16 y = __clc_convert_uchar16(r);
  return __clc_convert_short16(y < x) ? r : __spirv_ocl_nextafter(r, (half16)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtn(uchar16 x)
{
  half16 r = __clc_convert_half16(x);
  uchar16 y = __clc_convert_uchar16(r);
  return __clc_convert_short16(y > x) ? r : __spirv_ocl_nextafter(r, (half16)-INFINITY);
}
#endif
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtz(uchar x)
{
  float r = __clc_convert_float(x);
  uchar y = __clc_convert_uchar(r);
  uchar abs_x = __clc_abs(x);
  uchar abs_y = __clc_abs(y);
  return __clc_convert_int(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rte(uchar x)
{
  return __clc_convert_float(x);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtp(uchar x)
{
  float r = __clc_convert_float(x);
  uchar y = __clc_convert_uchar(r);
  return __clc_convert_int(y < x) ? r : __spirv_ocl_nextafter(r, (float)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtn(uchar x)
{
  float r = __clc_convert_float(x);
  uchar y = __clc_convert_uchar(r);
  return __clc_convert_int(y > x) ? r : __spirv_ocl_nextafter(r, (float)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtz(uchar2 x)
{
  float2 r = __clc_convert_float2(x);
  uchar2 y = __clc_convert_uchar2(r);
  uchar2 abs_x = __clc_abs(x);
  uchar2 abs_y = __clc_abs(y);
  return __clc_convert_int2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float2)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rte(uchar2 x)
{
  return __clc_convert_float2(x);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtp(uchar2 x)
{
  float2 r = __clc_convert_float2(x);
  uchar2 y = __clc_convert_uchar2(r);
  return __clc_convert_int2(y < x) ? r : __spirv_ocl_nextafter(r, (float2)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtn(uchar2 x)
{
  float2 r = __clc_convert_float2(x);
  uchar2 y = __clc_convert_uchar2(r);
  return __clc_convert_int2(y > x) ? r : __spirv_ocl_nextafter(r, (float2)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtz(uchar3 x)
{
  float3 r = __clc_convert_float3(x);
  uchar3 y = __clc_convert_uchar3(r);
  uchar3 abs_x = __clc_abs(x);
  uchar3 abs_y = __clc_abs(y);
  return __clc_convert_int3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float3)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rte(uchar3 x)
{
  return __clc_convert_float3(x);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtp(uchar3 x)
{
  float3 r = __clc_convert_float3(x);
  uchar3 y = __clc_convert_uchar3(r);
  return __clc_convert_int3(y < x) ? r : __spirv_ocl_nextafter(r, (float3)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtn(uchar3 x)
{
  float3 r = __clc_convert_float3(x);
  uchar3 y = __clc_convert_uchar3(r);
  return __clc_convert_int3(y > x) ? r : __spirv_ocl_nextafter(r, (float3)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtz(uchar4 x)
{
  float4 r = __clc_convert_float4(x);
  uchar4 y = __clc_convert_uchar4(r);
  uchar4 abs_x = __clc_abs(x);
  uchar4 abs_y = __clc_abs(y);
  return __clc_convert_int4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float4)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rte(uchar4 x)
{
  return __clc_convert_float4(x);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtp(uchar4 x)
{
  float4 r = __clc_convert_float4(x);
  uchar4 y = __clc_convert_uchar4(r);
  return __clc_convert_int4(y < x) ? r : __spirv_ocl_nextafter(r, (float4)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtn(uchar4 x)
{
  float4 r = __clc_convert_float4(x);
  uchar4 y = __clc_convert_uchar4(r);
  return __clc_convert_int4(y > x) ? r : __spirv_ocl_nextafter(r, (float4)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtz(uchar8 x)
{
  float8 r = __clc_convert_float8(x);
  uchar8 y = __clc_convert_uchar8(r);
  uchar8 abs_x = __clc_abs(x);
  uchar8 abs_y = __clc_abs(y);
  return __clc_convert_int8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float8)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rte(uchar8 x)
{
  return __clc_convert_float8(x);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtp(uchar8 x)
{
  float8 r = __clc_convert_float8(x);
  uchar8 y = __clc_convert_uchar8(r);
  return __clc_convert_int8(y < x) ? r : __spirv_ocl_nextafter(r, (float8)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtn(uchar8 x)
{
  float8 r = __clc_convert_float8(x);
  uchar8 y = __clc_convert_uchar8(r);
  return __clc_convert_int8(y > x) ? r : __spirv_ocl_nextafter(r, (float8)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtz(uchar16 x)
{
  float16 r = __clc_convert_float16(x);
  uchar16 y = __clc_convert_uchar16(r);
  uchar16 abs_x = __clc_abs(x);
  uchar16 abs_y = __clc_abs(y);
  return __clc_convert_int16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float16)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rte(uchar16 x)
{
  return __clc_convert_float16(x);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtp(uchar16 x)
{
  float16 r = __clc_convert_float16(x);
  uchar16 y = __clc_convert_uchar16(r);
  return __clc_convert_int16(y < x) ? r : __spirv_ocl_nextafter(r, (float16)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtn(uchar16 x)
{
  float16 r = __clc_convert_float16(x);
  uchar16 y = __clc_convert_uchar16(r);
  return __clc_convert_int16(y > x) ? r : __spirv_ocl_nextafter(r, (float16)-INFINITY);
}
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtz(uchar x)
{
  double r = __clc_convert_double(x);
  uchar y = __clc_convert_uchar(r);
  uchar abs_x = __clc_abs(x);
  uchar abs_y = __clc_abs(y);
  return __clc_convert_long(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rte(uchar x)
{
  return __clc_convert_double(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtp(uchar x)
{
  double r = __clc_convert_double(x);
  uchar y = __clc_convert_uchar(r);
  return __clc_convert_long(y < x) ? r : __spirv_ocl_nextafter(r, (double)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtn(uchar x)
{
  double r = __clc_convert_double(x);
  uchar y = __clc_convert_uchar(r);
  return __clc_convert_long(y > x) ? r : __spirv_ocl_nextafter(r, (double)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtz(uchar2 x)
{
  double2 r = __clc_convert_double2(x);
  uchar2 y = __clc_convert_uchar2(r);
  uchar2 abs_x = __clc_abs(x);
  uchar2 abs_y = __clc_abs(y);
  return __clc_convert_long2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rte(uchar2 x)
{
  return __clc_convert_double2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtp(uchar2 x)
{
  double2 r = __clc_convert_double2(x);
  uchar2 y = __clc_convert_uchar2(r);
  return __clc_convert_long2(y < x) ? r : __spirv_ocl_nextafter(r, (double2)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtn(uchar2 x)
{
  double2 r = __clc_convert_double2(x);
  uchar2 y = __clc_convert_uchar2(r);
  return __clc_convert_long2(y > x) ? r : __spirv_ocl_nextafter(r, (double2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtz(uchar3 x)
{
  double3 r = __clc_convert_double3(x);
  uchar3 y = __clc_convert_uchar3(r);
  uchar3 abs_x = __clc_abs(x);
  uchar3 abs_y = __clc_abs(y);
  return __clc_convert_long3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rte(uchar3 x)
{
  return __clc_convert_double3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtp(uchar3 x)
{
  double3 r = __clc_convert_double3(x);
  uchar3 y = __clc_convert_uchar3(r);
  return __clc_convert_long3(y < x) ? r : __spirv_ocl_nextafter(r, (double3)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtn(uchar3 x)
{
  double3 r = __clc_convert_double3(x);
  uchar3 y = __clc_convert_uchar3(r);
  return __clc_convert_long3(y > x) ? r : __spirv_ocl_nextafter(r, (double3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtz(uchar4 x)
{
  double4 r = __clc_convert_double4(x);
  uchar4 y = __clc_convert_uchar4(r);
  uchar4 abs_x = __clc_abs(x);
  uchar4 abs_y = __clc_abs(y);
  return __clc_convert_long4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rte(uchar4 x)
{
  return __clc_convert_double4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtp(uchar4 x)
{
  double4 r = __clc_convert_double4(x);
  uchar4 y = __clc_convert_uchar4(r);
  return __clc_convert_long4(y < x) ? r : __spirv_ocl_nextafter(r, (double4)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtn(uchar4 x)
{
  double4 r = __clc_convert_double4(x);
  uchar4 y = __clc_convert_uchar4(r);
  return __clc_convert_long4(y > x) ? r : __spirv_ocl_nextafter(r, (double4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtz(uchar8 x)
{
  double8 r = __clc_convert_double8(x);
  uchar8 y = __clc_convert_uchar8(r);
  uchar8 abs_x = __clc_abs(x);
  uchar8 abs_y = __clc_abs(y);
  return __clc_convert_long8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rte(uchar8 x)
{
  return __clc_convert_double8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtp(uchar8 x)
{
  double8 r = __clc_convert_double8(x);
  uchar8 y = __clc_convert_uchar8(r);
  return __clc_convert_long8(y < x) ? r : __spirv_ocl_nextafter(r, (double8)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtn(uchar8 x)
{
  double8 r = __clc_convert_double8(x);
  uchar8 y = __clc_convert_uchar8(r);
  return __clc_convert_long8(y > x) ? r : __spirv_ocl_nextafter(r, (double8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtz(uchar16 x)
{
  double16 r = __clc_convert_double16(x);
  uchar16 y = __clc_convert_uchar16(r);
  uchar16 abs_x = __clc_abs(x);
  uchar16 abs_y = __clc_abs(y);
  return __clc_convert_long16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double16)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rte(uchar16 x)
{
  return __clc_convert_double16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtp(uchar16 x)
{
  double16 r = __clc_convert_double16(x);
  uchar16 y = __clc_convert_uchar16(r);
  return __clc_convert_long16(y < x) ? r : __spirv_ocl_nextafter(r, (double16)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtn(uchar16 x)
{
  double16 r = __clc_convert_double16(x);
  uchar16 y = __clc_convert_uchar16(r);
  return __clc_convert_long16(y > x) ? r : __spirv_ocl_nextafter(r, (double16)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtz(short x)
{
  half r = __clc_convert_half(x);
  short y = __clc_convert_short(r);
  ushort abs_x = __clc_abs(x);
  ushort abs_y = __clc_abs(y);
  return __clc_convert_short(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rte(short x)
{
  return __clc_convert_half(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtp(short x)
{
  half r = __clc_convert_half(x);
  short y = __clc_convert_short(r);
  return __clc_convert_short(y < x) ? r : __spirv_ocl_nextafter(r, (half)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtn(short x)
{
  half r = __clc_convert_half(x);
  short y = __clc_convert_short(r);
  return __clc_convert_short(y > x) ? r : __spirv_ocl_nextafter(r, (half)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtz(short2 x)
{
  half2 r = __clc_convert_half2(x);
  short2 y = __clc_convert_short2(r);
  ushort2 abs_x = __clc_abs(x);
  ushort2 abs_y = __clc_abs(y);
  return __clc_convert_short2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half2)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rte(short2 x)
{
  return __clc_convert_half2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtp(short2 x)
{
  half2 r = __clc_convert_half2(x);
  short2 y = __clc_convert_short2(r);
  return __clc_convert_short2(y < x) ? r : __spirv_ocl_nextafter(r, (half2)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtn(short2 x)
{
  half2 r = __clc_convert_half2(x);
  short2 y = __clc_convert_short2(r);
  return __clc_convert_short2(y > x) ? r : __spirv_ocl_nextafter(r, (half2)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtz(short3 x)
{
  half3 r = __clc_convert_half3(x);
  short3 y = __clc_convert_short3(r);
  ushort3 abs_x = __clc_abs(x);
  ushort3 abs_y = __clc_abs(y);
  return __clc_convert_short3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half3)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rte(short3 x)
{
  return __clc_convert_half3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtp(short3 x)
{
  half3 r = __clc_convert_half3(x);
  short3 y = __clc_convert_short3(r);
  return __clc_convert_short3(y < x) ? r : __spirv_ocl_nextafter(r, (half3)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtn(short3 x)
{
  half3 r = __clc_convert_half3(x);
  short3 y = __clc_convert_short3(r);
  return __clc_convert_short3(y > x) ? r : __spirv_ocl_nextafter(r, (half3)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtz(short4 x)
{
  half4 r = __clc_convert_half4(x);
  short4 y = __clc_convert_short4(r);
  ushort4 abs_x = __clc_abs(x);
  ushort4 abs_y = __clc_abs(y);
  return __clc_convert_short4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half4)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rte(short4 x)
{
  return __clc_convert_half4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtp(short4 x)
{
  half4 r = __clc_convert_half4(x);
  short4 y = __clc_convert_short4(r);
  return __clc_convert_short4(y < x) ? r : __spirv_ocl_nextafter(r, (half4)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtn(short4 x)
{
  half4 r = __clc_convert_half4(x);
  short4 y = __clc_convert_short4(r);
  return __clc_convert_short4(y > x) ? r : __spirv_ocl_nextafter(r, (half4)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtz(short8 x)
{
  half8 r = __clc_convert_half8(x);
  short8 y = __clc_convert_short8(r);
  ushort8 abs_x = __clc_abs(x);
  ushort8 abs_y = __clc_abs(y);
  return __clc_convert_short8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half8)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rte(short8 x)
{
  return __clc_convert_half8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtp(short8 x)
{
  half8 r = __clc_convert_half8(x);
  short8 y = __clc_convert_short8(r);
  return __clc_convert_short8(y < x) ? r : __spirv_ocl_nextafter(r, (half8)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtn(short8 x)
{
  half8 r = __clc_convert_half8(x);
  short8 y = __clc_convert_short8(r);
  return __clc_convert_short8(y > x) ? r : __spirv_ocl_nextafter(r, (half8)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtz(short16 x)
{
  half16 r = __clc_convert_half16(x);
  short16 y = __clc_convert_short16(r);
  ushort16 abs_x = __clc_abs(x);
  ushort16 abs_y = __clc_abs(y);
  return __clc_convert_short16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half16)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rte(short16 x)
{
  return __clc_convert_half16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtp(short16 x)
{
  half16 r = __clc_convert_half16(x);
  short16 y = __clc_convert_short16(r);
  return __clc_convert_short16(y < x) ? r : __spirv_ocl_nextafter(r, (half16)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtn(short16 x)
{
  half16 r = __clc_convert_half16(x);
  short16 y = __clc_convert_short16(r);
  return __clc_convert_short16(y > x) ? r : __spirv_ocl_nextafter(r, (half16)-INFINITY);
}
#endif
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtz(short x)
{
  float r = __clc_convert_float(x);
  short y = __clc_convert_short(r);
  ushort abs_x = __clc_abs(x);
  ushort abs_y = __clc_abs(y);
  return __clc_convert_int(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rte(short x)
{
  return __clc_convert_float(x);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtp(short x)
{
  float r = __clc_convert_float(x);
  short y = __clc_convert_short(r);
  return __clc_convert_int(y < x) ? r : __spirv_ocl_nextafter(r, (float)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtn(short x)
{
  float r = __clc_convert_float(x);
  short y = __clc_convert_short(r);
  return __clc_convert_int(y > x) ? r : __spirv_ocl_nextafter(r, (float)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtz(short2 x)
{
  float2 r = __clc_convert_float2(x);
  short2 y = __clc_convert_short2(r);
  ushort2 abs_x = __clc_abs(x);
  ushort2 abs_y = __clc_abs(y);
  return __clc_convert_int2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float2)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rte(short2 x)
{
  return __clc_convert_float2(x);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtp(short2 x)
{
  float2 r = __clc_convert_float2(x);
  short2 y = __clc_convert_short2(r);
  return __clc_convert_int2(y < x) ? r : __spirv_ocl_nextafter(r, (float2)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtn(short2 x)
{
  float2 r = __clc_convert_float2(x);
  short2 y = __clc_convert_short2(r);
  return __clc_convert_int2(y > x) ? r : __spirv_ocl_nextafter(r, (float2)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtz(short3 x)
{
  float3 r = __clc_convert_float3(x);
  short3 y = __clc_convert_short3(r);
  ushort3 abs_x = __clc_abs(x);
  ushort3 abs_y = __clc_abs(y);
  return __clc_convert_int3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float3)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rte(short3 x)
{
  return __clc_convert_float3(x);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtp(short3 x)
{
  float3 r = __clc_convert_float3(x);
  short3 y = __clc_convert_short3(r);
  return __clc_convert_int3(y < x) ? r : __spirv_ocl_nextafter(r, (float3)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtn(short3 x)
{
  float3 r = __clc_convert_float3(x);
  short3 y = __clc_convert_short3(r);
  return __clc_convert_int3(y > x) ? r : __spirv_ocl_nextafter(r, (float3)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtz(short4 x)
{
  float4 r = __clc_convert_float4(x);
  short4 y = __clc_convert_short4(r);
  ushort4 abs_x = __clc_abs(x);
  ushort4 abs_y = __clc_abs(y);
  return __clc_convert_int4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float4)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rte(short4 x)
{
  return __clc_convert_float4(x);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtp(short4 x)
{
  float4 r = __clc_convert_float4(x);
  short4 y = __clc_convert_short4(r);
  return __clc_convert_int4(y < x) ? r : __spirv_ocl_nextafter(r, (float4)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtn(short4 x)
{
  float4 r = __clc_convert_float4(x);
  short4 y = __clc_convert_short4(r);
  return __clc_convert_int4(y > x) ? r : __spirv_ocl_nextafter(r, (float4)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtz(short8 x)
{
  float8 r = __clc_convert_float8(x);
  short8 y = __clc_convert_short8(r);
  ushort8 abs_x = __clc_abs(x);
  ushort8 abs_y = __clc_abs(y);
  return __clc_convert_int8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float8)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rte(short8 x)
{
  return __clc_convert_float8(x);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtp(short8 x)
{
  float8 r = __clc_convert_float8(x);
  short8 y = __clc_convert_short8(r);
  return __clc_convert_int8(y < x) ? r : __spirv_ocl_nextafter(r, (float8)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtn(short8 x)
{
  float8 r = __clc_convert_float8(x);
  short8 y = __clc_convert_short8(r);
  return __clc_convert_int8(y > x) ? r : __spirv_ocl_nextafter(r, (float8)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtz(short16 x)
{
  float16 r = __clc_convert_float16(x);
  short16 y = __clc_convert_short16(r);
  ushort16 abs_x = __clc_abs(x);
  ushort16 abs_y = __clc_abs(y);
  return __clc_convert_int16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float16)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rte(short16 x)
{
  return __clc_convert_float16(x);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtp(short16 x)
{
  float16 r = __clc_convert_float16(x);
  short16 y = __clc_convert_short16(r);
  return __clc_convert_int16(y < x) ? r : __spirv_ocl_nextafter(r, (float16)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtn(short16 x)
{
  float16 r = __clc_convert_float16(x);
  short16 y = __clc_convert_short16(r);
  return __clc_convert_int16(y > x) ? r : __spirv_ocl_nextafter(r, (float16)-INFINITY);
}
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtz(short x)
{
  double r = __clc_convert_double(x);
  short y = __clc_convert_short(r);
  ushort abs_x = __clc_abs(x);
  ushort abs_y = __clc_abs(y);
  return __clc_convert_long(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rte(short x)
{
  return __clc_convert_double(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtp(short x)
{
  double r = __clc_convert_double(x);
  short y = __clc_convert_short(r);
  return __clc_convert_long(y < x) ? r : __spirv_ocl_nextafter(r, (double)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtn(short x)
{
  double r = __clc_convert_double(x);
  short y = __clc_convert_short(r);
  return __clc_convert_long(y > x) ? r : __spirv_ocl_nextafter(r, (double)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtz(short2 x)
{
  double2 r = __clc_convert_double2(x);
  short2 y = __clc_convert_short2(r);
  ushort2 abs_x = __clc_abs(x);
  ushort2 abs_y = __clc_abs(y);
  return __clc_convert_long2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rte(short2 x)
{
  return __clc_convert_double2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtp(short2 x)
{
  double2 r = __clc_convert_double2(x);
  short2 y = __clc_convert_short2(r);
  return __clc_convert_long2(y < x) ? r : __spirv_ocl_nextafter(r, (double2)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtn(short2 x)
{
  double2 r = __clc_convert_double2(x);
  short2 y = __clc_convert_short2(r);
  return __clc_convert_long2(y > x) ? r : __spirv_ocl_nextafter(r, (double2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtz(short3 x)
{
  double3 r = __clc_convert_double3(x);
  short3 y = __clc_convert_short3(r);
  ushort3 abs_x = __clc_abs(x);
  ushort3 abs_y = __clc_abs(y);
  return __clc_convert_long3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rte(short3 x)
{
  return __clc_convert_double3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtp(short3 x)
{
  double3 r = __clc_convert_double3(x);
  short3 y = __clc_convert_short3(r);
  return __clc_convert_long3(y < x) ? r : __spirv_ocl_nextafter(r, (double3)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtn(short3 x)
{
  double3 r = __clc_convert_double3(x);
  short3 y = __clc_convert_short3(r);
  return __clc_convert_long3(y > x) ? r : __spirv_ocl_nextafter(r, (double3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtz(short4 x)
{
  double4 r = __clc_convert_double4(x);
  short4 y = __clc_convert_short4(r);
  ushort4 abs_x = __clc_abs(x);
  ushort4 abs_y = __clc_abs(y);
  return __clc_convert_long4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rte(short4 x)
{
  return __clc_convert_double4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtp(short4 x)
{
  double4 r = __clc_convert_double4(x);
  short4 y = __clc_convert_short4(r);
  return __clc_convert_long4(y < x) ? r : __spirv_ocl_nextafter(r, (double4)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtn(short4 x)
{
  double4 r = __clc_convert_double4(x);
  short4 y = __clc_convert_short4(r);
  return __clc_convert_long4(y > x) ? r : __spirv_ocl_nextafter(r, (double4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtz(short8 x)
{
  double8 r = __clc_convert_double8(x);
  short8 y = __clc_convert_short8(r);
  ushort8 abs_x = __clc_abs(x);
  ushort8 abs_y = __clc_abs(y);
  return __clc_convert_long8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rte(short8 x)
{
  return __clc_convert_double8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtp(short8 x)
{
  double8 r = __clc_convert_double8(x);
  short8 y = __clc_convert_short8(r);
  return __clc_convert_long8(y < x) ? r : __spirv_ocl_nextafter(r, (double8)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtn(short8 x)
{
  double8 r = __clc_convert_double8(x);
  short8 y = __clc_convert_short8(r);
  return __clc_convert_long8(y > x) ? r : __spirv_ocl_nextafter(r, (double8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtz(short16 x)
{
  double16 r = __clc_convert_double16(x);
  short16 y = __clc_convert_short16(r);
  ushort16 abs_x = __clc_abs(x);
  ushort16 abs_y = __clc_abs(y);
  return __clc_convert_long16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double16)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rte(short16 x)
{
  return __clc_convert_double16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtp(short16 x)
{
  double16 r = __clc_convert_double16(x);
  short16 y = __clc_convert_short16(r);
  return __clc_convert_long16(y < x) ? r : __spirv_ocl_nextafter(r, (double16)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtn(short16 x)
{
  double16 r = __clc_convert_double16(x);
  short16 y = __clc_convert_short16(r);
  return __clc_convert_long16(y > x) ? r : __spirv_ocl_nextafter(r, (double16)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtz(ushort x)
{
  half r = __clc_convert_half(x);
  ushort y = __clc_convert_ushort(r);
  ushort abs_x = __clc_abs(x);
  ushort abs_y = __clc_abs(y);
  return __clc_convert_short(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rte(ushort x)
{
  return __clc_convert_half(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtp(ushort x)
{
  half r = __clc_convert_half(x);
  ushort y = __clc_convert_ushort(r);
  return __clc_convert_short(y < x) ? r : __spirv_ocl_nextafter(r, (half)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtn(ushort x)
{
  half r = __clc_convert_half(x);
  ushort y = __clc_convert_ushort(r);
  return __clc_convert_short(y > x) ? r : __spirv_ocl_nextafter(r, (half)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtz(ushort2 x)
{
  half2 r = __clc_convert_half2(x);
  ushort2 y = __clc_convert_ushort2(r);
  ushort2 abs_x = __clc_abs(x);
  ushort2 abs_y = __clc_abs(y);
  return __clc_convert_short2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half2)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rte(ushort2 x)
{
  return __clc_convert_half2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtp(ushort2 x)
{
  half2 r = __clc_convert_half2(x);
  ushort2 y = __clc_convert_ushort2(r);
  return __clc_convert_short2(y < x) ? r : __spirv_ocl_nextafter(r, (half2)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtn(ushort2 x)
{
  half2 r = __clc_convert_half2(x);
  ushort2 y = __clc_convert_ushort2(r);
  return __clc_convert_short2(y > x) ? r : __spirv_ocl_nextafter(r, (half2)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtz(ushort3 x)
{
  half3 r = __clc_convert_half3(x);
  ushort3 y = __clc_convert_ushort3(r);
  ushort3 abs_x = __clc_abs(x);
  ushort3 abs_y = __clc_abs(y);
  return __clc_convert_short3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half3)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rte(ushort3 x)
{
  return __clc_convert_half3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtp(ushort3 x)
{
  half3 r = __clc_convert_half3(x);
  ushort3 y = __clc_convert_ushort3(r);
  return __clc_convert_short3(y < x) ? r : __spirv_ocl_nextafter(r, (half3)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtn(ushort3 x)
{
  half3 r = __clc_convert_half3(x);
  ushort3 y = __clc_convert_ushort3(r);
  return __clc_convert_short3(y > x) ? r : __spirv_ocl_nextafter(r, (half3)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtz(ushort4 x)
{
  half4 r = __clc_convert_half4(x);
  ushort4 y = __clc_convert_ushort4(r);
  ushort4 abs_x = __clc_abs(x);
  ushort4 abs_y = __clc_abs(y);
  return __clc_convert_short4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half4)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rte(ushort4 x)
{
  return __clc_convert_half4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtp(ushort4 x)
{
  half4 r = __clc_convert_half4(x);
  ushort4 y = __clc_convert_ushort4(r);
  return __clc_convert_short4(y < x) ? r : __spirv_ocl_nextafter(r, (half4)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtn(ushort4 x)
{
  half4 r = __clc_convert_half4(x);
  ushort4 y = __clc_convert_ushort4(r);
  return __clc_convert_short4(y > x) ? r : __spirv_ocl_nextafter(r, (half4)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtz(ushort8 x)
{
  half8 r = __clc_convert_half8(x);
  ushort8 y = __clc_convert_ushort8(r);
  ushort8 abs_x = __clc_abs(x);
  ushort8 abs_y = __clc_abs(y);
  return __clc_convert_short8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half8)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rte(ushort8 x)
{
  return __clc_convert_half8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtp(ushort8 x)
{
  half8 r = __clc_convert_half8(x);
  ushort8 y = __clc_convert_ushort8(r);
  return __clc_convert_short8(y < x) ? r : __spirv_ocl_nextafter(r, (half8)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtn(ushort8 x)
{
  half8 r = __clc_convert_half8(x);
  ushort8 y = __clc_convert_ushort8(r);
  return __clc_convert_short8(y > x) ? r : __spirv_ocl_nextafter(r, (half8)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtz(ushort16 x)
{
  half16 r = __clc_convert_half16(x);
  ushort16 y = __clc_convert_ushort16(r);
  ushort16 abs_x = __clc_abs(x);
  ushort16 abs_y = __clc_abs(y);
  return __clc_convert_short16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half16)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rte(ushort16 x)
{
  return __clc_convert_half16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtp(ushort16 x)
{
  half16 r = __clc_convert_half16(x);
  ushort16 y = __clc_convert_ushort16(r);
  return __clc_convert_short16(y < x) ? r : __spirv_ocl_nextafter(r, (half16)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtn(ushort16 x)
{
  half16 r = __clc_convert_half16(x);
  ushort16 y = __clc_convert_ushort16(r);
  return __clc_convert_short16(y > x) ? r : __spirv_ocl_nextafter(r, (half16)-INFINITY);
}
#endif
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtz(ushort x)
{
  float r = __clc_convert_float(x);
  ushort y = __clc_convert_ushort(r);
  ushort abs_x = __clc_abs(x);
  ushort abs_y = __clc_abs(y);
  return __clc_convert_int(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rte(ushort x)
{
  return __clc_convert_float(x);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtp(ushort x)
{
  float r = __clc_convert_float(x);
  ushort y = __clc_convert_ushort(r);
  return __clc_convert_int(y < x) ? r : __spirv_ocl_nextafter(r, (float)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtn(ushort x)
{
  float r = __clc_convert_float(x);
  ushort y = __clc_convert_ushort(r);
  return __clc_convert_int(y > x) ? r : __spirv_ocl_nextafter(r, (float)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtz(ushort2 x)
{
  float2 r = __clc_convert_float2(x);
  ushort2 y = __clc_convert_ushort2(r);
  ushort2 abs_x = __clc_abs(x);
  ushort2 abs_y = __clc_abs(y);
  return __clc_convert_int2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float2)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rte(ushort2 x)
{
  return __clc_convert_float2(x);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtp(ushort2 x)
{
  float2 r = __clc_convert_float2(x);
  ushort2 y = __clc_convert_ushort2(r);
  return __clc_convert_int2(y < x) ? r : __spirv_ocl_nextafter(r, (float2)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtn(ushort2 x)
{
  float2 r = __clc_convert_float2(x);
  ushort2 y = __clc_convert_ushort2(r);
  return __clc_convert_int2(y > x) ? r : __spirv_ocl_nextafter(r, (float2)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtz(ushort3 x)
{
  float3 r = __clc_convert_float3(x);
  ushort3 y = __clc_convert_ushort3(r);
  ushort3 abs_x = __clc_abs(x);
  ushort3 abs_y = __clc_abs(y);
  return __clc_convert_int3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float3)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rte(ushort3 x)
{
  return __clc_convert_float3(x);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtp(ushort3 x)
{
  float3 r = __clc_convert_float3(x);
  ushort3 y = __clc_convert_ushort3(r);
  return __clc_convert_int3(y < x) ? r : __spirv_ocl_nextafter(r, (float3)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtn(ushort3 x)
{
  float3 r = __clc_convert_float3(x);
  ushort3 y = __clc_convert_ushort3(r);
  return __clc_convert_int3(y > x) ? r : __spirv_ocl_nextafter(r, (float3)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtz(ushort4 x)
{
  float4 r = __clc_convert_float4(x);
  ushort4 y = __clc_convert_ushort4(r);
  ushort4 abs_x = __clc_abs(x);
  ushort4 abs_y = __clc_abs(y);
  return __clc_convert_int4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float4)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rte(ushort4 x)
{
  return __clc_convert_float4(x);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtp(ushort4 x)
{
  float4 r = __clc_convert_float4(x);
  ushort4 y = __clc_convert_ushort4(r);
  return __clc_convert_int4(y < x) ? r : __spirv_ocl_nextafter(r, (float4)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtn(ushort4 x)
{
  float4 r = __clc_convert_float4(x);
  ushort4 y = __clc_convert_ushort4(r);
  return __clc_convert_int4(y > x) ? r : __spirv_ocl_nextafter(r, (float4)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtz(ushort8 x)
{
  float8 r = __clc_convert_float8(x);
  ushort8 y = __clc_convert_ushort8(r);
  ushort8 abs_x = __clc_abs(x);
  ushort8 abs_y = __clc_abs(y);
  return __clc_convert_int8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float8)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rte(ushort8 x)
{
  return __clc_convert_float8(x);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtp(ushort8 x)
{
  float8 r = __clc_convert_float8(x);
  ushort8 y = __clc_convert_ushort8(r);
  return __clc_convert_int8(y < x) ? r : __spirv_ocl_nextafter(r, (float8)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtn(ushort8 x)
{
  float8 r = __clc_convert_float8(x);
  ushort8 y = __clc_convert_ushort8(r);
  return __clc_convert_int8(y > x) ? r : __spirv_ocl_nextafter(r, (float8)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtz(ushort16 x)
{
  float16 r = __clc_convert_float16(x);
  ushort16 y = __clc_convert_ushort16(r);
  ushort16 abs_x = __clc_abs(x);
  ushort16 abs_y = __clc_abs(y);
  return __clc_convert_int16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float16)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rte(ushort16 x)
{
  return __clc_convert_float16(x);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtp(ushort16 x)
{
  float16 r = __clc_convert_float16(x);
  ushort16 y = __clc_convert_ushort16(r);
  return __clc_convert_int16(y < x) ? r : __spirv_ocl_nextafter(r, (float16)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtn(ushort16 x)
{
  float16 r = __clc_convert_float16(x);
  ushort16 y = __clc_convert_ushort16(r);
  return __clc_convert_int16(y > x) ? r : __spirv_ocl_nextafter(r, (float16)-INFINITY);
}
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtz(ushort x)
{
  double r = __clc_convert_double(x);
  ushort y = __clc_convert_ushort(r);
  ushort abs_x = __clc_abs(x);
  ushort abs_y = __clc_abs(y);
  return __clc_convert_long(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rte(ushort x)
{
  return __clc_convert_double(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtp(ushort x)
{
  double r = __clc_convert_double(x);
  ushort y = __clc_convert_ushort(r);
  return __clc_convert_long(y < x) ? r : __spirv_ocl_nextafter(r, (double)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtn(ushort x)
{
  double r = __clc_convert_double(x);
  ushort y = __clc_convert_ushort(r);
  return __clc_convert_long(y > x) ? r : __spirv_ocl_nextafter(r, (double)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtz(ushort2 x)
{
  double2 r = __clc_convert_double2(x);
  ushort2 y = __clc_convert_ushort2(r);
  ushort2 abs_x = __clc_abs(x);
  ushort2 abs_y = __clc_abs(y);
  return __clc_convert_long2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rte(ushort2 x)
{
  return __clc_convert_double2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtp(ushort2 x)
{
  double2 r = __clc_convert_double2(x);
  ushort2 y = __clc_convert_ushort2(r);
  return __clc_convert_long2(y < x) ? r : __spirv_ocl_nextafter(r, (double2)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtn(ushort2 x)
{
  double2 r = __clc_convert_double2(x);
  ushort2 y = __clc_convert_ushort2(r);
  return __clc_convert_long2(y > x) ? r : __spirv_ocl_nextafter(r, (double2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtz(ushort3 x)
{
  double3 r = __clc_convert_double3(x);
  ushort3 y = __clc_convert_ushort3(r);
  ushort3 abs_x = __clc_abs(x);
  ushort3 abs_y = __clc_abs(y);
  return __clc_convert_long3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rte(ushort3 x)
{
  return __clc_convert_double3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtp(ushort3 x)
{
  double3 r = __clc_convert_double3(x);
  ushort3 y = __clc_convert_ushort3(r);
  return __clc_convert_long3(y < x) ? r : __spirv_ocl_nextafter(r, (double3)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtn(ushort3 x)
{
  double3 r = __clc_convert_double3(x);
  ushort3 y = __clc_convert_ushort3(r);
  return __clc_convert_long3(y > x) ? r : __spirv_ocl_nextafter(r, (double3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtz(ushort4 x)
{
  double4 r = __clc_convert_double4(x);
  ushort4 y = __clc_convert_ushort4(r);
  ushort4 abs_x = __clc_abs(x);
  ushort4 abs_y = __clc_abs(y);
  return __clc_convert_long4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rte(ushort4 x)
{
  return __clc_convert_double4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtp(ushort4 x)
{
  double4 r = __clc_convert_double4(x);
  ushort4 y = __clc_convert_ushort4(r);
  return __clc_convert_long4(y < x) ? r : __spirv_ocl_nextafter(r, (double4)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtn(ushort4 x)
{
  double4 r = __clc_convert_double4(x);
  ushort4 y = __clc_convert_ushort4(r);
  return __clc_convert_long4(y > x) ? r : __spirv_ocl_nextafter(r, (double4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtz(ushort8 x)
{
  double8 r = __clc_convert_double8(x);
  ushort8 y = __clc_convert_ushort8(r);
  ushort8 abs_x = __clc_abs(x);
  ushort8 abs_y = __clc_abs(y);
  return __clc_convert_long8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rte(ushort8 x)
{
  return __clc_convert_double8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtp(ushort8 x)
{
  double8 r = __clc_convert_double8(x);
  ushort8 y = __clc_convert_ushort8(r);
  return __clc_convert_long8(y < x) ? r : __spirv_ocl_nextafter(r, (double8)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtn(ushort8 x)
{
  double8 r = __clc_convert_double8(x);
  ushort8 y = __clc_convert_ushort8(r);
  return __clc_convert_long8(y > x) ? r : __spirv_ocl_nextafter(r, (double8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtz(ushort16 x)
{
  double16 r = __clc_convert_double16(x);
  ushort16 y = __clc_convert_ushort16(r);
  ushort16 abs_x = __clc_abs(x);
  ushort16 abs_y = __clc_abs(y);
  return __clc_convert_long16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double16)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rte(ushort16 x)
{
  return __clc_convert_double16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtp(ushort16 x)
{
  double16 r = __clc_convert_double16(x);
  ushort16 y = __clc_convert_ushort16(r);
  return __clc_convert_long16(y < x) ? r : __spirv_ocl_nextafter(r, (double16)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtn(ushort16 x)
{
  double16 r = __clc_convert_double16(x);
  ushort16 y = __clc_convert_ushort16(r);
  return __clc_convert_long16(y > x) ? r : __spirv_ocl_nextafter(r, (double16)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtz(int x)
{
  half r = __clc_convert_half(x);
  int y = __clc_convert_int(r);
  uint abs_x = __clc_abs(x);
  uint abs_y = __clc_abs(y);
  return __clc_convert_short(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rte(int x)
{
  return __clc_convert_half(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtp(int x)
{
  half r = __clc_convert_half(x);
  int y = __clc_convert_int(r);
  return __clc_convert_short(y < x) ? r : __spirv_ocl_nextafter(r, (half)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtn(int x)
{
  half r = __clc_convert_half(x);
  int y = __clc_convert_int(r);
  return __clc_convert_short(y > x) ? r : __spirv_ocl_nextafter(r, (half)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtz(int2 x)
{
  half2 r = __clc_convert_half2(x);
  int2 y = __clc_convert_int2(r);
  uint2 abs_x = __clc_abs(x);
  uint2 abs_y = __clc_abs(y);
  return __clc_convert_short2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half2)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rte(int2 x)
{
  return __clc_convert_half2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtp(int2 x)
{
  half2 r = __clc_convert_half2(x);
  int2 y = __clc_convert_int2(r);
  return __clc_convert_short2(y < x) ? r : __spirv_ocl_nextafter(r, (half2)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtn(int2 x)
{
  half2 r = __clc_convert_half2(x);
  int2 y = __clc_convert_int2(r);
  return __clc_convert_short2(y > x) ? r : __spirv_ocl_nextafter(r, (half2)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtz(int3 x)
{
  half3 r = __clc_convert_half3(x);
  int3 y = __clc_convert_int3(r);
  uint3 abs_x = __clc_abs(x);
  uint3 abs_y = __clc_abs(y);
  return __clc_convert_short3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half3)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rte(int3 x)
{
  return __clc_convert_half3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtp(int3 x)
{
  half3 r = __clc_convert_half3(x);
  int3 y = __clc_convert_int3(r);
  return __clc_convert_short3(y < x) ? r : __spirv_ocl_nextafter(r, (half3)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtn(int3 x)
{
  half3 r = __clc_convert_half3(x);
  int3 y = __clc_convert_int3(r);
  return __clc_convert_short3(y > x) ? r : __spirv_ocl_nextafter(r, (half3)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtz(int4 x)
{
  half4 r = __clc_convert_half4(x);
  int4 y = __clc_convert_int4(r);
  uint4 abs_x = __clc_abs(x);
  uint4 abs_y = __clc_abs(y);
  return __clc_convert_short4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half4)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rte(int4 x)
{
  return __clc_convert_half4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtp(int4 x)
{
  half4 r = __clc_convert_half4(x);
  int4 y = __clc_convert_int4(r);
  return __clc_convert_short4(y < x) ? r : __spirv_ocl_nextafter(r, (half4)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtn(int4 x)
{
  half4 r = __clc_convert_half4(x);
  int4 y = __clc_convert_int4(r);
  return __clc_convert_short4(y > x) ? r : __spirv_ocl_nextafter(r, (half4)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtz(int8 x)
{
  half8 r = __clc_convert_half8(x);
  int8 y = __clc_convert_int8(r);
  uint8 abs_x = __clc_abs(x);
  uint8 abs_y = __clc_abs(y);
  return __clc_convert_short8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half8)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rte(int8 x)
{
  return __clc_convert_half8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtp(int8 x)
{
  half8 r = __clc_convert_half8(x);
  int8 y = __clc_convert_int8(r);
  return __clc_convert_short8(y < x) ? r : __spirv_ocl_nextafter(r, (half8)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtn(int8 x)
{
  half8 r = __clc_convert_half8(x);
  int8 y = __clc_convert_int8(r);
  return __clc_convert_short8(y > x) ? r : __spirv_ocl_nextafter(r, (half8)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtz(int16 x)
{
  half16 r = __clc_convert_half16(x);
  int16 y = __clc_convert_int16(r);
  uint16 abs_x = __clc_abs(x);
  uint16 abs_y = __clc_abs(y);
  return __clc_convert_short16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half16)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rte(int16 x)
{
  return __clc_convert_half16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtp(int16 x)
{
  half16 r = __clc_convert_half16(x);
  int16 y = __clc_convert_int16(r);
  return __clc_convert_short16(y < x) ? r : __spirv_ocl_nextafter(r, (half16)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtn(int16 x)
{
  half16 r = __clc_convert_half16(x);
  int16 y = __clc_convert_int16(r);
  return __clc_convert_short16(y > x) ? r : __spirv_ocl_nextafter(r, (half16)-INFINITY);
}
#endif
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtz(int x)
{
  float r = __clc_convert_float(x);
  int y = __clc_convert_int(r);
  uint abs_x = __clc_abs(x);
  uint abs_y = __clc_abs(y);
  return __clc_convert_int(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rte(int x)
{
  return __clc_convert_float(x);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtp(int x)
{
  float r = __clc_convert_float(x);
  int y = __clc_convert_int(r);
  return __clc_convert_int(y < x) ? r : __spirv_ocl_nextafter(r, (float)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtn(int x)
{
  float r = __clc_convert_float(x);
  int y = __clc_convert_int(r);
  return __clc_convert_int(y > x) ? r : __spirv_ocl_nextafter(r, (float)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtz(int2 x)
{
  float2 r = __clc_convert_float2(x);
  int2 y = __clc_convert_int2(r);
  uint2 abs_x = __clc_abs(x);
  uint2 abs_y = __clc_abs(y);
  return __clc_convert_int2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float2)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rte(int2 x)
{
  return __clc_convert_float2(x);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtp(int2 x)
{
  float2 r = __clc_convert_float2(x);
  int2 y = __clc_convert_int2(r);
  return __clc_convert_int2(y < x) ? r : __spirv_ocl_nextafter(r, (float2)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtn(int2 x)
{
  float2 r = __clc_convert_float2(x);
  int2 y = __clc_convert_int2(r);
  return __clc_convert_int2(y > x) ? r : __spirv_ocl_nextafter(r, (float2)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtz(int3 x)
{
  float3 r = __clc_convert_float3(x);
  int3 y = __clc_convert_int3(r);
  uint3 abs_x = __clc_abs(x);
  uint3 abs_y = __clc_abs(y);
  return __clc_convert_int3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float3)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rte(int3 x)
{
  return __clc_convert_float3(x);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtp(int3 x)
{
  float3 r = __clc_convert_float3(x);
  int3 y = __clc_convert_int3(r);
  return __clc_convert_int3(y < x) ? r : __spirv_ocl_nextafter(r, (float3)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtn(int3 x)
{
  float3 r = __clc_convert_float3(x);
  int3 y = __clc_convert_int3(r);
  return __clc_convert_int3(y > x) ? r : __spirv_ocl_nextafter(r, (float3)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtz(int4 x)
{
  float4 r = __clc_convert_float4(x);
  int4 y = __clc_convert_int4(r);
  uint4 abs_x = __clc_abs(x);
  uint4 abs_y = __clc_abs(y);
  return __clc_convert_int4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float4)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rte(int4 x)
{
  return __clc_convert_float4(x);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtp(int4 x)
{
  float4 r = __clc_convert_float4(x);
  int4 y = __clc_convert_int4(r);
  return __clc_convert_int4(y < x) ? r : __spirv_ocl_nextafter(r, (float4)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtn(int4 x)
{
  float4 r = __clc_convert_float4(x);
  int4 y = __clc_convert_int4(r);
  return __clc_convert_int4(y > x) ? r : __spirv_ocl_nextafter(r, (float4)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtz(int8 x)
{
  float8 r = __clc_convert_float8(x);
  int8 y = __clc_convert_int8(r);
  uint8 abs_x = __clc_abs(x);
  uint8 abs_y = __clc_abs(y);
  return __clc_convert_int8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float8)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rte(int8 x)
{
  return __clc_convert_float8(x);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtp(int8 x)
{
  float8 r = __clc_convert_float8(x);
  int8 y = __clc_convert_int8(r);
  return __clc_convert_int8(y < x) ? r : __spirv_ocl_nextafter(r, (float8)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtn(int8 x)
{
  float8 r = __clc_convert_float8(x);
  int8 y = __clc_convert_int8(r);
  return __clc_convert_int8(y > x) ? r : __spirv_ocl_nextafter(r, (float8)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtz(int16 x)
{
  float16 r = __clc_convert_float16(x);
  int16 y = __clc_convert_int16(r);
  uint16 abs_x = __clc_abs(x);
  uint16 abs_y = __clc_abs(y);
  return __clc_convert_int16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float16)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rte(int16 x)
{
  return __clc_convert_float16(x);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtp(int16 x)
{
  float16 r = __clc_convert_float16(x);
  int16 y = __clc_convert_int16(r);
  return __clc_convert_int16(y < x) ? r : __spirv_ocl_nextafter(r, (float16)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtn(int16 x)
{
  float16 r = __clc_convert_float16(x);
  int16 y = __clc_convert_int16(r);
  return __clc_convert_int16(y > x) ? r : __spirv_ocl_nextafter(r, (float16)-INFINITY);
}
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtz(int x)
{
  double r = __clc_convert_double(x);
  int y = __clc_convert_int(r);
  uint abs_x = __clc_abs(x);
  uint abs_y = __clc_abs(y);
  return __clc_convert_long(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rte(int x)
{
  return __clc_convert_double(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtp(int x)
{
  double r = __clc_convert_double(x);
  int y = __clc_convert_int(r);
  return __clc_convert_long(y < x) ? r : __spirv_ocl_nextafter(r, (double)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtn(int x)
{
  double r = __clc_convert_double(x);
  int y = __clc_convert_int(r);
  return __clc_convert_long(y > x) ? r : __spirv_ocl_nextafter(r, (double)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtz(int2 x)
{
  double2 r = __clc_convert_double2(x);
  int2 y = __clc_convert_int2(r);
  uint2 abs_x = __clc_abs(x);
  uint2 abs_y = __clc_abs(y);
  return __clc_convert_long2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rte(int2 x)
{
  return __clc_convert_double2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtp(int2 x)
{
  double2 r = __clc_convert_double2(x);
  int2 y = __clc_convert_int2(r);
  return __clc_convert_long2(y < x) ? r : __spirv_ocl_nextafter(r, (double2)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtn(int2 x)
{
  double2 r = __clc_convert_double2(x);
  int2 y = __clc_convert_int2(r);
  return __clc_convert_long2(y > x) ? r : __spirv_ocl_nextafter(r, (double2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtz(int3 x)
{
  double3 r = __clc_convert_double3(x);
  int3 y = __clc_convert_int3(r);
  uint3 abs_x = __clc_abs(x);
  uint3 abs_y = __clc_abs(y);
  return __clc_convert_long3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rte(int3 x)
{
  return __clc_convert_double3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtp(int3 x)
{
  double3 r = __clc_convert_double3(x);
  int3 y = __clc_convert_int3(r);
  return __clc_convert_long3(y < x) ? r : __spirv_ocl_nextafter(r, (double3)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtn(int3 x)
{
  double3 r = __clc_convert_double3(x);
  int3 y = __clc_convert_int3(r);
  return __clc_convert_long3(y > x) ? r : __spirv_ocl_nextafter(r, (double3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtz(int4 x)
{
  double4 r = __clc_convert_double4(x);
  int4 y = __clc_convert_int4(r);
  uint4 abs_x = __clc_abs(x);
  uint4 abs_y = __clc_abs(y);
  return __clc_convert_long4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rte(int4 x)
{
  return __clc_convert_double4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtp(int4 x)
{
  double4 r = __clc_convert_double4(x);
  int4 y = __clc_convert_int4(r);
  return __clc_convert_long4(y < x) ? r : __spirv_ocl_nextafter(r, (double4)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtn(int4 x)
{
  double4 r = __clc_convert_double4(x);
  int4 y = __clc_convert_int4(r);
  return __clc_convert_long4(y > x) ? r : __spirv_ocl_nextafter(r, (double4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtz(int8 x)
{
  double8 r = __clc_convert_double8(x);
  int8 y = __clc_convert_int8(r);
  uint8 abs_x = __clc_abs(x);
  uint8 abs_y = __clc_abs(y);
  return __clc_convert_long8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rte(int8 x)
{
  return __clc_convert_double8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtp(int8 x)
{
  double8 r = __clc_convert_double8(x);
  int8 y = __clc_convert_int8(r);
  return __clc_convert_long8(y < x) ? r : __spirv_ocl_nextafter(r, (double8)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtn(int8 x)
{
  double8 r = __clc_convert_double8(x);
  int8 y = __clc_convert_int8(r);
  return __clc_convert_long8(y > x) ? r : __spirv_ocl_nextafter(r, (double8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtz(int16 x)
{
  double16 r = __clc_convert_double16(x);
  int16 y = __clc_convert_int16(r);
  uint16 abs_x = __clc_abs(x);
  uint16 abs_y = __clc_abs(y);
  return __clc_convert_long16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double16)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rte(int16 x)
{
  return __clc_convert_double16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtp(int16 x)
{
  double16 r = __clc_convert_double16(x);
  int16 y = __clc_convert_int16(r);
  return __clc_convert_long16(y < x) ? r : __spirv_ocl_nextafter(r, (double16)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtn(int16 x)
{
  double16 r = __clc_convert_double16(x);
  int16 y = __clc_convert_int16(r);
  return __clc_convert_long16(y > x) ? r : __spirv_ocl_nextafter(r, (double16)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtz(uint x)
{
  half r = __clc_convert_half(x);
  uint y = __clc_convert_uint(r);
  uint abs_x = __clc_abs(x);
  uint abs_y = __clc_abs(y);
  return __clc_convert_short(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rte(uint x)
{
  return __clc_convert_half(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtp(uint x)
{
  half r = __clc_convert_half(x);
  uint y = __clc_convert_uint(r);
  return __clc_convert_short(y < x) ? r : __spirv_ocl_nextafter(r, (half)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtn(uint x)
{
  half r = __clc_convert_half(x);
  uint y = __clc_convert_uint(r);
  return __clc_convert_short(y > x) ? r : __spirv_ocl_nextafter(r, (half)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtz(uint2 x)
{
  half2 r = __clc_convert_half2(x);
  uint2 y = __clc_convert_uint2(r);
  uint2 abs_x = __clc_abs(x);
  uint2 abs_y = __clc_abs(y);
  return __clc_convert_short2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half2)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rte(uint2 x)
{
  return __clc_convert_half2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtp(uint2 x)
{
  half2 r = __clc_convert_half2(x);
  uint2 y = __clc_convert_uint2(r);
  return __clc_convert_short2(y < x) ? r : __spirv_ocl_nextafter(r, (half2)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtn(uint2 x)
{
  half2 r = __clc_convert_half2(x);
  uint2 y = __clc_convert_uint2(r);
  return __clc_convert_short2(y > x) ? r : __spirv_ocl_nextafter(r, (half2)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtz(uint3 x)
{
  half3 r = __clc_convert_half3(x);
  uint3 y = __clc_convert_uint3(r);
  uint3 abs_x = __clc_abs(x);
  uint3 abs_y = __clc_abs(y);
  return __clc_convert_short3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half3)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rte(uint3 x)
{
  return __clc_convert_half3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtp(uint3 x)
{
  half3 r = __clc_convert_half3(x);
  uint3 y = __clc_convert_uint3(r);
  return __clc_convert_short3(y < x) ? r : __spirv_ocl_nextafter(r, (half3)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtn(uint3 x)
{
  half3 r = __clc_convert_half3(x);
  uint3 y = __clc_convert_uint3(r);
  return __clc_convert_short3(y > x) ? r : __spirv_ocl_nextafter(r, (half3)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtz(uint4 x)
{
  half4 r = __clc_convert_half4(x);
  uint4 y = __clc_convert_uint4(r);
  uint4 abs_x = __clc_abs(x);
  uint4 abs_y = __clc_abs(y);
  return __clc_convert_short4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half4)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rte(uint4 x)
{
  return __clc_convert_half4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtp(uint4 x)
{
  half4 r = __clc_convert_half4(x);
  uint4 y = __clc_convert_uint4(r);
  return __clc_convert_short4(y < x) ? r : __spirv_ocl_nextafter(r, (half4)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtn(uint4 x)
{
  half4 r = __clc_convert_half4(x);
  uint4 y = __clc_convert_uint4(r);
  return __clc_convert_short4(y > x) ? r : __spirv_ocl_nextafter(r, (half4)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtz(uint8 x)
{
  half8 r = __clc_convert_half8(x);
  uint8 y = __clc_convert_uint8(r);
  uint8 abs_x = __clc_abs(x);
  uint8 abs_y = __clc_abs(y);
  return __clc_convert_short8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half8)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rte(uint8 x)
{
  return __clc_convert_half8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtp(uint8 x)
{
  half8 r = __clc_convert_half8(x);
  uint8 y = __clc_convert_uint8(r);
  return __clc_convert_short8(y < x) ? r : __spirv_ocl_nextafter(r, (half8)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtn(uint8 x)
{
  half8 r = __clc_convert_half8(x);
  uint8 y = __clc_convert_uint8(r);
  return __clc_convert_short8(y > x) ? r : __spirv_ocl_nextafter(r, (half8)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtz(uint16 x)
{
  half16 r = __clc_convert_half16(x);
  uint16 y = __clc_convert_uint16(r);
  uint16 abs_x = __clc_abs(x);
  uint16 abs_y = __clc_abs(y);
  return __clc_convert_short16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half16)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rte(uint16 x)
{
  return __clc_convert_half16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtp(uint16 x)
{
  half16 r = __clc_convert_half16(x);
  uint16 y = __clc_convert_uint16(r);
  return __clc_convert_short16(y < x) ? r : __spirv_ocl_nextafter(r, (half16)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtn(uint16 x)
{
  half16 r = __clc_convert_half16(x);
  uint16 y = __clc_convert_uint16(r);
  return __clc_convert_short16(y > x) ? r : __spirv_ocl_nextafter(r, (half16)-INFINITY);
}
#endif
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtz(uint x)
{
  float r = __clc_convert_float(x);
  uint y = __clc_convert_uint(r);
  uint abs_x = __clc_abs(x);
  uint abs_y = __clc_abs(y);
  return __clc_convert_int(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rte(uint x)
{
  return __clc_convert_float(x);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtp(uint x)
{
  float r = __clc_convert_float(x);
  uint y = __clc_convert_uint(r);
  return __clc_convert_int(y < x) ? r : __spirv_ocl_nextafter(r, (float)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtn(uint x)
{
  float r = __clc_convert_float(x);
  uint y = __clc_convert_uint(r);
  return __clc_convert_int(y > x) ? r : __spirv_ocl_nextafter(r, (float)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtz(uint2 x)
{
  float2 r = __clc_convert_float2(x);
  uint2 y = __clc_convert_uint2(r);
  uint2 abs_x = __clc_abs(x);
  uint2 abs_y = __clc_abs(y);
  return __clc_convert_int2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float2)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rte(uint2 x)
{
  return __clc_convert_float2(x);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtp(uint2 x)
{
  float2 r = __clc_convert_float2(x);
  uint2 y = __clc_convert_uint2(r);
  return __clc_convert_int2(y < x) ? r : __spirv_ocl_nextafter(r, (float2)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtn(uint2 x)
{
  float2 r = __clc_convert_float2(x);
  uint2 y = __clc_convert_uint2(r);
  return __clc_convert_int2(y > x) ? r : __spirv_ocl_nextafter(r, (float2)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtz(uint3 x)
{
  float3 r = __clc_convert_float3(x);
  uint3 y = __clc_convert_uint3(r);
  uint3 abs_x = __clc_abs(x);
  uint3 abs_y = __clc_abs(y);
  return __clc_convert_int3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float3)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rte(uint3 x)
{
  return __clc_convert_float3(x);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtp(uint3 x)
{
  float3 r = __clc_convert_float3(x);
  uint3 y = __clc_convert_uint3(r);
  return __clc_convert_int3(y < x) ? r : __spirv_ocl_nextafter(r, (float3)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtn(uint3 x)
{
  float3 r = __clc_convert_float3(x);
  uint3 y = __clc_convert_uint3(r);
  return __clc_convert_int3(y > x) ? r : __spirv_ocl_nextafter(r, (float3)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtz(uint4 x)
{
  float4 r = __clc_convert_float4(x);
  uint4 y = __clc_convert_uint4(r);
  uint4 abs_x = __clc_abs(x);
  uint4 abs_y = __clc_abs(y);
  return __clc_convert_int4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float4)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rte(uint4 x)
{
  return __clc_convert_float4(x);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtp(uint4 x)
{
  float4 r = __clc_convert_float4(x);
  uint4 y = __clc_convert_uint4(r);
  return __clc_convert_int4(y < x) ? r : __spirv_ocl_nextafter(r, (float4)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtn(uint4 x)
{
  float4 r = __clc_convert_float4(x);
  uint4 y = __clc_convert_uint4(r);
  return __clc_convert_int4(y > x) ? r : __spirv_ocl_nextafter(r, (float4)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtz(uint8 x)
{
  float8 r = __clc_convert_float8(x);
  uint8 y = __clc_convert_uint8(r);
  uint8 abs_x = __clc_abs(x);
  uint8 abs_y = __clc_abs(y);
  return __clc_convert_int8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float8)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rte(uint8 x)
{
  return __clc_convert_float8(x);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtp(uint8 x)
{
  float8 r = __clc_convert_float8(x);
  uint8 y = __clc_convert_uint8(r);
  return __clc_convert_int8(y < x) ? r : __spirv_ocl_nextafter(r, (float8)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtn(uint8 x)
{
  float8 r = __clc_convert_float8(x);
  uint8 y = __clc_convert_uint8(r);
  return __clc_convert_int8(y > x) ? r : __spirv_ocl_nextafter(r, (float8)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtz(uint16 x)
{
  float16 r = __clc_convert_float16(x);
  uint16 y = __clc_convert_uint16(r);
  uint16 abs_x = __clc_abs(x);
  uint16 abs_y = __clc_abs(y);
  return __clc_convert_int16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float16)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rte(uint16 x)
{
  return __clc_convert_float16(x);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtp(uint16 x)
{
  float16 r = __clc_convert_float16(x);
  uint16 y = __clc_convert_uint16(r);
  return __clc_convert_int16(y < x) ? r : __spirv_ocl_nextafter(r, (float16)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtn(uint16 x)
{
  float16 r = __clc_convert_float16(x);
  uint16 y = __clc_convert_uint16(r);
  return __clc_convert_int16(y > x) ? r : __spirv_ocl_nextafter(r, (float16)-INFINITY);
}
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtz(uint x)
{
  double r = __clc_convert_double(x);
  uint y = __clc_convert_uint(r);
  uint abs_x = __clc_abs(x);
  uint abs_y = __clc_abs(y);
  return __clc_convert_long(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rte(uint x)
{
  return __clc_convert_double(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtp(uint x)
{
  double r = __clc_convert_double(x);
  uint y = __clc_convert_uint(r);
  return __clc_convert_long(y < x) ? r : __spirv_ocl_nextafter(r, (double)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtn(uint x)
{
  double r = __clc_convert_double(x);
  uint y = __clc_convert_uint(r);
  return __clc_convert_long(y > x) ? r : __spirv_ocl_nextafter(r, (double)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtz(uint2 x)
{
  double2 r = __clc_convert_double2(x);
  uint2 y = __clc_convert_uint2(r);
  uint2 abs_x = __clc_abs(x);
  uint2 abs_y = __clc_abs(y);
  return __clc_convert_long2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rte(uint2 x)
{
  return __clc_convert_double2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtp(uint2 x)
{
  double2 r = __clc_convert_double2(x);
  uint2 y = __clc_convert_uint2(r);
  return __clc_convert_long2(y < x) ? r : __spirv_ocl_nextafter(r, (double2)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtn(uint2 x)
{
  double2 r = __clc_convert_double2(x);
  uint2 y = __clc_convert_uint2(r);
  return __clc_convert_long2(y > x) ? r : __spirv_ocl_nextafter(r, (double2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtz(uint3 x)
{
  double3 r = __clc_convert_double3(x);
  uint3 y = __clc_convert_uint3(r);
  uint3 abs_x = __clc_abs(x);
  uint3 abs_y = __clc_abs(y);
  return __clc_convert_long3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rte(uint3 x)
{
  return __clc_convert_double3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtp(uint3 x)
{
  double3 r = __clc_convert_double3(x);
  uint3 y = __clc_convert_uint3(r);
  return __clc_convert_long3(y < x) ? r : __spirv_ocl_nextafter(r, (double3)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtn(uint3 x)
{
  double3 r = __clc_convert_double3(x);
  uint3 y = __clc_convert_uint3(r);
  return __clc_convert_long3(y > x) ? r : __spirv_ocl_nextafter(r, (double3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtz(uint4 x)
{
  double4 r = __clc_convert_double4(x);
  uint4 y = __clc_convert_uint4(r);
  uint4 abs_x = __clc_abs(x);
  uint4 abs_y = __clc_abs(y);
  return __clc_convert_long4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rte(uint4 x)
{
  return __clc_convert_double4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtp(uint4 x)
{
  double4 r = __clc_convert_double4(x);
  uint4 y = __clc_convert_uint4(r);
  return __clc_convert_long4(y < x) ? r : __spirv_ocl_nextafter(r, (double4)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtn(uint4 x)
{
  double4 r = __clc_convert_double4(x);
  uint4 y = __clc_convert_uint4(r);
  return __clc_convert_long4(y > x) ? r : __spirv_ocl_nextafter(r, (double4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtz(uint8 x)
{
  double8 r = __clc_convert_double8(x);
  uint8 y = __clc_convert_uint8(r);
  uint8 abs_x = __clc_abs(x);
  uint8 abs_y = __clc_abs(y);
  return __clc_convert_long8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rte(uint8 x)
{
  return __clc_convert_double8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtp(uint8 x)
{
  double8 r = __clc_convert_double8(x);
  uint8 y = __clc_convert_uint8(r);
  return __clc_convert_long8(y < x) ? r : __spirv_ocl_nextafter(r, (double8)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtn(uint8 x)
{
  double8 r = __clc_convert_double8(x);
  uint8 y = __clc_convert_uint8(r);
  return __clc_convert_long8(y > x) ? r : __spirv_ocl_nextafter(r, (double8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtz(uint16 x)
{
  double16 r = __clc_convert_double16(x);
  uint16 y = __clc_convert_uint16(r);
  uint16 abs_x = __clc_abs(x);
  uint16 abs_y = __clc_abs(y);
  return __clc_convert_long16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double16)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rte(uint16 x)
{
  return __clc_convert_double16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtp(uint16 x)
{
  double16 r = __clc_convert_double16(x);
  uint16 y = __clc_convert_uint16(r);
  return __clc_convert_long16(y < x) ? r : __spirv_ocl_nextafter(r, (double16)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtn(uint16 x)
{
  double16 r = __clc_convert_double16(x);
  uint16 y = __clc_convert_uint16(r);
  return __clc_convert_long16(y > x) ? r : __spirv_ocl_nextafter(r, (double16)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtz(long x)
{
  half r = __clc_convert_half(x);
  long y = __clc_convert_long(r);
  ulong abs_x = __clc_abs(x);
  ulong abs_y = __clc_abs(y);
  return __clc_convert_short(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rte(long x)
{
  return __clc_convert_half(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtp(long x)
{
  half r = __clc_convert_half(x);
  long y = __clc_convert_long(r);
  return __clc_convert_short(y < x) ? r : __spirv_ocl_nextafter(r, (half)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtn(long x)
{
  half r = __clc_convert_half(x);
  long y = __clc_convert_long(r);
  return __clc_convert_short(y > x) ? r : __spirv_ocl_nextafter(r, (half)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtz(long2 x)
{
  half2 r = __clc_convert_half2(x);
  long2 y = __clc_convert_long2(r);
  ulong2 abs_x = __clc_abs(x);
  ulong2 abs_y = __clc_abs(y);
  return __clc_convert_short2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half2)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rte(long2 x)
{
  return __clc_convert_half2(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtp(long2 x)
{
  half2 r = __clc_convert_half2(x);
  long2 y = __clc_convert_long2(r);
  return __clc_convert_short2(y < x) ? r : __spirv_ocl_nextafter(r, (half2)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtn(long2 x)
{
  half2 r = __clc_convert_half2(x);
  long2 y = __clc_convert_long2(r);
  return __clc_convert_short2(y > x) ? r : __spirv_ocl_nextafter(r, (half2)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtz(long3 x)
{
  half3 r = __clc_convert_half3(x);
  long3 y = __clc_convert_long3(r);
  ulong3 abs_x = __clc_abs(x);
  ulong3 abs_y = __clc_abs(y);
  return __clc_convert_short3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half3)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rte(long3 x)
{
  return __clc_convert_half3(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtp(long3 x)
{
  half3 r = __clc_convert_half3(x);
  long3 y = __clc_convert_long3(r);
  return __clc_convert_short3(y < x) ? r : __spirv_ocl_nextafter(r, (half3)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtn(long3 x)
{
  half3 r = __clc_convert_half3(x);
  long3 y = __clc_convert_long3(r);
  return __clc_convert_short3(y > x) ? r : __spirv_ocl_nextafter(r, (half3)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtz(long4 x)
{
  half4 r = __clc_convert_half4(x);
  long4 y = __clc_convert_long4(r);
  ulong4 abs_x = __clc_abs(x);
  ulong4 abs_y = __clc_abs(y);
  return __clc_convert_short4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half4)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rte(long4 x)
{
  return __clc_convert_half4(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtp(long4 x)
{
  half4 r = __clc_convert_half4(x);
  long4 y = __clc_convert_long4(r);
  return __clc_convert_short4(y < x) ? r : __spirv_ocl_nextafter(r, (half4)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtn(long4 x)
{
  half4 r = __clc_convert_half4(x);
  long4 y = __clc_convert_long4(r);
  return __clc_convert_short4(y > x) ? r : __spirv_ocl_nextafter(r, (half4)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtz(long8 x)
{
  half8 r = __clc_convert_half8(x);
  long8 y = __clc_convert_long8(r);
  ulong8 abs_x = __clc_abs(x);
  ulong8 abs_y = __clc_abs(y);
  return __clc_convert_short8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half8)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rte(long8 x)
{
  return __clc_convert_half8(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtp(long8 x)
{
  half8 r = __clc_convert_half8(x);
  long8 y = __clc_convert_long8(r);
  return __clc_convert_short8(y < x) ? r : __spirv_ocl_nextafter(r, (half8)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtn(long8 x)
{
  half8 r = __clc_convert_half8(x);
  long8 y = __clc_convert_long8(r);
  return __clc_convert_short8(y > x) ? r : __spirv_ocl_nextafter(r, (half8)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtz(long16 x)
{
  half16 r = __clc_convert_half16(x);
  long16 y = __clc_convert_long16(r);
  ulong16 abs_x = __clc_abs(x);
  ulong16 abs_y = __clc_abs(y);
  return __clc_convert_short16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half16)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rte(long16 x)
{
  return __clc_convert_half16(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtp(long16 x)
{
  half16 r = __clc_convert_half16(x);
  long16 y = __clc_convert_long16(r);
  return __clc_convert_short16(y < x) ? r : __spirv_ocl_nextafter(r, (half16)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtn(long16 x)
{
  half16 r = __clc_convert_half16(x);
  long16 y = __clc_convert_long16(r);
  return __clc_convert_short16(y > x) ? r : __spirv_ocl_nextafter(r, (half16)-INFINITY);
}
#endif
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtz(long x)
{
  float r = __clc_convert_float(x);
  long y = __clc_convert_long(r);
  ulong abs_x = __clc_abs(x);
  ulong abs_y = __clc_abs(y);
  return __clc_convert_int(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float)-INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rte(long x)
{
  return __clc_convert_float(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtp(long x)
{
  float r = __clc_convert_float(x);
  long y = __clc_convert_long(r);
  return __clc_convert_int(y < x) ? r : __spirv_ocl_nextafter(r, (float)INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtn(long x)
{
  float r = __clc_convert_float(x);
  long y = __clc_convert_long(r);
  return __clc_convert_int(y > x) ? r : __spirv_ocl_nextafter(r, (float)-INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtz(long2 x)
{
  float2 r = __clc_convert_float2(x);
  long2 y = __clc_convert_long2(r);
  ulong2 abs_x = __clc_abs(x);
  ulong2 abs_y = __clc_abs(y);
  return __clc_convert_int2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float2)-INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rte(long2 x)
{
  return __clc_convert_float2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtp(long2 x)
{
  float2 r = __clc_convert_float2(x);
  long2 y = __clc_convert_long2(r);
  return __clc_convert_int2(y < x) ? r : __spirv_ocl_nextafter(r, (float2)INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtn(long2 x)
{
  float2 r = __clc_convert_float2(x);
  long2 y = __clc_convert_long2(r);
  return __clc_convert_int2(y > x) ? r : __spirv_ocl_nextafter(r, (float2)-INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtz(long3 x)
{
  float3 r = __clc_convert_float3(x);
  long3 y = __clc_convert_long3(r);
  ulong3 abs_x = __clc_abs(x);
  ulong3 abs_y = __clc_abs(y);
  return __clc_convert_int3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float3)-INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rte(long3 x)
{
  return __clc_convert_float3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtp(long3 x)
{
  float3 r = __clc_convert_float3(x);
  long3 y = __clc_convert_long3(r);
  return __clc_convert_int3(y < x) ? r : __spirv_ocl_nextafter(r, (float3)INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtn(long3 x)
{
  float3 r = __clc_convert_float3(x);
  long3 y = __clc_convert_long3(r);
  return __clc_convert_int3(y > x) ? r : __spirv_ocl_nextafter(r, (float3)-INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtz(long4 x)
{
  float4 r = __clc_convert_float4(x);
  long4 y = __clc_convert_long4(r);
  ulong4 abs_x = __clc_abs(x);
  ulong4 abs_y = __clc_abs(y);
  return __clc_convert_int4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float4)-INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rte(long4 x)
{
  return __clc_convert_float4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtp(long4 x)
{
  float4 r = __clc_convert_float4(x);
  long4 y = __clc_convert_long4(r);
  return __clc_convert_int4(y < x) ? r : __spirv_ocl_nextafter(r, (float4)INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtn(long4 x)
{
  float4 r = __clc_convert_float4(x);
  long4 y = __clc_convert_long4(r);
  return __clc_convert_int4(y > x) ? r : __spirv_ocl_nextafter(r, (float4)-INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtz(long8 x)
{
  float8 r = __clc_convert_float8(x);
  long8 y = __clc_convert_long8(r);
  ulong8 abs_x = __clc_abs(x);
  ulong8 abs_y = __clc_abs(y);
  return __clc_convert_int8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float8)-INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rte(long8 x)
{
  return __clc_convert_float8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtp(long8 x)
{
  float8 r = __clc_convert_float8(x);
  long8 y = __clc_convert_long8(r);
  return __clc_convert_int8(y < x) ? r : __spirv_ocl_nextafter(r, (float8)INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtn(long8 x)
{
  float8 r = __clc_convert_float8(x);
  long8 y = __clc_convert_long8(r);
  return __clc_convert_int8(y > x) ? r : __spirv_ocl_nextafter(r, (float8)-INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtz(long16 x)
{
  float16 r = __clc_convert_float16(x);
  long16 y = __clc_convert_long16(r);
  ulong16 abs_x = __clc_abs(x);
  ulong16 abs_y = __clc_abs(y);
  return __clc_convert_int16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float16)-INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rte(long16 x)
{
  return __clc_convert_float16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtp(long16 x)
{
  float16 r = __clc_convert_float16(x);
  long16 y = __clc_convert_long16(r);
  return __clc_convert_int16(y < x) ? r : __spirv_ocl_nextafter(r, (float16)INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtn(long16 x)
{
  float16 r = __clc_convert_float16(x);
  long16 y = __clc_convert_long16(r);
  return __clc_convert_int16(y > x) ? r : __spirv_ocl_nextafter(r, (float16)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtz(long x)
{
  double r = __clc_convert_double(x);
  long y = __clc_convert_long(r);
  ulong abs_x = __clc_abs(x);
  ulong abs_y = __clc_abs(y);
  return __clc_convert_long(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rte(long x)
{
  return __clc_convert_double(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtp(long x)
{
  double r = __clc_convert_double(x);
  long y = __clc_convert_long(r);
  return __clc_convert_long(y < x) ? r : __spirv_ocl_nextafter(r, (double)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtn(long x)
{
  double r = __clc_convert_double(x);
  long y = __clc_convert_long(r);
  return __clc_convert_long(y > x) ? r : __spirv_ocl_nextafter(r, (double)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtz(long2 x)
{
  double2 r = __clc_convert_double2(x);
  long2 y = __clc_convert_long2(r);
  ulong2 abs_x = __clc_abs(x);
  ulong2 abs_y = __clc_abs(y);
  return __clc_convert_long2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rte(long2 x)
{
  return __clc_convert_double2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtp(long2 x)
{
  double2 r = __clc_convert_double2(x);
  long2 y = __clc_convert_long2(r);
  return __clc_convert_long2(y < x) ? r : __spirv_ocl_nextafter(r, (double2)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtn(long2 x)
{
  double2 r = __clc_convert_double2(x);
  long2 y = __clc_convert_long2(r);
  return __clc_convert_long2(y > x) ? r : __spirv_ocl_nextafter(r, (double2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtz(long3 x)
{
  double3 r = __clc_convert_double3(x);
  long3 y = __clc_convert_long3(r);
  ulong3 abs_x = __clc_abs(x);
  ulong3 abs_y = __clc_abs(y);
  return __clc_convert_long3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rte(long3 x)
{
  return __clc_convert_double3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtp(long3 x)
{
  double3 r = __clc_convert_double3(x);
  long3 y = __clc_convert_long3(r);
  return __clc_convert_long3(y < x) ? r : __spirv_ocl_nextafter(r, (double3)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtn(long3 x)
{
  double3 r = __clc_convert_double3(x);
  long3 y = __clc_convert_long3(r);
  return __clc_convert_long3(y > x) ? r : __spirv_ocl_nextafter(r, (double3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtz(long4 x)
{
  double4 r = __clc_convert_double4(x);
  long4 y = __clc_convert_long4(r);
  ulong4 abs_x = __clc_abs(x);
  ulong4 abs_y = __clc_abs(y);
  return __clc_convert_long4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rte(long4 x)
{
  return __clc_convert_double4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtp(long4 x)
{
  double4 r = __clc_convert_double4(x);
  long4 y = __clc_convert_long4(r);
  return __clc_convert_long4(y < x) ? r : __spirv_ocl_nextafter(r, (double4)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtn(long4 x)
{
  double4 r = __clc_convert_double4(x);
  long4 y = __clc_convert_long4(r);
  return __clc_convert_long4(y > x) ? r : __spirv_ocl_nextafter(r, (double4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtz(long8 x)
{
  double8 r = __clc_convert_double8(x);
  long8 y = __clc_convert_long8(r);
  ulong8 abs_x = __clc_abs(x);
  ulong8 abs_y = __clc_abs(y);
  return __clc_convert_long8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rte(long8 x)
{
  return __clc_convert_double8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtp(long8 x)
{
  double8 r = __clc_convert_double8(x);
  long8 y = __clc_convert_long8(r);
  return __clc_convert_long8(y < x) ? r : __spirv_ocl_nextafter(r, (double8)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtn(long8 x)
{
  double8 r = __clc_convert_double8(x);
  long8 y = __clc_convert_long8(r);
  return __clc_convert_long8(y > x) ? r : __spirv_ocl_nextafter(r, (double8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtz(long16 x)
{
  double16 r = __clc_convert_double16(x);
  long16 y = __clc_convert_long16(r);
  ulong16 abs_x = __clc_abs(x);
  ulong16 abs_y = __clc_abs(y);
  return __clc_convert_long16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double16)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rte(long16 x)
{
  return __clc_convert_double16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtp(long16 x)
{
  double16 r = __clc_convert_double16(x);
  long16 y = __clc_convert_long16(r);
  return __clc_convert_long16(y < x) ? r : __spirv_ocl_nextafter(r, (double16)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtn(long16 x)
{
  double16 r = __clc_convert_double16(x);
  long16 y = __clc_convert_long16(r);
  return __clc_convert_long16(y > x) ? r : __spirv_ocl_nextafter(r, (double16)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtz(ulong x)
{
  half r = __clc_convert_half(x);
  ulong y = __clc_convert_ulong(r);
  ulong abs_x = __clc_abs(x);
  ulong abs_y = __clc_abs(y);
  return __clc_convert_short(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rte(ulong x)
{
  return __clc_convert_half(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtp(ulong x)
{
  half r = __clc_convert_half(x);
  ulong y = __clc_convert_ulong(r);
  return __clc_convert_short(y < x) ? r : __spirv_ocl_nextafter(r, (half)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtn(ulong x)
{
  half r = __clc_convert_half(x);
  ulong y = __clc_convert_ulong(r);
  return __clc_convert_short(y > x) ? r : __spirv_ocl_nextafter(r, (half)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtz(ulong2 x)
{
  half2 r = __clc_convert_half2(x);
  ulong2 y = __clc_convert_ulong2(r);
  ulong2 abs_x = __clc_abs(x);
  ulong2 abs_y = __clc_abs(y);
  return __clc_convert_short2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half2)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rte(ulong2 x)
{
  return __clc_convert_half2(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtp(ulong2 x)
{
  half2 r = __clc_convert_half2(x);
  ulong2 y = __clc_convert_ulong2(r);
  return __clc_convert_short2(y < x) ? r : __spirv_ocl_nextafter(r, (half2)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtn(ulong2 x)
{
  half2 r = __clc_convert_half2(x);
  ulong2 y = __clc_convert_ulong2(r);
  return __clc_convert_short2(y > x) ? r : __spirv_ocl_nextafter(r, (half2)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtz(ulong3 x)
{
  half3 r = __clc_convert_half3(x);
  ulong3 y = __clc_convert_ulong3(r);
  ulong3 abs_x = __clc_abs(x);
  ulong3 abs_y = __clc_abs(y);
  return __clc_convert_short3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half3)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rte(ulong3 x)
{
  return __clc_convert_half3(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtp(ulong3 x)
{
  half3 r = __clc_convert_half3(x);
  ulong3 y = __clc_convert_ulong3(r);
  return __clc_convert_short3(y < x) ? r : __spirv_ocl_nextafter(r, (half3)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtn(ulong3 x)
{
  half3 r = __clc_convert_half3(x);
  ulong3 y = __clc_convert_ulong3(r);
  return __clc_convert_short3(y > x) ? r : __spirv_ocl_nextafter(r, (half3)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtz(ulong4 x)
{
  half4 r = __clc_convert_half4(x);
  ulong4 y = __clc_convert_ulong4(r);
  ulong4 abs_x = __clc_abs(x);
  ulong4 abs_y = __clc_abs(y);
  return __clc_convert_short4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half4)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rte(ulong4 x)
{
  return __clc_convert_half4(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtp(ulong4 x)
{
  half4 r = __clc_convert_half4(x);
  ulong4 y = __clc_convert_ulong4(r);
  return __clc_convert_short4(y < x) ? r : __spirv_ocl_nextafter(r, (half4)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtn(ulong4 x)
{
  half4 r = __clc_convert_half4(x);
  ulong4 y = __clc_convert_ulong4(r);
  return __clc_convert_short4(y > x) ? r : __spirv_ocl_nextafter(r, (half4)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtz(ulong8 x)
{
  half8 r = __clc_convert_half8(x);
  ulong8 y = __clc_convert_ulong8(r);
  ulong8 abs_x = __clc_abs(x);
  ulong8 abs_y = __clc_abs(y);
  return __clc_convert_short8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half8)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rte(ulong8 x)
{
  return __clc_convert_half8(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtp(ulong8 x)
{
  half8 r = __clc_convert_half8(x);
  ulong8 y = __clc_convert_ulong8(r);
  return __clc_convert_short8(y < x) ? r : __spirv_ocl_nextafter(r, (half8)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtn(ulong8 x)
{
  half8 r = __clc_convert_half8(x);
  ulong8 y = __clc_convert_ulong8(r);
  return __clc_convert_short8(y > x) ? r : __spirv_ocl_nextafter(r, (half8)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtz(ulong16 x)
{
  half16 r = __clc_convert_half16(x);
  ulong16 y = __clc_convert_ulong16(r);
  ulong16 abs_x = __clc_abs(x);
  ulong16 abs_y = __clc_abs(y);
  return __clc_convert_short16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half16)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rte(ulong16 x)
{
  return __clc_convert_half16(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtp(ulong16 x)
{
  half16 r = __clc_convert_half16(x);
  ulong16 y = __clc_convert_ulong16(r);
  return __clc_convert_short16(y < x) ? r : __spirv_ocl_nextafter(r, (half16)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtn(ulong16 x)
{
  half16 r = __clc_convert_half16(x);
  ulong16 y = __clc_convert_ulong16(r);
  return __clc_convert_short16(y > x) ? r : __spirv_ocl_nextafter(r, (half16)-INFINITY);
}
#endif
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtz(ulong x)
{
  float r = __clc_convert_float(x);
  ulong y = __clc_convert_ulong(r);
  ulong abs_x = __clc_abs(x);
  ulong abs_y = __clc_abs(y);
  return __clc_convert_int(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float)-INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rte(ulong x)
{
  return __clc_convert_float(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtp(ulong x)
{
  float r = __clc_convert_float(x);
  ulong y = __clc_convert_ulong(r);
  return __clc_convert_int(y < x) ? r : __spirv_ocl_nextafter(r, (float)INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtn(ulong x)
{
  float r = __clc_convert_float(x);
  ulong y = __clc_convert_ulong(r);
  return __clc_convert_int(y > x) ? r : __spirv_ocl_nextafter(r, (float)-INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtz(ulong2 x)
{
  float2 r = __clc_convert_float2(x);
  ulong2 y = __clc_convert_ulong2(r);
  ulong2 abs_x = __clc_abs(x);
  ulong2 abs_y = __clc_abs(y);
  return __clc_convert_int2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float2)-INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rte(ulong2 x)
{
  return __clc_convert_float2(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtp(ulong2 x)
{
  float2 r = __clc_convert_float2(x);
  ulong2 y = __clc_convert_ulong2(r);
  return __clc_convert_int2(y < x) ? r : __spirv_ocl_nextafter(r, (float2)INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtn(ulong2 x)
{
  float2 r = __clc_convert_float2(x);
  ulong2 y = __clc_convert_ulong2(r);
  return __clc_convert_int2(y > x) ? r : __spirv_ocl_nextafter(r, (float2)-INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtz(ulong3 x)
{
  float3 r = __clc_convert_float3(x);
  ulong3 y = __clc_convert_ulong3(r);
  ulong3 abs_x = __clc_abs(x);
  ulong3 abs_y = __clc_abs(y);
  return __clc_convert_int3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float3)-INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rte(ulong3 x)
{
  return __clc_convert_float3(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtp(ulong3 x)
{
  float3 r = __clc_convert_float3(x);
  ulong3 y = __clc_convert_ulong3(r);
  return __clc_convert_int3(y < x) ? r : __spirv_ocl_nextafter(r, (float3)INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtn(ulong3 x)
{
  float3 r = __clc_convert_float3(x);
  ulong3 y = __clc_convert_ulong3(r);
  return __clc_convert_int3(y > x) ? r : __spirv_ocl_nextafter(r, (float3)-INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtz(ulong4 x)
{
  float4 r = __clc_convert_float4(x);
  ulong4 y = __clc_convert_ulong4(r);
  ulong4 abs_x = __clc_abs(x);
  ulong4 abs_y = __clc_abs(y);
  return __clc_convert_int4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float4)-INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rte(ulong4 x)
{
  return __clc_convert_float4(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtp(ulong4 x)
{
  float4 r = __clc_convert_float4(x);
  ulong4 y = __clc_convert_ulong4(r);
  return __clc_convert_int4(y < x) ? r : __spirv_ocl_nextafter(r, (float4)INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtn(ulong4 x)
{
  float4 r = __clc_convert_float4(x);
  ulong4 y = __clc_convert_ulong4(r);
  return __clc_convert_int4(y > x) ? r : __spirv_ocl_nextafter(r, (float4)-INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtz(ulong8 x)
{
  float8 r = __clc_convert_float8(x);
  ulong8 y = __clc_convert_ulong8(r);
  ulong8 abs_x = __clc_abs(x);
  ulong8 abs_y = __clc_abs(y);
  return __clc_convert_int8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float8)-INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rte(ulong8 x)
{
  return __clc_convert_float8(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtp(ulong8 x)
{
  float8 r = __clc_convert_float8(x);
  ulong8 y = __clc_convert_ulong8(r);
  return __clc_convert_int8(y < x) ? r : __spirv_ocl_nextafter(r, (float8)INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtn(ulong8 x)
{
  float8 r = __clc_convert_float8(x);
  ulong8 y = __clc_convert_ulong8(r);
  return __clc_convert_int8(y > x) ? r : __spirv_ocl_nextafter(r, (float8)-INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtz(ulong16 x)
{
  float16 r = __clc_convert_float16(x);
  ulong16 y = __clc_convert_ulong16(r);
  ulong16 abs_x = __clc_abs(x);
  ulong16 abs_y = __clc_abs(y);
  return __clc_convert_int16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float16)-INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rte(ulong16 x)
{
  return __clc_convert_float16(x);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtp(ulong16 x)
{
  float16 r = __clc_convert_float16(x);
  ulong16 y = __clc_convert_ulong16(r);
  return __clc_convert_int16(y < x) ? r : __spirv_ocl_nextafter(r, (float16)INFINITY);
}
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtn(ulong16 x)
{
  float16 r = __clc_convert_float16(x);
  ulong16 y = __clc_convert_ulong16(r);
  return __clc_convert_int16(y > x) ? r : __spirv_ocl_nextafter(r, (float16)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtz(ulong x)
{
  double r = __clc_convert_double(x);
  ulong y = __clc_convert_ulong(r);
  ulong abs_x = __clc_abs(x);
  ulong abs_y = __clc_abs(y);
  return __clc_convert_long(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rte(ulong x)
{
  return __clc_convert_double(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtp(ulong x)
{
  double r = __clc_convert_double(x);
  ulong y = __clc_convert_ulong(r);
  return __clc_convert_long(y < x) ? r : __spirv_ocl_nextafter(r, (double)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtn(ulong x)
{
  double r = __clc_convert_double(x);
  ulong y = __clc_convert_ulong(r);
  return __clc_convert_long(y > x) ? r : __spirv_ocl_nextafter(r, (double)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtz(ulong2 x)
{
  double2 r = __clc_convert_double2(x);
  ulong2 y = __clc_convert_ulong2(r);
  ulong2 abs_x = __clc_abs(x);
  ulong2 abs_y = __clc_abs(y);
  return __clc_convert_long2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rte(ulong2 x)
{
  return __clc_convert_double2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtp(ulong2 x)
{
  double2 r = __clc_convert_double2(x);
  ulong2 y = __clc_convert_ulong2(r);
  return __clc_convert_long2(y < x) ? r : __spirv_ocl_nextafter(r, (double2)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtn(ulong2 x)
{
  double2 r = __clc_convert_double2(x);
  ulong2 y = __clc_convert_ulong2(r);
  return __clc_convert_long2(y > x) ? r : __spirv_ocl_nextafter(r, (double2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtz(ulong3 x)
{
  double3 r = __clc_convert_double3(x);
  ulong3 y = __clc_convert_ulong3(r);
  ulong3 abs_x = __clc_abs(x);
  ulong3 abs_y = __clc_abs(y);
  return __clc_convert_long3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rte(ulong3 x)
{
  return __clc_convert_double3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtp(ulong3 x)
{
  double3 r = __clc_convert_double3(x);
  ulong3 y = __clc_convert_ulong3(r);
  return __clc_convert_long3(y < x) ? r : __spirv_ocl_nextafter(r, (double3)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtn(ulong3 x)
{
  double3 r = __clc_convert_double3(x);
  ulong3 y = __clc_convert_ulong3(r);
  return __clc_convert_long3(y > x) ? r : __spirv_ocl_nextafter(r, (double3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtz(ulong4 x)
{
  double4 r = __clc_convert_double4(x);
  ulong4 y = __clc_convert_ulong4(r);
  ulong4 abs_x = __clc_abs(x);
  ulong4 abs_y = __clc_abs(y);
  return __clc_convert_long4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rte(ulong4 x)
{
  return __clc_convert_double4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtp(ulong4 x)
{
  double4 r = __clc_convert_double4(x);
  ulong4 y = __clc_convert_ulong4(r);
  return __clc_convert_long4(y < x) ? r : __spirv_ocl_nextafter(r, (double4)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtn(ulong4 x)
{
  double4 r = __clc_convert_double4(x);
  ulong4 y = __clc_convert_ulong4(r);
  return __clc_convert_long4(y > x) ? r : __spirv_ocl_nextafter(r, (double4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtz(ulong8 x)
{
  double8 r = __clc_convert_double8(x);
  ulong8 y = __clc_convert_ulong8(r);
  ulong8 abs_x = __clc_abs(x);
  ulong8 abs_y = __clc_abs(y);
  return __clc_convert_long8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rte(ulong8 x)
{
  return __clc_convert_double8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtp(ulong8 x)
{
  double8 r = __clc_convert_double8(x);
  ulong8 y = __clc_convert_ulong8(r);
  return __clc_convert_long8(y < x) ? r : __spirv_ocl_nextafter(r, (double8)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtn(ulong8 x)
{
  double8 r = __clc_convert_double8(x);
  ulong8 y = __clc_convert_ulong8(r);
  return __clc_convert_long8(y > x) ? r : __spirv_ocl_nextafter(r, (double8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtz(ulong16 x)
{
  double16 r = __clc_convert_double16(x);
  ulong16 y = __clc_convert_ulong16(r);
  ulong16 abs_x = __clc_abs(x);
  ulong16 abs_y = __clc_abs(y);
  return __clc_convert_long16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double16)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rte(ulong16 x)
{
  return __clc_convert_double16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtp(ulong16 x)
{
  double16 r = __clc_convert_double16(x);
  ulong16 y = __clc_convert_ulong16(r);
  return __clc_convert_long16(y < x) ? r : __spirv_ocl_nextafter(r, (double16)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtn(ulong16 x)
{
  double16 r = __clc_convert_double16(x);
  ulong16 y = __clc_convert_ulong16(r);
  return __clc_convert_long16(y > x) ? r : __spirv_ocl_nextafter(r, (double16)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtz(half x)
{
  half r = __clc_convert_half(x);
  half y = __clc_convert_half(r);
  half abs_x = __spirv_ocl_fabs(x);
  half abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_short(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rte(half x)
{
  return __clc_convert_half(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtp(half x)
{
  half r = __clc_convert_half(x);
  half y = __clc_convert_half(r);
  return __clc_convert_short(y < x) ? r : __spirv_ocl_nextafter(r, (half)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtn(half x)
{
  half r = __clc_convert_half(x);
  half y = __clc_convert_half(r);
  return __clc_convert_short(y > x) ? r : __spirv_ocl_nextafter(r, (half)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtz(half2 x)
{
  half2 r = __clc_convert_half2(x);
  half2 y = __clc_convert_half2(r);
  half2 abs_x = __spirv_ocl_fabs(x);
  half2 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_short2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half2)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rte(half2 x)
{
  return __clc_convert_half2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtp(half2 x)
{
  half2 r = __clc_convert_half2(x);
  half2 y = __clc_convert_half2(r);
  return __clc_convert_short2(y < x) ? r : __spirv_ocl_nextafter(r, (half2)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtn(half2 x)
{
  half2 r = __clc_convert_half2(x);
  half2 y = __clc_convert_half2(r);
  return __clc_convert_short2(y > x) ? r : __spirv_ocl_nextafter(r, (half2)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtz(half3 x)
{
  half3 r = __clc_convert_half3(x);
  half3 y = __clc_convert_half3(r);
  half3 abs_x = __spirv_ocl_fabs(x);
  half3 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_short3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half3)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rte(half3 x)
{
  return __clc_convert_half3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtp(half3 x)
{
  half3 r = __clc_convert_half3(x);
  half3 y = __clc_convert_half3(r);
  return __clc_convert_short3(y < x) ? r : __spirv_ocl_nextafter(r, (half3)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtn(half3 x)
{
  half3 r = __clc_convert_half3(x);
  half3 y = __clc_convert_half3(r);
  return __clc_convert_short3(y > x) ? r : __spirv_ocl_nextafter(r, (half3)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtz(half4 x)
{
  half4 r = __clc_convert_half4(x);
  half4 y = __clc_convert_half4(r);
  half4 abs_x = __spirv_ocl_fabs(x);
  half4 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_short4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half4)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rte(half4 x)
{
  return __clc_convert_half4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtp(half4 x)
{
  half4 r = __clc_convert_half4(x);
  half4 y = __clc_convert_half4(r);
  return __clc_convert_short4(y < x) ? r : __spirv_ocl_nextafter(r, (half4)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtn(half4 x)
{
  half4 r = __clc_convert_half4(x);
  half4 y = __clc_convert_half4(r);
  return __clc_convert_short4(y > x) ? r : __spirv_ocl_nextafter(r, (half4)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtz(half8 x)
{
  half8 r = __clc_convert_half8(x);
  half8 y = __clc_convert_half8(r);
  half8 abs_x = __spirv_ocl_fabs(x);
  half8 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_short8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half8)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rte(half8 x)
{
  return __clc_convert_half8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtp(half8 x)
{
  half8 r = __clc_convert_half8(x);
  half8 y = __clc_convert_half8(r);
  return __clc_convert_short8(y < x) ? r : __spirv_ocl_nextafter(r, (half8)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtn(half8 x)
{
  half8 r = __clc_convert_half8(x);
  half8 y = __clc_convert_half8(r);
  return __clc_convert_short8(y > x) ? r : __spirv_ocl_nextafter(r, (half8)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtz(half16 x)
{
  half16 r = __clc_convert_half16(x);
  half16 y = __clc_convert_half16(r);
  half16 abs_x = __spirv_ocl_fabs(x);
  half16 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_short16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half16)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rte(half16 x)
{
  return __clc_convert_half16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtp(half16 x)
{
  half16 r = __clc_convert_half16(x);
  half16 y = __clc_convert_half16(r);
  return __clc_convert_short16(y < x) ? r : __spirv_ocl_nextafter(r, (half16)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtn(half16 x)
{
  half16 r = __clc_convert_half16(x);
  half16 y = __clc_convert_half16(r);
  return __clc_convert_short16(y > x) ? r : __spirv_ocl_nextafter(r, (half16)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtz(half x)
{
  float r = __clc_convert_float(x);
  half y = __clc_convert_half(r);
  half abs_x = __spirv_ocl_fabs(x);
  half abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_int(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rte(half x)
{
  return __clc_convert_float(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtp(half x)
{
  float r = __clc_convert_float(x);
  half y = __clc_convert_half(r);
  return __clc_convert_int(y < x) ? r : __spirv_ocl_nextafter(r, (float)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtn(half x)
{
  float r = __clc_convert_float(x);
  half y = __clc_convert_half(r);
  return __clc_convert_int(y > x) ? r : __spirv_ocl_nextafter(r, (float)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtz(half2 x)
{
  float2 r = __clc_convert_float2(x);
  half2 y = __clc_convert_half2(r);
  half2 abs_x = __spirv_ocl_fabs(x);
  half2 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_int2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float2)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rte(half2 x)
{
  return __clc_convert_float2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtp(half2 x)
{
  float2 r = __clc_convert_float2(x);
  half2 y = __clc_convert_half2(r);
  return __clc_convert_int2(y < x) ? r : __spirv_ocl_nextafter(r, (float2)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtn(half2 x)
{
  float2 r = __clc_convert_float2(x);
  half2 y = __clc_convert_half2(r);
  return __clc_convert_int2(y > x) ? r : __spirv_ocl_nextafter(r, (float2)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtz(half3 x)
{
  float3 r = __clc_convert_float3(x);
  half3 y = __clc_convert_half3(r);
  half3 abs_x = __spirv_ocl_fabs(x);
  half3 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_int3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float3)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rte(half3 x)
{
  return __clc_convert_float3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtp(half3 x)
{
  float3 r = __clc_convert_float3(x);
  half3 y = __clc_convert_half3(r);
  return __clc_convert_int3(y < x) ? r : __spirv_ocl_nextafter(r, (float3)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtn(half3 x)
{
  float3 r = __clc_convert_float3(x);
  half3 y = __clc_convert_half3(r);
  return __clc_convert_int3(y > x) ? r : __spirv_ocl_nextafter(r, (float3)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtz(half4 x)
{
  float4 r = __clc_convert_float4(x);
  half4 y = __clc_convert_half4(r);
  half4 abs_x = __spirv_ocl_fabs(x);
  half4 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_int4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float4)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rte(half4 x)
{
  return __clc_convert_float4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtp(half4 x)
{
  float4 r = __clc_convert_float4(x);
  half4 y = __clc_convert_half4(r);
  return __clc_convert_int4(y < x) ? r : __spirv_ocl_nextafter(r, (float4)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtn(half4 x)
{
  float4 r = __clc_convert_float4(x);
  half4 y = __clc_convert_half4(r);
  return __clc_convert_int4(y > x) ? r : __spirv_ocl_nextafter(r, (float4)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtz(half8 x)
{
  float8 r = __clc_convert_float8(x);
  half8 y = __clc_convert_half8(r);
  half8 abs_x = __spirv_ocl_fabs(x);
  half8 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_int8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float8)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rte(half8 x)
{
  return __clc_convert_float8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtp(half8 x)
{
  float8 r = __clc_convert_float8(x);
  half8 y = __clc_convert_half8(r);
  return __clc_convert_int8(y < x) ? r : __spirv_ocl_nextafter(r, (float8)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtn(half8 x)
{
  float8 r = __clc_convert_float8(x);
  half8 y = __clc_convert_half8(r);
  return __clc_convert_int8(y > x) ? r : __spirv_ocl_nextafter(r, (float8)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtz(half16 x)
{
  float16 r = __clc_convert_float16(x);
  half16 y = __clc_convert_half16(r);
  half16 abs_x = __spirv_ocl_fabs(x);
  half16 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_int16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float16)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rte(half16 x)
{
  return __clc_convert_float16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtp(half16 x)
{
  float16 r = __clc_convert_float16(x);
  half16 y = __clc_convert_half16(r);
  return __clc_convert_int16(y < x) ? r : __spirv_ocl_nextafter(r, (float16)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtn(half16 x)
{
  float16 r = __clc_convert_float16(x);
  half16 y = __clc_convert_half16(r);
  return __clc_convert_int16(y > x) ? r : __spirv_ocl_nextafter(r, (float16)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtz(half x)
{
  double r = __clc_convert_double(x);
  half y = __clc_convert_half(r);
  half abs_x = __spirv_ocl_fabs(x);
  half abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_long(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rte(half x)
{
  return __clc_convert_double(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtp(half x)
{
  double r = __clc_convert_double(x);
  half y = __clc_convert_half(r);
  return __clc_convert_long(y < x) ? r : __spirv_ocl_nextafter(r, (double)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtn(half x)
{
  double r = __clc_convert_double(x);
  half y = __clc_convert_half(r);
  return __clc_convert_long(y > x) ? r : __spirv_ocl_nextafter(r, (double)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtz(half2 x)
{
  double2 r = __clc_convert_double2(x);
  half2 y = __clc_convert_half2(r);
  half2 abs_x = __spirv_ocl_fabs(x);
  half2 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_long2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double2)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rte(half2 x)
{
  return __clc_convert_double2(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtp(half2 x)
{
  double2 r = __clc_convert_double2(x);
  half2 y = __clc_convert_half2(r);
  return __clc_convert_long2(y < x) ? r : __spirv_ocl_nextafter(r, (double2)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtn(half2 x)
{
  double2 r = __clc_convert_double2(x);
  half2 y = __clc_convert_half2(r);
  return __clc_convert_long2(y > x) ? r : __spirv_ocl_nextafter(r, (double2)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtz(half3 x)
{
  double3 r = __clc_convert_double3(x);
  half3 y = __clc_convert_half3(r);
  half3 abs_x = __spirv_ocl_fabs(x);
  half3 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_long3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double3)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rte(half3 x)
{
  return __clc_convert_double3(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtp(half3 x)
{
  double3 r = __clc_convert_double3(x);
  half3 y = __clc_convert_half3(r);
  return __clc_convert_long3(y < x) ? r : __spirv_ocl_nextafter(r, (double3)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtn(half3 x)
{
  double3 r = __clc_convert_double3(x);
  half3 y = __clc_convert_half3(r);
  return __clc_convert_long3(y > x) ? r : __spirv_ocl_nextafter(r, (double3)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtz(half4 x)
{
  double4 r = __clc_convert_double4(x);
  half4 y = __clc_convert_half4(r);
  half4 abs_x = __spirv_ocl_fabs(x);
  half4 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_long4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double4)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rte(half4 x)
{
  return __clc_convert_double4(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtp(half4 x)
{
  double4 r = __clc_convert_double4(x);
  half4 y = __clc_convert_half4(r);
  return __clc_convert_long4(y < x) ? r : __spirv_ocl_nextafter(r, (double4)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtn(half4 x)
{
  double4 r = __clc_convert_double4(x);
  half4 y = __clc_convert_half4(r);
  return __clc_convert_long4(y > x) ? r : __spirv_ocl_nextafter(r, (double4)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtz(half8 x)
{
  double8 r = __clc_convert_double8(x);
  half8 y = __clc_convert_half8(r);
  half8 abs_x = __spirv_ocl_fabs(x);
  half8 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_long8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double8)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rte(half8 x)
{
  return __clc_convert_double8(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtp(half8 x)
{
  double8 r = __clc_convert_double8(x);
  half8 y = __clc_convert_half8(r);
  return __clc_convert_long8(y < x) ? r : __spirv_ocl_nextafter(r, (double8)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtn(half8 x)
{
  double8 r = __clc_convert_double8(x);
  half8 y = __clc_convert_half8(r);
  return __clc_convert_long8(y > x) ? r : __spirv_ocl_nextafter(r, (double8)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtz(half16 x)
{
  double16 r = __clc_convert_double16(x);
  half16 y = __clc_convert_half16(r);
  half16 abs_x = __spirv_ocl_fabs(x);
  half16 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_long16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double16)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rte(half16 x)
{
  return __clc_convert_double16(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtp(half16 x)
{
  double16 r = __clc_convert_double16(x);
  half16 y = __clc_convert_half16(r);
  return __clc_convert_long16(y < x) ? r : __spirv_ocl_nextafter(r, (double16)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtn(half16 x)
{
  double16 r = __clc_convert_double16(x);
  half16 y = __clc_convert_half16(r);
  return __clc_convert_long16(y > x) ? r : __spirv_ocl_nextafter(r, (double16)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtz(float x)
{
  half r = __clc_convert_half(x);
  float y = __clc_convert_float(r);
  float abs_x = __spirv_ocl_fabs(x);
  float abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_short(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rte(float x)
{
  return __clc_convert_half(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtp(float x)
{
  half r = __clc_convert_half(x);
  float y = __clc_convert_float(r);
  return __clc_convert_short(y < x) ? r : __spirv_ocl_nextafter(r, (half)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtn(float x)
{
  half r = __clc_convert_half(x);
  float y = __clc_convert_float(r);
  return __clc_convert_short(y > x) ? r : __spirv_ocl_nextafter(r, (half)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtz(float2 x)
{
  half2 r = __clc_convert_half2(x);
  float2 y = __clc_convert_float2(r);
  float2 abs_x = __spirv_ocl_fabs(x);
  float2 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_short2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half2)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rte(float2 x)
{
  return __clc_convert_half2(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtp(float2 x)
{
  half2 r = __clc_convert_half2(x);
  float2 y = __clc_convert_float2(r);
  return __clc_convert_short2(y < x) ? r : __spirv_ocl_nextafter(r, (half2)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtn(float2 x)
{
  half2 r = __clc_convert_half2(x);
  float2 y = __clc_convert_float2(r);
  return __clc_convert_short2(y > x) ? r : __spirv_ocl_nextafter(r, (half2)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtz(float3 x)
{
  half3 r = __clc_convert_half3(x);
  float3 y = __clc_convert_float3(r);
  float3 abs_x = __spirv_ocl_fabs(x);
  float3 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_short3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half3)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rte(float3 x)
{
  return __clc_convert_half3(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtp(float3 x)
{
  half3 r = __clc_convert_half3(x);
  float3 y = __clc_convert_float3(r);
  return __clc_convert_short3(y < x) ? r : __spirv_ocl_nextafter(r, (half3)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtn(float3 x)
{
  half3 r = __clc_convert_half3(x);
  float3 y = __clc_convert_float3(r);
  return __clc_convert_short3(y > x) ? r : __spirv_ocl_nextafter(r, (half3)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtz(float4 x)
{
  half4 r = __clc_convert_half4(x);
  float4 y = __clc_convert_float4(r);
  float4 abs_x = __spirv_ocl_fabs(x);
  float4 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_short4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half4)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rte(float4 x)
{
  return __clc_convert_half4(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtp(float4 x)
{
  half4 r = __clc_convert_half4(x);
  float4 y = __clc_convert_float4(r);
  return __clc_convert_short4(y < x) ? r : __spirv_ocl_nextafter(r, (half4)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtn(float4 x)
{
  half4 r = __clc_convert_half4(x);
  float4 y = __clc_convert_float4(r);
  return __clc_convert_short4(y > x) ? r : __spirv_ocl_nextafter(r, (half4)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtz(float8 x)
{
  half8 r = __clc_convert_half8(x);
  float8 y = __clc_convert_float8(r);
  float8 abs_x = __spirv_ocl_fabs(x);
  float8 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_short8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half8)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rte(float8 x)
{
  return __clc_convert_half8(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtp(float8 x)
{
  half8 r = __clc_convert_half8(x);
  float8 y = __clc_convert_float8(r);
  return __clc_convert_short8(y < x) ? r : __spirv_ocl_nextafter(r, (half8)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtn(float8 x)
{
  half8 r = __clc_convert_half8(x);
  float8 y = __clc_convert_float8(r);
  return __clc_convert_short8(y > x) ? r : __spirv_ocl_nextafter(r, (half8)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtz(float16 x)
{
  half16 r = __clc_convert_half16(x);
  float16 y = __clc_convert_float16(r);
  float16 abs_x = __spirv_ocl_fabs(x);
  float16 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_short16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half16)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rte(float16 x)
{
  return __clc_convert_half16(x);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtp(float16 x)
{
  half16 r = __clc_convert_half16(x);
  float16 y = __clc_convert_float16(r);
  return __clc_convert_short16(y < x) ? r : __spirv_ocl_nextafter(r, (half16)INFINITY);
}
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtn(float16 x)
{
  half16 r = __clc_convert_half16(x);
  float16 y = __clc_convert_float16(r);
  return __clc_convert_short16(y > x) ? r : __spirv_ocl_nextafter(r, (half16)-INFINITY);
}
#endif
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtz(float x)
{
  float r = __clc_convert_float(x);
  float y = __clc_convert_float(r);
  float abs_x = __spirv_ocl_fabs(x);
  float abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_int(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rte(float x)
{
  return __clc_convert_float(x);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtp(float x)
{
  float r = __clc_convert_float(x);
  float y = __clc_convert_float(r);
  return __clc_convert_int(y < x) ? r : __spirv_ocl_nextafter(r, (float)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtn(float x)
{
  float r = __clc_convert_float(x);
  float y = __clc_convert_float(r);
  return __clc_convert_int(y > x) ? r : __spirv_ocl_nextafter(r, (float)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtz(float2 x)
{
  float2 r = __clc_convert_float2(x);
  float2 y = __clc_convert_float2(r);
  float2 abs_x = __spirv_ocl_fabs(x);
  float2 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_int2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float2)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rte(float2 x)
{
  return __clc_convert_float2(x);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtp(float2 x)
{
  float2 r = __clc_convert_float2(x);
  float2 y = __clc_convert_float2(r);
  return __clc_convert_int2(y < x) ? r : __spirv_ocl_nextafter(r, (float2)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtn(float2 x)
{
  float2 r = __clc_convert_float2(x);
  float2 y = __clc_convert_float2(r);
  return __clc_convert_int2(y > x) ? r : __spirv_ocl_nextafter(r, (float2)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtz(float3 x)
{
  float3 r = __clc_convert_float3(x);
  float3 y = __clc_convert_float3(r);
  float3 abs_x = __spirv_ocl_fabs(x);
  float3 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_int3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float3)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rte(float3 x)
{
  return __clc_convert_float3(x);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtp(float3 x)
{
  float3 r = __clc_convert_float3(x);
  float3 y = __clc_convert_float3(r);
  return __clc_convert_int3(y < x) ? r : __spirv_ocl_nextafter(r, (float3)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtn(float3 x)
{
  float3 r = __clc_convert_float3(x);
  float3 y = __clc_convert_float3(r);
  return __clc_convert_int3(y > x) ? r : __spirv_ocl_nextafter(r, (float3)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtz(float4 x)
{
  float4 r = __clc_convert_float4(x);
  float4 y = __clc_convert_float4(r);
  float4 abs_x = __spirv_ocl_fabs(x);
  float4 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_int4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float4)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rte(float4 x)
{
  return __clc_convert_float4(x);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtp(float4 x)
{
  float4 r = __clc_convert_float4(x);
  float4 y = __clc_convert_float4(r);
  return __clc_convert_int4(y < x) ? r : __spirv_ocl_nextafter(r, (float4)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtn(float4 x)
{
  float4 r = __clc_convert_float4(x);
  float4 y = __clc_convert_float4(r);
  return __clc_convert_int4(y > x) ? r : __spirv_ocl_nextafter(r, (float4)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtz(float8 x)
{
  float8 r = __clc_convert_float8(x);
  float8 y = __clc_convert_float8(r);
  float8 abs_x = __spirv_ocl_fabs(x);
  float8 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_int8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float8)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rte(float8 x)
{
  return __clc_convert_float8(x);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtp(float8 x)
{
  float8 r = __clc_convert_float8(x);
  float8 y = __clc_convert_float8(r);
  return __clc_convert_int8(y < x) ? r : __spirv_ocl_nextafter(r, (float8)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtn(float8 x)
{
  float8 r = __clc_convert_float8(x);
  float8 y = __clc_convert_float8(r);
  return __clc_convert_int8(y > x) ? r : __spirv_ocl_nextafter(r, (float8)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtz(float16 x)
{
  float16 r = __clc_convert_float16(x);
  float16 y = __clc_convert_float16(r);
  float16 abs_x = __spirv_ocl_fabs(x);
  float16 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_int16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float16)-INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rte(float16 x)
{
  return __clc_convert_float16(x);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtp(float16 x)
{
  float16 r = __clc_convert_float16(x);
  float16 y = __clc_convert_float16(r);
  return __clc_convert_int16(y < x) ? r : __spirv_ocl_nextafter(r, (float16)INFINITY);
}
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtn(float16 x)
{
  float16 r = __clc_convert_float16(x);
  float16 y = __clc_convert_float16(r);
  return __clc_convert_int16(y > x) ? r : __spirv_ocl_nextafter(r, (float16)-INFINITY);
}
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtz(float x)
{
  double r = __clc_convert_double(x);
  float y = __clc_convert_float(r);
  float abs_x = __spirv_ocl_fabs(x);
  float abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_long(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rte(float x)
{
  return __clc_convert_double(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtp(float x)
{
  double r = __clc_convert_double(x);
  float y = __clc_convert_float(r);
  return __clc_convert_long(y < x) ? r : __spirv_ocl_nextafter(r, (double)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtn(float x)
{
  double r = __clc_convert_double(x);
  float y = __clc_convert_float(r);
  return __clc_convert_long(y > x) ? r : __spirv_ocl_nextafter(r, (double)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtz(float2 x)
{
  double2 r = __clc_convert_double2(x);
  float2 y = __clc_convert_float2(r);
  float2 abs_x = __spirv_ocl_fabs(x);
  float2 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_long2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rte(float2 x)
{
  return __clc_convert_double2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtp(float2 x)
{
  double2 r = __clc_convert_double2(x);
  float2 y = __clc_convert_float2(r);
  return __clc_convert_long2(y < x) ? r : __spirv_ocl_nextafter(r, (double2)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtn(float2 x)
{
  double2 r = __clc_convert_double2(x);
  float2 y = __clc_convert_float2(r);
  return __clc_convert_long2(y > x) ? r : __spirv_ocl_nextafter(r, (double2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtz(float3 x)
{
  double3 r = __clc_convert_double3(x);
  float3 y = __clc_convert_float3(r);
  float3 abs_x = __spirv_ocl_fabs(x);
  float3 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_long3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rte(float3 x)
{
  return __clc_convert_double3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtp(float3 x)
{
  double3 r = __clc_convert_double3(x);
  float3 y = __clc_convert_float3(r);
  return __clc_convert_long3(y < x) ? r : __spirv_ocl_nextafter(r, (double3)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtn(float3 x)
{
  double3 r = __clc_convert_double3(x);
  float3 y = __clc_convert_float3(r);
  return __clc_convert_long3(y > x) ? r : __spirv_ocl_nextafter(r, (double3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtz(float4 x)
{
  double4 r = __clc_convert_double4(x);
  float4 y = __clc_convert_float4(r);
  float4 abs_x = __spirv_ocl_fabs(x);
  float4 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_long4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rte(float4 x)
{
  return __clc_convert_double4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtp(float4 x)
{
  double4 r = __clc_convert_double4(x);
  float4 y = __clc_convert_float4(r);
  return __clc_convert_long4(y < x) ? r : __spirv_ocl_nextafter(r, (double4)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtn(float4 x)
{
  double4 r = __clc_convert_double4(x);
  float4 y = __clc_convert_float4(r);
  return __clc_convert_long4(y > x) ? r : __spirv_ocl_nextafter(r, (double4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtz(float8 x)
{
  double8 r = __clc_convert_double8(x);
  float8 y = __clc_convert_float8(r);
  float8 abs_x = __spirv_ocl_fabs(x);
  float8 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_long8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rte(float8 x)
{
  return __clc_convert_double8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtp(float8 x)
{
  double8 r = __clc_convert_double8(x);
  float8 y = __clc_convert_float8(r);
  return __clc_convert_long8(y < x) ? r : __spirv_ocl_nextafter(r, (double8)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtn(float8 x)
{
  double8 r = __clc_convert_double8(x);
  float8 y = __clc_convert_float8(r);
  return __clc_convert_long8(y > x) ? r : __spirv_ocl_nextafter(r, (double8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtz(float16 x)
{
  double16 r = __clc_convert_double16(x);
  float16 y = __clc_convert_float16(r);
  float16 abs_x = __spirv_ocl_fabs(x);
  float16 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_long16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double16)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rte(float16 x)
{
  return __clc_convert_double16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtp(float16 x)
{
  double16 r = __clc_convert_double16(x);
  float16 y = __clc_convert_float16(r);
  return __clc_convert_long16(y < x) ? r : __spirv_ocl_nextafter(r, (double16)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtn(float16 x)
{
  double16 r = __clc_convert_double16(x);
  float16 y = __clc_convert_float16(r);
  return __clc_convert_long16(y > x) ? r : __spirv_ocl_nextafter(r, (double16)-INFINITY);
}
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtz(double x)
{
  half r = __clc_convert_half(x);
  double y = __clc_convert_double(r);
  double abs_x = __spirv_ocl_fabs(x);
  double abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_short(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rte(double x)
{
  return __clc_convert_half(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtp(double x)
{
  half r = __clc_convert_half(x);
  double y = __clc_convert_double(r);
  return __clc_convert_short(y < x) ? r : __spirv_ocl_nextafter(r, (half)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half __clc_convert_half_rtn(double x)
{
  half r = __clc_convert_half(x);
  double y = __clc_convert_double(r);
  return __clc_convert_short(y > x) ? r : __spirv_ocl_nextafter(r, (half)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtz(double2 x)
{
  half2 r = __clc_convert_half2(x);
  double2 y = __clc_convert_double2(r);
  double2 abs_x = __spirv_ocl_fabs(x);
  double2 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_short2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half2)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rte(double2 x)
{
  return __clc_convert_half2(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtp(double2 x)
{
  half2 r = __clc_convert_half2(x);
  double2 y = __clc_convert_double2(r);
  return __clc_convert_short2(y < x) ? r : __spirv_ocl_nextafter(r, (half2)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half2 __clc_convert_half2_rtn(double2 x)
{
  half2 r = __clc_convert_half2(x);
  double2 y = __clc_convert_double2(r);
  return __clc_convert_short2(y > x) ? r : __spirv_ocl_nextafter(r, (half2)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtz(double3 x)
{
  half3 r = __clc_convert_half3(x);
  double3 y = __clc_convert_double3(r);
  double3 abs_x = __spirv_ocl_fabs(x);
  double3 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_short3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half3)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rte(double3 x)
{
  return __clc_convert_half3(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtp(double3 x)
{
  half3 r = __clc_convert_half3(x);
  double3 y = __clc_convert_double3(r);
  return __clc_convert_short3(y < x) ? r : __spirv_ocl_nextafter(r, (half3)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half3 __clc_convert_half3_rtn(double3 x)
{
  half3 r = __clc_convert_half3(x);
  double3 y = __clc_convert_double3(r);
  return __clc_convert_short3(y > x) ? r : __spirv_ocl_nextafter(r, (half3)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtz(double4 x)
{
  half4 r = __clc_convert_half4(x);
  double4 y = __clc_convert_double4(r);
  double4 abs_x = __spirv_ocl_fabs(x);
  double4 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_short4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half4)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rte(double4 x)
{
  return __clc_convert_half4(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtp(double4 x)
{
  half4 r = __clc_convert_half4(x);
  double4 y = __clc_convert_double4(r);
  return __clc_convert_short4(y < x) ? r : __spirv_ocl_nextafter(r, (half4)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half4 __clc_convert_half4_rtn(double4 x)
{
  half4 r = __clc_convert_half4(x);
  double4 y = __clc_convert_double4(r);
  return __clc_convert_short4(y > x) ? r : __spirv_ocl_nextafter(r, (half4)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtz(double8 x)
{
  half8 r = __clc_convert_half8(x);
  double8 y = __clc_convert_double8(r);
  double8 abs_x = __spirv_ocl_fabs(x);
  double8 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_short8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half8)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rte(double8 x)
{
  return __clc_convert_half8(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtp(double8 x)
{
  half8 r = __clc_convert_half8(x);
  double8 y = __clc_convert_double8(r);
  return __clc_convert_short8(y < x) ? r : __spirv_ocl_nextafter(r, (half8)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half8 __clc_convert_half8_rtn(double8 x)
{
  half8 r = __clc_convert_half8(x);
  double8 y = __clc_convert_double8(r);
  return __clc_convert_short8(y > x) ? r : __spirv_ocl_nextafter(r, (half8)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtz(double16 x)
{
  half16 r = __clc_convert_half16(x);
  double16 y = __clc_convert_double16(r);
  double16 abs_x = __spirv_ocl_fabs(x);
  double16 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_short16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (half16)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rte(double16 x)
{
  return __clc_convert_half16(x);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtp(double16 x)
{
  half16 r = __clc_convert_half16(x);
  double16 y = __clc_convert_double16(r);
  return __clc_convert_short16(y < x) ? r : __spirv_ocl_nextafter(r, (half16)INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  half16 __clc_convert_half16_rtn(double16 x)
{
  half16 r = __clc_convert_half16(x);
  double16 y = __clc_convert_double16(r);
  return __clc_convert_short16(y > x) ? r : __spirv_ocl_nextafter(r, (half16)-INFINITY);
}
#endif
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtz(double x)
{
  float r = __clc_convert_float(x);
  double y = __clc_convert_double(r);
  double abs_x = __spirv_ocl_fabs(x);
  double abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_int(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rte(double x)
{
  return __clc_convert_float(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtp(double x)
{
  float r = __clc_convert_float(x);
  double y = __clc_convert_double(r);
  return __clc_convert_int(y < x) ? r : __spirv_ocl_nextafter(r, (float)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float __clc_convert_float_rtn(double x)
{
  float r = __clc_convert_float(x);
  double y = __clc_convert_double(r);
  return __clc_convert_int(y > x) ? r : __spirv_ocl_nextafter(r, (float)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtz(double2 x)
{
  float2 r = __clc_convert_float2(x);
  double2 y = __clc_convert_double2(r);
  double2 abs_x = __spirv_ocl_fabs(x);
  double2 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_int2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rte(double2 x)
{
  return __clc_convert_float2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtp(double2 x)
{
  float2 r = __clc_convert_float2(x);
  double2 y = __clc_convert_double2(r);
  return __clc_convert_int2(y < x) ? r : __spirv_ocl_nextafter(r, (float2)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float2 __clc_convert_float2_rtn(double2 x)
{
  float2 r = __clc_convert_float2(x);
  double2 y = __clc_convert_double2(r);
  return __clc_convert_int2(y > x) ? r : __spirv_ocl_nextafter(r, (float2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtz(double3 x)
{
  float3 r = __clc_convert_float3(x);
  double3 y = __clc_convert_double3(r);
  double3 abs_x = __spirv_ocl_fabs(x);
  double3 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_int3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rte(double3 x)
{
  return __clc_convert_float3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtp(double3 x)
{
  float3 r = __clc_convert_float3(x);
  double3 y = __clc_convert_double3(r);
  return __clc_convert_int3(y < x) ? r : __spirv_ocl_nextafter(r, (float3)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float3 __clc_convert_float3_rtn(double3 x)
{
  float3 r = __clc_convert_float3(x);
  double3 y = __clc_convert_double3(r);
  return __clc_convert_int3(y > x) ? r : __spirv_ocl_nextafter(r, (float3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtz(double4 x)
{
  float4 r = __clc_convert_float4(x);
  double4 y = __clc_convert_double4(r);
  double4 abs_x = __spirv_ocl_fabs(x);
  double4 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_int4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rte(double4 x)
{
  return __clc_convert_float4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtp(double4 x)
{
  float4 r = __clc_convert_float4(x);
  double4 y = __clc_convert_double4(r);
  return __clc_convert_int4(y < x) ? r : __spirv_ocl_nextafter(r, (float4)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float4 __clc_convert_float4_rtn(double4 x)
{
  float4 r = __clc_convert_float4(x);
  double4 y = __clc_convert_double4(r);
  return __clc_convert_int4(y > x) ? r : __spirv_ocl_nextafter(r, (float4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtz(double8 x)
{
  float8 r = __clc_convert_float8(x);
  double8 y = __clc_convert_double8(r);
  double8 abs_x = __spirv_ocl_fabs(x);
  double8 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_int8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rte(double8 x)
{
  return __clc_convert_float8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtp(double8 x)
{
  float8 r = __clc_convert_float8(x);
  double8 y = __clc_convert_double8(r);
  return __clc_convert_int8(y < x) ? r : __spirv_ocl_nextafter(r, (float8)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float8 __clc_convert_float8_rtn(double8 x)
{
  float8 r = __clc_convert_float8(x);
  double8 y = __clc_convert_double8(r);
  return __clc_convert_int8(y > x) ? r : __spirv_ocl_nextafter(r, (float8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtz(double16 x)
{
  float16 r = __clc_convert_float16(x);
  double16 y = __clc_convert_double16(r);
  double16 abs_x = __spirv_ocl_fabs(x);
  double16 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_int16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (float16)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rte(double16 x)
{
  return __clc_convert_float16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtp(double16 x)
{
  float16 r = __clc_convert_float16(x);
  double16 y = __clc_convert_double16(r);
  return __clc_convert_int16(y < x) ? r : __spirv_ocl_nextafter(r, (float16)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  float16 __clc_convert_float16_rtn(double16 x)
{
  float16 r = __clc_convert_float16(x);
  double16 y = __clc_convert_double16(r);
  return __clc_convert_int16(y > x) ? r : __spirv_ocl_nextafter(r, (float16)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtz(double x)
{
  double r = __clc_convert_double(x);
  double y = __clc_convert_double(r);
  double abs_x = __spirv_ocl_fabs(x);
  double abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_long(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rte(double x)
{
  return __clc_convert_double(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtp(double x)
{
  double r = __clc_convert_double(x);
  double y = __clc_convert_double(r);
  return __clc_convert_long(y < x) ? r : __spirv_ocl_nextafter(r, (double)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double __clc_convert_double_rtn(double x)
{
  double r = __clc_convert_double(x);
  double y = __clc_convert_double(r);
  return __clc_convert_long(y > x) ? r : __spirv_ocl_nextafter(r, (double)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtz(double2 x)
{
  double2 r = __clc_convert_double2(x);
  double2 y = __clc_convert_double2(r);
  double2 abs_x = __spirv_ocl_fabs(x);
  double2 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_long2(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rte(double2 x)
{
  return __clc_convert_double2(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtp(double2 x)
{
  double2 r = __clc_convert_double2(x);
  double2 y = __clc_convert_double2(r);
  return __clc_convert_long2(y < x) ? r : __spirv_ocl_nextafter(r, (double2)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double2 __clc_convert_double2_rtn(double2 x)
{
  double2 r = __clc_convert_double2(x);
  double2 y = __clc_convert_double2(r);
  return __clc_convert_long2(y > x) ? r : __spirv_ocl_nextafter(r, (double2)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtz(double3 x)
{
  double3 r = __clc_convert_double3(x);
  double3 y = __clc_convert_double3(r);
  double3 abs_x = __spirv_ocl_fabs(x);
  double3 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_long3(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rte(double3 x)
{
  return __clc_convert_double3(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtp(double3 x)
{
  double3 r = __clc_convert_double3(x);
  double3 y = __clc_convert_double3(r);
  return __clc_convert_long3(y < x) ? r : __spirv_ocl_nextafter(r, (double3)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double3 __clc_convert_double3_rtn(double3 x)
{
  double3 r = __clc_convert_double3(x);
  double3 y = __clc_convert_double3(r);
  return __clc_convert_long3(y > x) ? r : __spirv_ocl_nextafter(r, (double3)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtz(double4 x)
{
  double4 r = __clc_convert_double4(x);
  double4 y = __clc_convert_double4(r);
  double4 abs_x = __spirv_ocl_fabs(x);
  double4 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_long4(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rte(double4 x)
{
  return __clc_convert_double4(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtp(double4 x)
{
  double4 r = __clc_convert_double4(x);
  double4 y = __clc_convert_double4(r);
  return __clc_convert_long4(y < x) ? r : __spirv_ocl_nextafter(r, (double4)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double4 __clc_convert_double4_rtn(double4 x)
{
  double4 r = __clc_convert_double4(x);
  double4 y = __clc_convert_double4(r);
  return __clc_convert_long4(y > x) ? r : __spirv_ocl_nextafter(r, (double4)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtz(double8 x)
{
  double8 r = __clc_convert_double8(x);
  double8 y = __clc_convert_double8(r);
  double8 abs_x = __spirv_ocl_fabs(x);
  double8 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_long8(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rte(double8 x)
{
  return __clc_convert_double8(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtp(double8 x)
{
  double8 r = __clc_convert_double8(x);
  double8 y = __clc_convert_double8(r);
  return __clc_convert_long8(y < x) ? r : __spirv_ocl_nextafter(r, (double8)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double8 __clc_convert_double8_rtn(double8 x)
{
  double8 r = __clc_convert_double8(x);
  double8 y = __clc_convert_double8(r);
  return __clc_convert_long8(y > x) ? r : __spirv_ocl_nextafter(r, (double8)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtz(double16 x)
{
  double16 r = __clc_convert_double16(x);
  double16 y = __clc_convert_double16(r);
  double16 abs_x = __spirv_ocl_fabs(x);
  double16 abs_y = __spirv_ocl_fabs(y);
  return __clc_convert_long16(abs_y > abs_x) ? r:  __spirv_ocl_nextafter(r, __spirv_ocl_sign(r) * (double16)-INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rte(double16 x)
{
  return __clc_convert_double16(x);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtp(double16 x)
{
  double16 r = __clc_convert_double16(x);
  double16 y = __clc_convert_double16(r);
  return __clc_convert_long16(y < x) ? r : __spirv_ocl_nextafter(r, (double16)INFINITY);
}
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD
  double16 __clc_convert_double16_rtn(double16 x)
{
  double16 r = __clc_convert_double16(x);
  double16 y = __clc_convert_double16(r);
  return __clc_convert_long16(y > x) ? r : __spirv_ocl_nextafter(r, (double16)-INFINITY);
}
#endif
