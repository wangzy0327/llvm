/* !!!! AUTOGENERATED FILE generated by convert_type.py !!!!!

   DON'T CHANGE THIS FILE. MAKE YOUR CHANGES TO convert_type.py AND RUN:
   $ ./generate-conversion-type-cl.sh

   SPIR-V type conversion functions

   ===----------------------------------------------------------------------===

   Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
   See https://llvm.org/LICENSE.txt for license information.
   SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

   ===----------------------------------------------------------------------===
*/

#include <core/clc_core.h>
#include <spirv/spirv.h>

#ifdef cl_khr_fp16
#pragma OPENCL EXTENSION cl_khr_fp16 : enable
#endif

#ifdef cl_khr_fp64
#pragma OPENCL EXTENSION cl_khr_fp64 : enable

#if defined(__EMBEDDED_PROFILE__) && !defined(cles_khr_int64)
#error Embedded profile that supports cl_khr_fp64 also has to support cles_khr_int64
#endif

#endif

#ifdef cles_khr_int64
#pragma OPENCL EXTENSION cles_khr_int64 : enable
#endif


#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar(half x)
{
  return __clc_convert_schar(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_sat(half x)
{
  return __clc_convert_schar_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_rtz(half x)
{
  return __clc_convert_schar_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_sat_rtz(half x)
{
  return __clc_convert_schar_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_rte(half x)
{
  return __clc_convert_schar_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_sat_rte(half x)
{
  return __clc_convert_schar_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_rtp(half x)
{
  return __clc_convert_schar_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_sat_rtp(half x)
{
  return __clc_convert_schar_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_rtn(half x)
{
  return __clc_convert_schar_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_sat_rtn(half x)
{
  return __clc_convert_schar_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2(half2 x)
{
  return __clc_convert_schar2(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_sat(half2 x)
{
  return __clc_convert_schar2_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_rtz(half2 x)
{
  return __clc_convert_schar2_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_sat_rtz(half2 x)
{
  return __clc_convert_schar2_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_rte(half2 x)
{
  return __clc_convert_schar2_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_sat_rte(half2 x)
{
  return __clc_convert_schar2_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_rtp(half2 x)
{
  return __clc_convert_schar2_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_sat_rtp(half2 x)
{
  return __clc_convert_schar2_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_rtn(half2 x)
{
  return __clc_convert_schar2_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_sat_rtn(half2 x)
{
  return __clc_convert_schar2_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3(half3 x)
{
  return __clc_convert_schar3(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_sat(half3 x)
{
  return __clc_convert_schar3_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_rtz(half3 x)
{
  return __clc_convert_schar3_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_sat_rtz(half3 x)
{
  return __clc_convert_schar3_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_rte(half3 x)
{
  return __clc_convert_schar3_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_sat_rte(half3 x)
{
  return __clc_convert_schar3_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_rtp(half3 x)
{
  return __clc_convert_schar3_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_sat_rtp(half3 x)
{
  return __clc_convert_schar3_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_rtn(half3 x)
{
  return __clc_convert_schar3_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_sat_rtn(half3 x)
{
  return __clc_convert_schar3_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4(half4 x)
{
  return __clc_convert_schar4(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_sat(half4 x)
{
  return __clc_convert_schar4_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_rtz(half4 x)
{
  return __clc_convert_schar4_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_sat_rtz(half4 x)
{
  return __clc_convert_schar4_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_rte(half4 x)
{
  return __clc_convert_schar4_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_sat_rte(half4 x)
{
  return __clc_convert_schar4_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_rtp(half4 x)
{
  return __clc_convert_schar4_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_sat_rtp(half4 x)
{
  return __clc_convert_schar4_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_rtn(half4 x)
{
  return __clc_convert_schar4_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_sat_rtn(half4 x)
{
  return __clc_convert_schar4_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8(half8 x)
{
  return __clc_convert_schar8(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_sat(half8 x)
{
  return __clc_convert_schar8_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_rtz(half8 x)
{
  return __clc_convert_schar8_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_sat_rtz(half8 x)
{
  return __clc_convert_schar8_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_rte(half8 x)
{
  return __clc_convert_schar8_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_sat_rte(half8 x)
{
  return __clc_convert_schar8_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_rtp(half8 x)
{
  return __clc_convert_schar8_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_sat_rtp(half8 x)
{
  return __clc_convert_schar8_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_rtn(half8 x)
{
  return __clc_convert_schar8_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_sat_rtn(half8 x)
{
  return __clc_convert_schar8_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16(half16 x)
{
  return __clc_convert_schar16(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_sat(half16 x)
{
  return __clc_convert_schar16_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_rtz(half16 x)
{
  return __clc_convert_schar16_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_sat_rtz(half16 x)
{
  return __clc_convert_schar16_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_rte(half16 x)
{
  return __clc_convert_schar16_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_sat_rte(half16 x)
{
  return __clc_convert_schar16_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_rtp(half16 x)
{
  return __clc_convert_schar16_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_sat_rtp(half16 x)
{
  return __clc_convert_schar16_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_rtn(half16 x)
{
  return __clc_convert_schar16_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_sat_rtn(half16 x)
{
  return __clc_convert_schar16_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar(half x)
{
  return __clc_convert_uchar(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_sat(half x)
{
  return __clc_convert_uchar_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_rtz(half x)
{
  return __clc_convert_uchar_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_sat_rtz(half x)
{
  return __clc_convert_uchar_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_rte(half x)
{
  return __clc_convert_uchar_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_sat_rte(half x)
{
  return __clc_convert_uchar_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_rtp(half x)
{
  return __clc_convert_uchar_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_sat_rtp(half x)
{
  return __clc_convert_uchar_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_rtn(half x)
{
  return __clc_convert_uchar_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_sat_rtn(half x)
{
  return __clc_convert_uchar_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2(half2 x)
{
  return __clc_convert_uchar2(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_sat(half2 x)
{
  return __clc_convert_uchar2_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_rtz(half2 x)
{
  return __clc_convert_uchar2_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_sat_rtz(half2 x)
{
  return __clc_convert_uchar2_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_rte(half2 x)
{
  return __clc_convert_uchar2_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_sat_rte(half2 x)
{
  return __clc_convert_uchar2_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_rtp(half2 x)
{
  return __clc_convert_uchar2_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_sat_rtp(half2 x)
{
  return __clc_convert_uchar2_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_rtn(half2 x)
{
  return __clc_convert_uchar2_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_sat_rtn(half2 x)
{
  return __clc_convert_uchar2_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3(half3 x)
{
  return __clc_convert_uchar3(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_sat(half3 x)
{
  return __clc_convert_uchar3_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_rtz(half3 x)
{
  return __clc_convert_uchar3_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_sat_rtz(half3 x)
{
  return __clc_convert_uchar3_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_rte(half3 x)
{
  return __clc_convert_uchar3_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_sat_rte(half3 x)
{
  return __clc_convert_uchar3_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_rtp(half3 x)
{
  return __clc_convert_uchar3_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_sat_rtp(half3 x)
{
  return __clc_convert_uchar3_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_rtn(half3 x)
{
  return __clc_convert_uchar3_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_sat_rtn(half3 x)
{
  return __clc_convert_uchar3_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4(half4 x)
{
  return __clc_convert_uchar4(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_sat(half4 x)
{
  return __clc_convert_uchar4_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_rtz(half4 x)
{
  return __clc_convert_uchar4_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_sat_rtz(half4 x)
{
  return __clc_convert_uchar4_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_rte(half4 x)
{
  return __clc_convert_uchar4_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_sat_rte(half4 x)
{
  return __clc_convert_uchar4_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_rtp(half4 x)
{
  return __clc_convert_uchar4_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_sat_rtp(half4 x)
{
  return __clc_convert_uchar4_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_rtn(half4 x)
{
  return __clc_convert_uchar4_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_sat_rtn(half4 x)
{
  return __clc_convert_uchar4_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8(half8 x)
{
  return __clc_convert_uchar8(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_sat(half8 x)
{
  return __clc_convert_uchar8_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_rtz(half8 x)
{
  return __clc_convert_uchar8_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_sat_rtz(half8 x)
{
  return __clc_convert_uchar8_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_rte(half8 x)
{
  return __clc_convert_uchar8_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_sat_rte(half8 x)
{
  return __clc_convert_uchar8_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_rtp(half8 x)
{
  return __clc_convert_uchar8_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_sat_rtp(half8 x)
{
  return __clc_convert_uchar8_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_rtn(half8 x)
{
  return __clc_convert_uchar8_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_sat_rtn(half8 x)
{
  return __clc_convert_uchar8_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16(half16 x)
{
  return __clc_convert_uchar16(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_sat(half16 x)
{
  return __clc_convert_uchar16_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_rtz(half16 x)
{
  return __clc_convert_uchar16_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_sat_rtz(half16 x)
{
  return __clc_convert_uchar16_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_rte(half16 x)
{
  return __clc_convert_uchar16_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_sat_rte(half16 x)
{
  return __clc_convert_uchar16_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_rtp(half16 x)
{
  return __clc_convert_uchar16_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_sat_rtp(half16 x)
{
  return __clc_convert_uchar16_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_rtn(half16 x)
{
  return __clc_convert_uchar16_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_sat_rtn(half16 x)
{
  return __clc_convert_uchar16_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort(half x)
{
  return __clc_convert_short(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_sat(half x)
{
  return __clc_convert_short_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_rtz(half x)
{
  return __clc_convert_short_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_sat_rtz(half x)
{
  return __clc_convert_short_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_rte(half x)
{
  return __clc_convert_short_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_sat_rte(half x)
{
  return __clc_convert_short_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_rtp(half x)
{
  return __clc_convert_short_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_sat_rtp(half x)
{
  return __clc_convert_short_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_rtn(half x)
{
  return __clc_convert_short_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_sat_rtn(half x)
{
  return __clc_convert_short_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2(half2 x)
{
  return __clc_convert_short2(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_sat(half2 x)
{
  return __clc_convert_short2_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_rtz(half2 x)
{
  return __clc_convert_short2_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_sat_rtz(half2 x)
{
  return __clc_convert_short2_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_rte(half2 x)
{
  return __clc_convert_short2_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_sat_rte(half2 x)
{
  return __clc_convert_short2_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_rtp(half2 x)
{
  return __clc_convert_short2_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_sat_rtp(half2 x)
{
  return __clc_convert_short2_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_rtn(half2 x)
{
  return __clc_convert_short2_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_sat_rtn(half2 x)
{
  return __clc_convert_short2_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3(half3 x)
{
  return __clc_convert_short3(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_sat(half3 x)
{
  return __clc_convert_short3_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_rtz(half3 x)
{
  return __clc_convert_short3_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_sat_rtz(half3 x)
{
  return __clc_convert_short3_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_rte(half3 x)
{
  return __clc_convert_short3_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_sat_rte(half3 x)
{
  return __clc_convert_short3_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_rtp(half3 x)
{
  return __clc_convert_short3_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_sat_rtp(half3 x)
{
  return __clc_convert_short3_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_rtn(half3 x)
{
  return __clc_convert_short3_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_sat_rtn(half3 x)
{
  return __clc_convert_short3_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4(half4 x)
{
  return __clc_convert_short4(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_sat(half4 x)
{
  return __clc_convert_short4_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_rtz(half4 x)
{
  return __clc_convert_short4_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_sat_rtz(half4 x)
{
  return __clc_convert_short4_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_rte(half4 x)
{
  return __clc_convert_short4_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_sat_rte(half4 x)
{
  return __clc_convert_short4_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_rtp(half4 x)
{
  return __clc_convert_short4_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_sat_rtp(half4 x)
{
  return __clc_convert_short4_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_rtn(half4 x)
{
  return __clc_convert_short4_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_sat_rtn(half4 x)
{
  return __clc_convert_short4_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8(half8 x)
{
  return __clc_convert_short8(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_sat(half8 x)
{
  return __clc_convert_short8_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_rtz(half8 x)
{
  return __clc_convert_short8_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_sat_rtz(half8 x)
{
  return __clc_convert_short8_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_rte(half8 x)
{
  return __clc_convert_short8_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_sat_rte(half8 x)
{
  return __clc_convert_short8_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_rtp(half8 x)
{
  return __clc_convert_short8_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_sat_rtp(half8 x)
{
  return __clc_convert_short8_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_rtn(half8 x)
{
  return __clc_convert_short8_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_sat_rtn(half8 x)
{
  return __clc_convert_short8_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16(half16 x)
{
  return __clc_convert_short16(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_sat(half16 x)
{
  return __clc_convert_short16_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_rtz(half16 x)
{
  return __clc_convert_short16_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_sat_rtz(half16 x)
{
  return __clc_convert_short16_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_rte(half16 x)
{
  return __clc_convert_short16_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_sat_rte(half16 x)
{
  return __clc_convert_short16_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_rtp(half16 x)
{
  return __clc_convert_short16_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_sat_rtp(half16 x)
{
  return __clc_convert_short16_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_rtn(half16 x)
{
  return __clc_convert_short16_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_sat_rtn(half16 x)
{
  return __clc_convert_short16_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort(half x)
{
  return __clc_convert_ushort(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_sat(half x)
{
  return __clc_convert_ushort_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_rtz(half x)
{
  return __clc_convert_ushort_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_sat_rtz(half x)
{
  return __clc_convert_ushort_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_rte(half x)
{
  return __clc_convert_ushort_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_sat_rte(half x)
{
  return __clc_convert_ushort_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_rtp(half x)
{
  return __clc_convert_ushort_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_sat_rtp(half x)
{
  return __clc_convert_ushort_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_rtn(half x)
{
  return __clc_convert_ushort_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_sat_rtn(half x)
{
  return __clc_convert_ushort_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2(half2 x)
{
  return __clc_convert_ushort2(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_sat(half2 x)
{
  return __clc_convert_ushort2_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_rtz(half2 x)
{
  return __clc_convert_ushort2_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_sat_rtz(half2 x)
{
  return __clc_convert_ushort2_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_rte(half2 x)
{
  return __clc_convert_ushort2_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_sat_rte(half2 x)
{
  return __clc_convert_ushort2_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_rtp(half2 x)
{
  return __clc_convert_ushort2_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_sat_rtp(half2 x)
{
  return __clc_convert_ushort2_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_rtn(half2 x)
{
  return __clc_convert_ushort2_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_sat_rtn(half2 x)
{
  return __clc_convert_ushort2_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3(half3 x)
{
  return __clc_convert_ushort3(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_sat(half3 x)
{
  return __clc_convert_ushort3_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_rtz(half3 x)
{
  return __clc_convert_ushort3_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_sat_rtz(half3 x)
{
  return __clc_convert_ushort3_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_rte(half3 x)
{
  return __clc_convert_ushort3_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_sat_rte(half3 x)
{
  return __clc_convert_ushort3_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_rtp(half3 x)
{
  return __clc_convert_ushort3_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_sat_rtp(half3 x)
{
  return __clc_convert_ushort3_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_rtn(half3 x)
{
  return __clc_convert_ushort3_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_sat_rtn(half3 x)
{
  return __clc_convert_ushort3_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4(half4 x)
{
  return __clc_convert_ushort4(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_sat(half4 x)
{
  return __clc_convert_ushort4_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_rtz(half4 x)
{
  return __clc_convert_ushort4_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_sat_rtz(half4 x)
{
  return __clc_convert_ushort4_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_rte(half4 x)
{
  return __clc_convert_ushort4_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_sat_rte(half4 x)
{
  return __clc_convert_ushort4_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_rtp(half4 x)
{
  return __clc_convert_ushort4_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_sat_rtp(half4 x)
{
  return __clc_convert_ushort4_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_rtn(half4 x)
{
  return __clc_convert_ushort4_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_sat_rtn(half4 x)
{
  return __clc_convert_ushort4_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8(half8 x)
{
  return __clc_convert_ushort8(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_sat(half8 x)
{
  return __clc_convert_ushort8_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_rtz(half8 x)
{
  return __clc_convert_ushort8_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_sat_rtz(half8 x)
{
  return __clc_convert_ushort8_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_rte(half8 x)
{
  return __clc_convert_ushort8_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_sat_rte(half8 x)
{
  return __clc_convert_ushort8_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_rtp(half8 x)
{
  return __clc_convert_ushort8_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_sat_rtp(half8 x)
{
  return __clc_convert_ushort8_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_rtn(half8 x)
{
  return __clc_convert_ushort8_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_sat_rtn(half8 x)
{
  return __clc_convert_ushort8_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16(half16 x)
{
  return __clc_convert_ushort16(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_sat(half16 x)
{
  return __clc_convert_ushort16_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_rtz(half16 x)
{
  return __clc_convert_ushort16_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_sat_rtz(half16 x)
{
  return __clc_convert_ushort16_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_rte(half16 x)
{
  return __clc_convert_ushort16_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_sat_rte(half16 x)
{
  return __clc_convert_ushort16_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_rtp(half16 x)
{
  return __clc_convert_ushort16_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_sat_rtp(half16 x)
{
  return __clc_convert_ushort16_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_rtn(half16 x)
{
  return __clc_convert_ushort16_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_sat_rtn(half16 x)
{
  return __clc_convert_ushort16_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint(half x)
{
  return __clc_convert_int(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_sat(half x)
{
  return __clc_convert_int_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_rtz(half x)
{
  return __clc_convert_int_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_sat_rtz(half x)
{
  return __clc_convert_int_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_rte(half x)
{
  return __clc_convert_int_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_sat_rte(half x)
{
  return __clc_convert_int_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_rtp(half x)
{
  return __clc_convert_int_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_sat_rtp(half x)
{
  return __clc_convert_int_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_rtn(half x)
{
  return __clc_convert_int_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_sat_rtn(half x)
{
  return __clc_convert_int_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2(half2 x)
{
  return __clc_convert_int2(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_sat(half2 x)
{
  return __clc_convert_int2_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_rtz(half2 x)
{
  return __clc_convert_int2_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_sat_rtz(half2 x)
{
  return __clc_convert_int2_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_rte(half2 x)
{
  return __clc_convert_int2_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_sat_rte(half2 x)
{
  return __clc_convert_int2_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_rtp(half2 x)
{
  return __clc_convert_int2_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_sat_rtp(half2 x)
{
  return __clc_convert_int2_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_rtn(half2 x)
{
  return __clc_convert_int2_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_sat_rtn(half2 x)
{
  return __clc_convert_int2_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3(half3 x)
{
  return __clc_convert_int3(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_sat(half3 x)
{
  return __clc_convert_int3_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_rtz(half3 x)
{
  return __clc_convert_int3_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_sat_rtz(half3 x)
{
  return __clc_convert_int3_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_rte(half3 x)
{
  return __clc_convert_int3_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_sat_rte(half3 x)
{
  return __clc_convert_int3_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_rtp(half3 x)
{
  return __clc_convert_int3_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_sat_rtp(half3 x)
{
  return __clc_convert_int3_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_rtn(half3 x)
{
  return __clc_convert_int3_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_sat_rtn(half3 x)
{
  return __clc_convert_int3_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4(half4 x)
{
  return __clc_convert_int4(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_sat(half4 x)
{
  return __clc_convert_int4_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_rtz(half4 x)
{
  return __clc_convert_int4_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_sat_rtz(half4 x)
{
  return __clc_convert_int4_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_rte(half4 x)
{
  return __clc_convert_int4_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_sat_rte(half4 x)
{
  return __clc_convert_int4_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_rtp(half4 x)
{
  return __clc_convert_int4_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_sat_rtp(half4 x)
{
  return __clc_convert_int4_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_rtn(half4 x)
{
  return __clc_convert_int4_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_sat_rtn(half4 x)
{
  return __clc_convert_int4_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8(half8 x)
{
  return __clc_convert_int8(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_sat(half8 x)
{
  return __clc_convert_int8_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_rtz(half8 x)
{
  return __clc_convert_int8_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_sat_rtz(half8 x)
{
  return __clc_convert_int8_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_rte(half8 x)
{
  return __clc_convert_int8_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_sat_rte(half8 x)
{
  return __clc_convert_int8_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_rtp(half8 x)
{
  return __clc_convert_int8_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_sat_rtp(half8 x)
{
  return __clc_convert_int8_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_rtn(half8 x)
{
  return __clc_convert_int8_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_sat_rtn(half8 x)
{
  return __clc_convert_int8_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16(half16 x)
{
  return __clc_convert_int16(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_sat(half16 x)
{
  return __clc_convert_int16_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_rtz(half16 x)
{
  return __clc_convert_int16_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_sat_rtz(half16 x)
{
  return __clc_convert_int16_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_rte(half16 x)
{
  return __clc_convert_int16_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_sat_rte(half16 x)
{
  return __clc_convert_int16_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_rtp(half16 x)
{
  return __clc_convert_int16_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_sat_rtp(half16 x)
{
  return __clc_convert_int16_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_rtn(half16 x)
{
  return __clc_convert_int16_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_sat_rtn(half16 x)
{
  return __clc_convert_int16_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint(half x)
{
  return __clc_convert_uint(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_sat(half x)
{
  return __clc_convert_uint_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_rtz(half x)
{
  return __clc_convert_uint_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_sat_rtz(half x)
{
  return __clc_convert_uint_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_rte(half x)
{
  return __clc_convert_uint_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_sat_rte(half x)
{
  return __clc_convert_uint_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_rtp(half x)
{
  return __clc_convert_uint_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_sat_rtp(half x)
{
  return __clc_convert_uint_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_rtn(half x)
{
  return __clc_convert_uint_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_sat_rtn(half x)
{
  return __clc_convert_uint_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2(half2 x)
{
  return __clc_convert_uint2(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_sat(half2 x)
{
  return __clc_convert_uint2_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_rtz(half2 x)
{
  return __clc_convert_uint2_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_sat_rtz(half2 x)
{
  return __clc_convert_uint2_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_rte(half2 x)
{
  return __clc_convert_uint2_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_sat_rte(half2 x)
{
  return __clc_convert_uint2_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_rtp(half2 x)
{
  return __clc_convert_uint2_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_sat_rtp(half2 x)
{
  return __clc_convert_uint2_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_rtn(half2 x)
{
  return __clc_convert_uint2_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_sat_rtn(half2 x)
{
  return __clc_convert_uint2_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3(half3 x)
{
  return __clc_convert_uint3(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_sat(half3 x)
{
  return __clc_convert_uint3_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_rtz(half3 x)
{
  return __clc_convert_uint3_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_sat_rtz(half3 x)
{
  return __clc_convert_uint3_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_rte(half3 x)
{
  return __clc_convert_uint3_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_sat_rte(half3 x)
{
  return __clc_convert_uint3_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_rtp(half3 x)
{
  return __clc_convert_uint3_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_sat_rtp(half3 x)
{
  return __clc_convert_uint3_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_rtn(half3 x)
{
  return __clc_convert_uint3_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_sat_rtn(half3 x)
{
  return __clc_convert_uint3_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4(half4 x)
{
  return __clc_convert_uint4(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_sat(half4 x)
{
  return __clc_convert_uint4_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_rtz(half4 x)
{
  return __clc_convert_uint4_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_sat_rtz(half4 x)
{
  return __clc_convert_uint4_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_rte(half4 x)
{
  return __clc_convert_uint4_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_sat_rte(half4 x)
{
  return __clc_convert_uint4_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_rtp(half4 x)
{
  return __clc_convert_uint4_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_sat_rtp(half4 x)
{
  return __clc_convert_uint4_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_rtn(half4 x)
{
  return __clc_convert_uint4_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_sat_rtn(half4 x)
{
  return __clc_convert_uint4_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8(half8 x)
{
  return __clc_convert_uint8(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_sat(half8 x)
{
  return __clc_convert_uint8_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_rtz(half8 x)
{
  return __clc_convert_uint8_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_sat_rtz(half8 x)
{
  return __clc_convert_uint8_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_rte(half8 x)
{
  return __clc_convert_uint8_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_sat_rte(half8 x)
{
  return __clc_convert_uint8_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_rtp(half8 x)
{
  return __clc_convert_uint8_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_sat_rtp(half8 x)
{
  return __clc_convert_uint8_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_rtn(half8 x)
{
  return __clc_convert_uint8_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_sat_rtn(half8 x)
{
  return __clc_convert_uint8_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16(half16 x)
{
  return __clc_convert_uint16(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_sat(half16 x)
{
  return __clc_convert_uint16_sat(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_rtz(half16 x)
{
  return __clc_convert_uint16_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_sat_rtz(half16 x)
{
  return __clc_convert_uint16_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_rte(half16 x)
{
  return __clc_convert_uint16_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_sat_rte(half16 x)
{
  return __clc_convert_uint16_sat_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_rtp(half16 x)
{
  return __clc_convert_uint16_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_sat_rtp(half16 x)
{
  return __clc_convert_uint16_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_rtn(half16 x)
{
  return __clc_convert_uint16_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_sat_rtn(half16 x)
{
  return __clc_convert_uint16_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong(half x)
{
  return __clc_convert_long(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_sat(half x)
{
  return __clc_convert_long_sat(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_rtz(half x)
{
  return __clc_convert_long_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_sat_rtz(half x)
{
  return __clc_convert_long_sat_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_rte(half x)
{
  return __clc_convert_long_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_sat_rte(half x)
{
  return __clc_convert_long_sat_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_rtp(half x)
{
  return __clc_convert_long_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_sat_rtp(half x)
{
  return __clc_convert_long_sat_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_rtn(half x)
{
  return __clc_convert_long_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_sat_rtn(half x)
{
  return __clc_convert_long_sat_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2(half2 x)
{
  return __clc_convert_long2(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_sat(half2 x)
{
  return __clc_convert_long2_sat(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_rtz(half2 x)
{
  return __clc_convert_long2_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_sat_rtz(half2 x)
{
  return __clc_convert_long2_sat_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_rte(half2 x)
{
  return __clc_convert_long2_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_sat_rte(half2 x)
{
  return __clc_convert_long2_sat_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_rtp(half2 x)
{
  return __clc_convert_long2_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_sat_rtp(half2 x)
{
  return __clc_convert_long2_sat_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_rtn(half2 x)
{
  return __clc_convert_long2_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_sat_rtn(half2 x)
{
  return __clc_convert_long2_sat_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3(half3 x)
{
  return __clc_convert_long3(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_sat(half3 x)
{
  return __clc_convert_long3_sat(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_rtz(half3 x)
{
  return __clc_convert_long3_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_sat_rtz(half3 x)
{
  return __clc_convert_long3_sat_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_rte(half3 x)
{
  return __clc_convert_long3_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_sat_rte(half3 x)
{
  return __clc_convert_long3_sat_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_rtp(half3 x)
{
  return __clc_convert_long3_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_sat_rtp(half3 x)
{
  return __clc_convert_long3_sat_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_rtn(half3 x)
{
  return __clc_convert_long3_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_sat_rtn(half3 x)
{
  return __clc_convert_long3_sat_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4(half4 x)
{
  return __clc_convert_long4(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_sat(half4 x)
{
  return __clc_convert_long4_sat(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_rtz(half4 x)
{
  return __clc_convert_long4_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_sat_rtz(half4 x)
{
  return __clc_convert_long4_sat_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_rte(half4 x)
{
  return __clc_convert_long4_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_sat_rte(half4 x)
{
  return __clc_convert_long4_sat_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_rtp(half4 x)
{
  return __clc_convert_long4_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_sat_rtp(half4 x)
{
  return __clc_convert_long4_sat_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_rtn(half4 x)
{
  return __clc_convert_long4_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_sat_rtn(half4 x)
{
  return __clc_convert_long4_sat_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8(half8 x)
{
  return __clc_convert_long8(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_sat(half8 x)
{
  return __clc_convert_long8_sat(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_rtz(half8 x)
{
  return __clc_convert_long8_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_sat_rtz(half8 x)
{
  return __clc_convert_long8_sat_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_rte(half8 x)
{
  return __clc_convert_long8_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_sat_rte(half8 x)
{
  return __clc_convert_long8_sat_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_rtp(half8 x)
{
  return __clc_convert_long8_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_sat_rtp(half8 x)
{
  return __clc_convert_long8_sat_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_rtn(half8 x)
{
  return __clc_convert_long8_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_sat_rtn(half8 x)
{
  return __clc_convert_long8_sat_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16(half16 x)
{
  return __clc_convert_long16(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_sat(half16 x)
{
  return __clc_convert_long16_sat(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_rtz(half16 x)
{
  return __clc_convert_long16_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_sat_rtz(half16 x)
{
  return __clc_convert_long16_sat_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_rte(half16 x)
{
  return __clc_convert_long16_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_sat_rte(half16 x)
{
  return __clc_convert_long16_sat_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_rtp(half16 x)
{
  return __clc_convert_long16_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_sat_rtp(half16 x)
{
  return __clc_convert_long16_sat_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_rtn(half16 x)
{
  return __clc_convert_long16_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_sat_rtn(half16 x)
{
  return __clc_convert_long16_sat_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong(half x)
{
  return __clc_convert_ulong(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_sat(half x)
{
  return __clc_convert_ulong_sat(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_rtz(half x)
{
  return __clc_convert_ulong_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_sat_rtz(half x)
{
  return __clc_convert_ulong_sat_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_rte(half x)
{
  return __clc_convert_ulong_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_sat_rte(half x)
{
  return __clc_convert_ulong_sat_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_rtp(half x)
{
  return __clc_convert_ulong_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_sat_rtp(half x)
{
  return __clc_convert_ulong_sat_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_rtn(half x)
{
  return __clc_convert_ulong_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_sat_rtn(half x)
{
  return __clc_convert_ulong_sat_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2(half2 x)
{
  return __clc_convert_ulong2(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_sat(half2 x)
{
  return __clc_convert_ulong2_sat(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_rtz(half2 x)
{
  return __clc_convert_ulong2_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_sat_rtz(half2 x)
{
  return __clc_convert_ulong2_sat_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_rte(half2 x)
{
  return __clc_convert_ulong2_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_sat_rte(half2 x)
{
  return __clc_convert_ulong2_sat_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_rtp(half2 x)
{
  return __clc_convert_ulong2_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_sat_rtp(half2 x)
{
  return __clc_convert_ulong2_sat_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_rtn(half2 x)
{
  return __clc_convert_ulong2_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_sat_rtn(half2 x)
{
  return __clc_convert_ulong2_sat_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3(half3 x)
{
  return __clc_convert_ulong3(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_sat(half3 x)
{
  return __clc_convert_ulong3_sat(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_rtz(half3 x)
{
  return __clc_convert_ulong3_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_sat_rtz(half3 x)
{
  return __clc_convert_ulong3_sat_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_rte(half3 x)
{
  return __clc_convert_ulong3_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_sat_rte(half3 x)
{
  return __clc_convert_ulong3_sat_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_rtp(half3 x)
{
  return __clc_convert_ulong3_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_sat_rtp(half3 x)
{
  return __clc_convert_ulong3_sat_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_rtn(half3 x)
{
  return __clc_convert_ulong3_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_sat_rtn(half3 x)
{
  return __clc_convert_ulong3_sat_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4(half4 x)
{
  return __clc_convert_ulong4(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_sat(half4 x)
{
  return __clc_convert_ulong4_sat(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_rtz(half4 x)
{
  return __clc_convert_ulong4_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_sat_rtz(half4 x)
{
  return __clc_convert_ulong4_sat_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_rte(half4 x)
{
  return __clc_convert_ulong4_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_sat_rte(half4 x)
{
  return __clc_convert_ulong4_sat_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_rtp(half4 x)
{
  return __clc_convert_ulong4_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_sat_rtp(half4 x)
{
  return __clc_convert_ulong4_sat_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_rtn(half4 x)
{
  return __clc_convert_ulong4_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_sat_rtn(half4 x)
{
  return __clc_convert_ulong4_sat_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8(half8 x)
{
  return __clc_convert_ulong8(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_sat(half8 x)
{
  return __clc_convert_ulong8_sat(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_rtz(half8 x)
{
  return __clc_convert_ulong8_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_sat_rtz(half8 x)
{
  return __clc_convert_ulong8_sat_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_rte(half8 x)
{
  return __clc_convert_ulong8_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_sat_rte(half8 x)
{
  return __clc_convert_ulong8_sat_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_rtp(half8 x)
{
  return __clc_convert_ulong8_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_sat_rtp(half8 x)
{
  return __clc_convert_ulong8_sat_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_rtn(half8 x)
{
  return __clc_convert_ulong8_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_sat_rtn(half8 x)
{
  return __clc_convert_ulong8_sat_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16(half16 x)
{
  return __clc_convert_ulong16(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_sat(half16 x)
{
  return __clc_convert_ulong16_sat(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_rtz(half16 x)
{
  return __clc_convert_ulong16_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_sat_rtz(half16 x)
{
  return __clc_convert_ulong16_sat_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_rte(half16 x)
{
  return __clc_convert_ulong16_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_sat_rte(half16 x)
{
  return __clc_convert_ulong16_sat_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_rtp(half16 x)
{
  return __clc_convert_ulong16_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_sat_rtp(half16 x)
{
  return __clc_convert_ulong16_sat_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_rtn(half16 x)
{
  return __clc_convert_ulong16_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_sat_rtn(half16 x)
{
  return __clc_convert_ulong16_sat_rtn(x);
}

#endif
#endif
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar(float x)
{
  return __clc_convert_schar(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_sat(float x)
{
  return __clc_convert_schar_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_rtz(float x)
{
  return __clc_convert_schar_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_sat_rtz(float x)
{
  return __clc_convert_schar_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_rte(float x)
{
  return __clc_convert_schar_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_sat_rte(float x)
{
  return __clc_convert_schar_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_rtp(float x)
{
  return __clc_convert_schar_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_sat_rtp(float x)
{
  return __clc_convert_schar_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_rtn(float x)
{
  return __clc_convert_schar_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_sat_rtn(float x)
{
  return __clc_convert_schar_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2(float2 x)
{
  return __clc_convert_schar2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_sat(float2 x)
{
  return __clc_convert_schar2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_rtz(float2 x)
{
  return __clc_convert_schar2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_sat_rtz(float2 x)
{
  return __clc_convert_schar2_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_rte(float2 x)
{
  return __clc_convert_schar2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_sat_rte(float2 x)
{
  return __clc_convert_schar2_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_rtp(float2 x)
{
  return __clc_convert_schar2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_sat_rtp(float2 x)
{
  return __clc_convert_schar2_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_rtn(float2 x)
{
  return __clc_convert_schar2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_sat_rtn(float2 x)
{
  return __clc_convert_schar2_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3(float3 x)
{
  return __clc_convert_schar3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_sat(float3 x)
{
  return __clc_convert_schar3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_rtz(float3 x)
{
  return __clc_convert_schar3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_sat_rtz(float3 x)
{
  return __clc_convert_schar3_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_rte(float3 x)
{
  return __clc_convert_schar3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_sat_rte(float3 x)
{
  return __clc_convert_schar3_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_rtp(float3 x)
{
  return __clc_convert_schar3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_sat_rtp(float3 x)
{
  return __clc_convert_schar3_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_rtn(float3 x)
{
  return __clc_convert_schar3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_sat_rtn(float3 x)
{
  return __clc_convert_schar3_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4(float4 x)
{
  return __clc_convert_schar4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_sat(float4 x)
{
  return __clc_convert_schar4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_rtz(float4 x)
{
  return __clc_convert_schar4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_sat_rtz(float4 x)
{
  return __clc_convert_schar4_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_rte(float4 x)
{
  return __clc_convert_schar4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_sat_rte(float4 x)
{
  return __clc_convert_schar4_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_rtp(float4 x)
{
  return __clc_convert_schar4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_sat_rtp(float4 x)
{
  return __clc_convert_schar4_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_rtn(float4 x)
{
  return __clc_convert_schar4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_sat_rtn(float4 x)
{
  return __clc_convert_schar4_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8(float8 x)
{
  return __clc_convert_schar8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_sat(float8 x)
{
  return __clc_convert_schar8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_rtz(float8 x)
{
  return __clc_convert_schar8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_sat_rtz(float8 x)
{
  return __clc_convert_schar8_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_rte(float8 x)
{
  return __clc_convert_schar8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_sat_rte(float8 x)
{
  return __clc_convert_schar8_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_rtp(float8 x)
{
  return __clc_convert_schar8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_sat_rtp(float8 x)
{
  return __clc_convert_schar8_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_rtn(float8 x)
{
  return __clc_convert_schar8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_sat_rtn(float8 x)
{
  return __clc_convert_schar8_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16(float16 x)
{
  return __clc_convert_schar16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_sat(float16 x)
{
  return __clc_convert_schar16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_rtz(float16 x)
{
  return __clc_convert_schar16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_sat_rtz(float16 x)
{
  return __clc_convert_schar16_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_rte(float16 x)
{
  return __clc_convert_schar16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_sat_rte(float16 x)
{
  return __clc_convert_schar16_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_rtp(float16 x)
{
  return __clc_convert_schar16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_sat_rtp(float16 x)
{
  return __clc_convert_schar16_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_rtn(float16 x)
{
  return __clc_convert_schar16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_sat_rtn(float16 x)
{
  return __clc_convert_schar16_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar(float x)
{
  return __clc_convert_uchar(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_sat(float x)
{
  return __clc_convert_uchar_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_rtz(float x)
{
  return __clc_convert_uchar_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_sat_rtz(float x)
{
  return __clc_convert_uchar_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_rte(float x)
{
  return __clc_convert_uchar_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_sat_rte(float x)
{
  return __clc_convert_uchar_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_rtp(float x)
{
  return __clc_convert_uchar_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_sat_rtp(float x)
{
  return __clc_convert_uchar_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_rtn(float x)
{
  return __clc_convert_uchar_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_sat_rtn(float x)
{
  return __clc_convert_uchar_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2(float2 x)
{
  return __clc_convert_uchar2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_sat(float2 x)
{
  return __clc_convert_uchar2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_rtz(float2 x)
{
  return __clc_convert_uchar2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_sat_rtz(float2 x)
{
  return __clc_convert_uchar2_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_rte(float2 x)
{
  return __clc_convert_uchar2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_sat_rte(float2 x)
{
  return __clc_convert_uchar2_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_rtp(float2 x)
{
  return __clc_convert_uchar2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_sat_rtp(float2 x)
{
  return __clc_convert_uchar2_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_rtn(float2 x)
{
  return __clc_convert_uchar2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_sat_rtn(float2 x)
{
  return __clc_convert_uchar2_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3(float3 x)
{
  return __clc_convert_uchar3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_sat(float3 x)
{
  return __clc_convert_uchar3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_rtz(float3 x)
{
  return __clc_convert_uchar3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_sat_rtz(float3 x)
{
  return __clc_convert_uchar3_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_rte(float3 x)
{
  return __clc_convert_uchar3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_sat_rte(float3 x)
{
  return __clc_convert_uchar3_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_rtp(float3 x)
{
  return __clc_convert_uchar3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_sat_rtp(float3 x)
{
  return __clc_convert_uchar3_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_rtn(float3 x)
{
  return __clc_convert_uchar3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_sat_rtn(float3 x)
{
  return __clc_convert_uchar3_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4(float4 x)
{
  return __clc_convert_uchar4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_sat(float4 x)
{
  return __clc_convert_uchar4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_rtz(float4 x)
{
  return __clc_convert_uchar4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_sat_rtz(float4 x)
{
  return __clc_convert_uchar4_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_rte(float4 x)
{
  return __clc_convert_uchar4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_sat_rte(float4 x)
{
  return __clc_convert_uchar4_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_rtp(float4 x)
{
  return __clc_convert_uchar4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_sat_rtp(float4 x)
{
  return __clc_convert_uchar4_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_rtn(float4 x)
{
  return __clc_convert_uchar4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_sat_rtn(float4 x)
{
  return __clc_convert_uchar4_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8(float8 x)
{
  return __clc_convert_uchar8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_sat(float8 x)
{
  return __clc_convert_uchar8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_rtz(float8 x)
{
  return __clc_convert_uchar8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_sat_rtz(float8 x)
{
  return __clc_convert_uchar8_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_rte(float8 x)
{
  return __clc_convert_uchar8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_sat_rte(float8 x)
{
  return __clc_convert_uchar8_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_rtp(float8 x)
{
  return __clc_convert_uchar8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_sat_rtp(float8 x)
{
  return __clc_convert_uchar8_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_rtn(float8 x)
{
  return __clc_convert_uchar8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_sat_rtn(float8 x)
{
  return __clc_convert_uchar8_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16(float16 x)
{
  return __clc_convert_uchar16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_sat(float16 x)
{
  return __clc_convert_uchar16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_rtz(float16 x)
{
  return __clc_convert_uchar16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_sat_rtz(float16 x)
{
  return __clc_convert_uchar16_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_rte(float16 x)
{
  return __clc_convert_uchar16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_sat_rte(float16 x)
{
  return __clc_convert_uchar16_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_rtp(float16 x)
{
  return __clc_convert_uchar16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_sat_rtp(float16 x)
{
  return __clc_convert_uchar16_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_rtn(float16 x)
{
  return __clc_convert_uchar16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_sat_rtn(float16 x)
{
  return __clc_convert_uchar16_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort(float x)
{
  return __clc_convert_short(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_sat(float x)
{
  return __clc_convert_short_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_rtz(float x)
{
  return __clc_convert_short_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_sat_rtz(float x)
{
  return __clc_convert_short_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_rte(float x)
{
  return __clc_convert_short_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_sat_rte(float x)
{
  return __clc_convert_short_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_rtp(float x)
{
  return __clc_convert_short_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_sat_rtp(float x)
{
  return __clc_convert_short_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_rtn(float x)
{
  return __clc_convert_short_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_sat_rtn(float x)
{
  return __clc_convert_short_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2(float2 x)
{
  return __clc_convert_short2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_sat(float2 x)
{
  return __clc_convert_short2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_rtz(float2 x)
{
  return __clc_convert_short2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_sat_rtz(float2 x)
{
  return __clc_convert_short2_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_rte(float2 x)
{
  return __clc_convert_short2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_sat_rte(float2 x)
{
  return __clc_convert_short2_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_rtp(float2 x)
{
  return __clc_convert_short2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_sat_rtp(float2 x)
{
  return __clc_convert_short2_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_rtn(float2 x)
{
  return __clc_convert_short2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_sat_rtn(float2 x)
{
  return __clc_convert_short2_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3(float3 x)
{
  return __clc_convert_short3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_sat(float3 x)
{
  return __clc_convert_short3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_rtz(float3 x)
{
  return __clc_convert_short3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_sat_rtz(float3 x)
{
  return __clc_convert_short3_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_rte(float3 x)
{
  return __clc_convert_short3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_sat_rte(float3 x)
{
  return __clc_convert_short3_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_rtp(float3 x)
{
  return __clc_convert_short3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_sat_rtp(float3 x)
{
  return __clc_convert_short3_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_rtn(float3 x)
{
  return __clc_convert_short3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_sat_rtn(float3 x)
{
  return __clc_convert_short3_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4(float4 x)
{
  return __clc_convert_short4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_sat(float4 x)
{
  return __clc_convert_short4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_rtz(float4 x)
{
  return __clc_convert_short4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_sat_rtz(float4 x)
{
  return __clc_convert_short4_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_rte(float4 x)
{
  return __clc_convert_short4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_sat_rte(float4 x)
{
  return __clc_convert_short4_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_rtp(float4 x)
{
  return __clc_convert_short4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_sat_rtp(float4 x)
{
  return __clc_convert_short4_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_rtn(float4 x)
{
  return __clc_convert_short4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_sat_rtn(float4 x)
{
  return __clc_convert_short4_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8(float8 x)
{
  return __clc_convert_short8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_sat(float8 x)
{
  return __clc_convert_short8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_rtz(float8 x)
{
  return __clc_convert_short8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_sat_rtz(float8 x)
{
  return __clc_convert_short8_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_rte(float8 x)
{
  return __clc_convert_short8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_sat_rte(float8 x)
{
  return __clc_convert_short8_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_rtp(float8 x)
{
  return __clc_convert_short8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_sat_rtp(float8 x)
{
  return __clc_convert_short8_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_rtn(float8 x)
{
  return __clc_convert_short8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_sat_rtn(float8 x)
{
  return __clc_convert_short8_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16(float16 x)
{
  return __clc_convert_short16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_sat(float16 x)
{
  return __clc_convert_short16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_rtz(float16 x)
{
  return __clc_convert_short16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_sat_rtz(float16 x)
{
  return __clc_convert_short16_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_rte(float16 x)
{
  return __clc_convert_short16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_sat_rte(float16 x)
{
  return __clc_convert_short16_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_rtp(float16 x)
{
  return __clc_convert_short16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_sat_rtp(float16 x)
{
  return __clc_convert_short16_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_rtn(float16 x)
{
  return __clc_convert_short16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_sat_rtn(float16 x)
{
  return __clc_convert_short16_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort(float x)
{
  return __clc_convert_ushort(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_sat(float x)
{
  return __clc_convert_ushort_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_rtz(float x)
{
  return __clc_convert_ushort_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_sat_rtz(float x)
{
  return __clc_convert_ushort_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_rte(float x)
{
  return __clc_convert_ushort_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_sat_rte(float x)
{
  return __clc_convert_ushort_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_rtp(float x)
{
  return __clc_convert_ushort_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_sat_rtp(float x)
{
  return __clc_convert_ushort_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_rtn(float x)
{
  return __clc_convert_ushort_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_sat_rtn(float x)
{
  return __clc_convert_ushort_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2(float2 x)
{
  return __clc_convert_ushort2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_sat(float2 x)
{
  return __clc_convert_ushort2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_rtz(float2 x)
{
  return __clc_convert_ushort2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_sat_rtz(float2 x)
{
  return __clc_convert_ushort2_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_rte(float2 x)
{
  return __clc_convert_ushort2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_sat_rte(float2 x)
{
  return __clc_convert_ushort2_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_rtp(float2 x)
{
  return __clc_convert_ushort2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_sat_rtp(float2 x)
{
  return __clc_convert_ushort2_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_rtn(float2 x)
{
  return __clc_convert_ushort2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_sat_rtn(float2 x)
{
  return __clc_convert_ushort2_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3(float3 x)
{
  return __clc_convert_ushort3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_sat(float3 x)
{
  return __clc_convert_ushort3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_rtz(float3 x)
{
  return __clc_convert_ushort3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_sat_rtz(float3 x)
{
  return __clc_convert_ushort3_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_rte(float3 x)
{
  return __clc_convert_ushort3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_sat_rte(float3 x)
{
  return __clc_convert_ushort3_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_rtp(float3 x)
{
  return __clc_convert_ushort3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_sat_rtp(float3 x)
{
  return __clc_convert_ushort3_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_rtn(float3 x)
{
  return __clc_convert_ushort3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_sat_rtn(float3 x)
{
  return __clc_convert_ushort3_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4(float4 x)
{
  return __clc_convert_ushort4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_sat(float4 x)
{
  return __clc_convert_ushort4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_rtz(float4 x)
{
  return __clc_convert_ushort4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_sat_rtz(float4 x)
{
  return __clc_convert_ushort4_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_rte(float4 x)
{
  return __clc_convert_ushort4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_sat_rte(float4 x)
{
  return __clc_convert_ushort4_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_rtp(float4 x)
{
  return __clc_convert_ushort4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_sat_rtp(float4 x)
{
  return __clc_convert_ushort4_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_rtn(float4 x)
{
  return __clc_convert_ushort4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_sat_rtn(float4 x)
{
  return __clc_convert_ushort4_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8(float8 x)
{
  return __clc_convert_ushort8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_sat(float8 x)
{
  return __clc_convert_ushort8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_rtz(float8 x)
{
  return __clc_convert_ushort8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_sat_rtz(float8 x)
{
  return __clc_convert_ushort8_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_rte(float8 x)
{
  return __clc_convert_ushort8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_sat_rte(float8 x)
{
  return __clc_convert_ushort8_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_rtp(float8 x)
{
  return __clc_convert_ushort8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_sat_rtp(float8 x)
{
  return __clc_convert_ushort8_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_rtn(float8 x)
{
  return __clc_convert_ushort8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_sat_rtn(float8 x)
{
  return __clc_convert_ushort8_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16(float16 x)
{
  return __clc_convert_ushort16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_sat(float16 x)
{
  return __clc_convert_ushort16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_rtz(float16 x)
{
  return __clc_convert_ushort16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_sat_rtz(float16 x)
{
  return __clc_convert_ushort16_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_rte(float16 x)
{
  return __clc_convert_ushort16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_sat_rte(float16 x)
{
  return __clc_convert_ushort16_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_rtp(float16 x)
{
  return __clc_convert_ushort16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_sat_rtp(float16 x)
{
  return __clc_convert_ushort16_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_rtn(float16 x)
{
  return __clc_convert_ushort16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_sat_rtn(float16 x)
{
  return __clc_convert_ushort16_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint(float x)
{
  return __clc_convert_int(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_sat(float x)
{
  return __clc_convert_int_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_rtz(float x)
{
  return __clc_convert_int_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_sat_rtz(float x)
{
  return __clc_convert_int_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_rte(float x)
{
  return __clc_convert_int_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_sat_rte(float x)
{
  return __clc_convert_int_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_rtp(float x)
{
  return __clc_convert_int_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_sat_rtp(float x)
{
  return __clc_convert_int_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_rtn(float x)
{
  return __clc_convert_int_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_sat_rtn(float x)
{
  return __clc_convert_int_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2(float2 x)
{
  return __clc_convert_int2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_sat(float2 x)
{
  return __clc_convert_int2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_rtz(float2 x)
{
  return __clc_convert_int2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_sat_rtz(float2 x)
{
  return __clc_convert_int2_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_rte(float2 x)
{
  return __clc_convert_int2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_sat_rte(float2 x)
{
  return __clc_convert_int2_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_rtp(float2 x)
{
  return __clc_convert_int2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_sat_rtp(float2 x)
{
  return __clc_convert_int2_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_rtn(float2 x)
{
  return __clc_convert_int2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_sat_rtn(float2 x)
{
  return __clc_convert_int2_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3(float3 x)
{
  return __clc_convert_int3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_sat(float3 x)
{
  return __clc_convert_int3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_rtz(float3 x)
{
  return __clc_convert_int3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_sat_rtz(float3 x)
{
  return __clc_convert_int3_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_rte(float3 x)
{
  return __clc_convert_int3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_sat_rte(float3 x)
{
  return __clc_convert_int3_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_rtp(float3 x)
{
  return __clc_convert_int3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_sat_rtp(float3 x)
{
  return __clc_convert_int3_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_rtn(float3 x)
{
  return __clc_convert_int3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_sat_rtn(float3 x)
{
  return __clc_convert_int3_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4(float4 x)
{
  return __clc_convert_int4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_sat(float4 x)
{
  return __clc_convert_int4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_rtz(float4 x)
{
  return __clc_convert_int4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_sat_rtz(float4 x)
{
  return __clc_convert_int4_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_rte(float4 x)
{
  return __clc_convert_int4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_sat_rte(float4 x)
{
  return __clc_convert_int4_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_rtp(float4 x)
{
  return __clc_convert_int4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_sat_rtp(float4 x)
{
  return __clc_convert_int4_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_rtn(float4 x)
{
  return __clc_convert_int4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_sat_rtn(float4 x)
{
  return __clc_convert_int4_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8(float8 x)
{
  return __clc_convert_int8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_sat(float8 x)
{
  return __clc_convert_int8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_rtz(float8 x)
{
  return __clc_convert_int8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_sat_rtz(float8 x)
{
  return __clc_convert_int8_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_rte(float8 x)
{
  return __clc_convert_int8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_sat_rte(float8 x)
{
  return __clc_convert_int8_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_rtp(float8 x)
{
  return __clc_convert_int8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_sat_rtp(float8 x)
{
  return __clc_convert_int8_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_rtn(float8 x)
{
  return __clc_convert_int8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_sat_rtn(float8 x)
{
  return __clc_convert_int8_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16(float16 x)
{
  return __clc_convert_int16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_sat(float16 x)
{
  return __clc_convert_int16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_rtz(float16 x)
{
  return __clc_convert_int16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_sat_rtz(float16 x)
{
  return __clc_convert_int16_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_rte(float16 x)
{
  return __clc_convert_int16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_sat_rte(float16 x)
{
  return __clc_convert_int16_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_rtp(float16 x)
{
  return __clc_convert_int16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_sat_rtp(float16 x)
{
  return __clc_convert_int16_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_rtn(float16 x)
{
  return __clc_convert_int16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_sat_rtn(float16 x)
{
  return __clc_convert_int16_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint(float x)
{
  return __clc_convert_uint(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_sat(float x)
{
  return __clc_convert_uint_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_rtz(float x)
{
  return __clc_convert_uint_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_sat_rtz(float x)
{
  return __clc_convert_uint_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_rte(float x)
{
  return __clc_convert_uint_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_sat_rte(float x)
{
  return __clc_convert_uint_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_rtp(float x)
{
  return __clc_convert_uint_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_sat_rtp(float x)
{
  return __clc_convert_uint_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_rtn(float x)
{
  return __clc_convert_uint_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_sat_rtn(float x)
{
  return __clc_convert_uint_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2(float2 x)
{
  return __clc_convert_uint2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_sat(float2 x)
{
  return __clc_convert_uint2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_rtz(float2 x)
{
  return __clc_convert_uint2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_sat_rtz(float2 x)
{
  return __clc_convert_uint2_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_rte(float2 x)
{
  return __clc_convert_uint2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_sat_rte(float2 x)
{
  return __clc_convert_uint2_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_rtp(float2 x)
{
  return __clc_convert_uint2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_sat_rtp(float2 x)
{
  return __clc_convert_uint2_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_rtn(float2 x)
{
  return __clc_convert_uint2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_sat_rtn(float2 x)
{
  return __clc_convert_uint2_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3(float3 x)
{
  return __clc_convert_uint3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_sat(float3 x)
{
  return __clc_convert_uint3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_rtz(float3 x)
{
  return __clc_convert_uint3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_sat_rtz(float3 x)
{
  return __clc_convert_uint3_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_rte(float3 x)
{
  return __clc_convert_uint3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_sat_rte(float3 x)
{
  return __clc_convert_uint3_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_rtp(float3 x)
{
  return __clc_convert_uint3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_sat_rtp(float3 x)
{
  return __clc_convert_uint3_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_rtn(float3 x)
{
  return __clc_convert_uint3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_sat_rtn(float3 x)
{
  return __clc_convert_uint3_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4(float4 x)
{
  return __clc_convert_uint4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_sat(float4 x)
{
  return __clc_convert_uint4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_rtz(float4 x)
{
  return __clc_convert_uint4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_sat_rtz(float4 x)
{
  return __clc_convert_uint4_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_rte(float4 x)
{
  return __clc_convert_uint4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_sat_rte(float4 x)
{
  return __clc_convert_uint4_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_rtp(float4 x)
{
  return __clc_convert_uint4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_sat_rtp(float4 x)
{
  return __clc_convert_uint4_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_rtn(float4 x)
{
  return __clc_convert_uint4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_sat_rtn(float4 x)
{
  return __clc_convert_uint4_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8(float8 x)
{
  return __clc_convert_uint8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_sat(float8 x)
{
  return __clc_convert_uint8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_rtz(float8 x)
{
  return __clc_convert_uint8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_sat_rtz(float8 x)
{
  return __clc_convert_uint8_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_rte(float8 x)
{
  return __clc_convert_uint8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_sat_rte(float8 x)
{
  return __clc_convert_uint8_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_rtp(float8 x)
{
  return __clc_convert_uint8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_sat_rtp(float8 x)
{
  return __clc_convert_uint8_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_rtn(float8 x)
{
  return __clc_convert_uint8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_sat_rtn(float8 x)
{
  return __clc_convert_uint8_sat_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16(float16 x)
{
  return __clc_convert_uint16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_sat(float16 x)
{
  return __clc_convert_uint16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_rtz(float16 x)
{
  return __clc_convert_uint16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_sat_rtz(float16 x)
{
  return __clc_convert_uint16_sat_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_rte(float16 x)
{
  return __clc_convert_uint16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_sat_rte(float16 x)
{
  return __clc_convert_uint16_sat_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_rtp(float16 x)
{
  return __clc_convert_uint16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_sat_rtp(float16 x)
{
  return __clc_convert_uint16_sat_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_rtn(float16 x)
{
  return __clc_convert_uint16_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_sat_rtn(float16 x)
{
  return __clc_convert_uint16_sat_rtn(x);
}

#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong(float x)
{
  return __clc_convert_long(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_sat(float x)
{
  return __clc_convert_long_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_rtz(float x)
{
  return __clc_convert_long_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_sat_rtz(float x)
{
  return __clc_convert_long_sat_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_rte(float x)
{
  return __clc_convert_long_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_sat_rte(float x)
{
  return __clc_convert_long_sat_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_rtp(float x)
{
  return __clc_convert_long_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_sat_rtp(float x)
{
  return __clc_convert_long_sat_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_rtn(float x)
{
  return __clc_convert_long_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_sat_rtn(float x)
{
  return __clc_convert_long_sat_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2(float2 x)
{
  return __clc_convert_long2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_sat(float2 x)
{
  return __clc_convert_long2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_rtz(float2 x)
{
  return __clc_convert_long2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_sat_rtz(float2 x)
{
  return __clc_convert_long2_sat_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_rte(float2 x)
{
  return __clc_convert_long2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_sat_rte(float2 x)
{
  return __clc_convert_long2_sat_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_rtp(float2 x)
{
  return __clc_convert_long2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_sat_rtp(float2 x)
{
  return __clc_convert_long2_sat_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_rtn(float2 x)
{
  return __clc_convert_long2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_sat_rtn(float2 x)
{
  return __clc_convert_long2_sat_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3(float3 x)
{
  return __clc_convert_long3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_sat(float3 x)
{
  return __clc_convert_long3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_rtz(float3 x)
{
  return __clc_convert_long3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_sat_rtz(float3 x)
{
  return __clc_convert_long3_sat_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_rte(float3 x)
{
  return __clc_convert_long3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_sat_rte(float3 x)
{
  return __clc_convert_long3_sat_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_rtp(float3 x)
{
  return __clc_convert_long3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_sat_rtp(float3 x)
{
  return __clc_convert_long3_sat_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_rtn(float3 x)
{
  return __clc_convert_long3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_sat_rtn(float3 x)
{
  return __clc_convert_long3_sat_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4(float4 x)
{
  return __clc_convert_long4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_sat(float4 x)
{
  return __clc_convert_long4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_rtz(float4 x)
{
  return __clc_convert_long4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_sat_rtz(float4 x)
{
  return __clc_convert_long4_sat_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_rte(float4 x)
{
  return __clc_convert_long4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_sat_rte(float4 x)
{
  return __clc_convert_long4_sat_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_rtp(float4 x)
{
  return __clc_convert_long4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_sat_rtp(float4 x)
{
  return __clc_convert_long4_sat_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_rtn(float4 x)
{
  return __clc_convert_long4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_sat_rtn(float4 x)
{
  return __clc_convert_long4_sat_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8(float8 x)
{
  return __clc_convert_long8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_sat(float8 x)
{
  return __clc_convert_long8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_rtz(float8 x)
{
  return __clc_convert_long8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_sat_rtz(float8 x)
{
  return __clc_convert_long8_sat_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_rte(float8 x)
{
  return __clc_convert_long8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_sat_rte(float8 x)
{
  return __clc_convert_long8_sat_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_rtp(float8 x)
{
  return __clc_convert_long8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_sat_rtp(float8 x)
{
  return __clc_convert_long8_sat_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_rtn(float8 x)
{
  return __clc_convert_long8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_sat_rtn(float8 x)
{
  return __clc_convert_long8_sat_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16(float16 x)
{
  return __clc_convert_long16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_sat(float16 x)
{
  return __clc_convert_long16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_rtz(float16 x)
{
  return __clc_convert_long16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_sat_rtz(float16 x)
{
  return __clc_convert_long16_sat_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_rte(float16 x)
{
  return __clc_convert_long16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_sat_rte(float16 x)
{
  return __clc_convert_long16_sat_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_rtp(float16 x)
{
  return __clc_convert_long16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_sat_rtp(float16 x)
{
  return __clc_convert_long16_sat_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_rtn(float16 x)
{
  return __clc_convert_long16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_sat_rtn(float16 x)
{
  return __clc_convert_long16_sat_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong(float x)
{
  return __clc_convert_ulong(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_sat(float x)
{
  return __clc_convert_ulong_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_rtz(float x)
{
  return __clc_convert_ulong_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_sat_rtz(float x)
{
  return __clc_convert_ulong_sat_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_rte(float x)
{
  return __clc_convert_ulong_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_sat_rte(float x)
{
  return __clc_convert_ulong_sat_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_rtp(float x)
{
  return __clc_convert_ulong_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_sat_rtp(float x)
{
  return __clc_convert_ulong_sat_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_rtn(float x)
{
  return __clc_convert_ulong_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_sat_rtn(float x)
{
  return __clc_convert_ulong_sat_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2(float2 x)
{
  return __clc_convert_ulong2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_sat(float2 x)
{
  return __clc_convert_ulong2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_rtz(float2 x)
{
  return __clc_convert_ulong2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_sat_rtz(float2 x)
{
  return __clc_convert_ulong2_sat_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_rte(float2 x)
{
  return __clc_convert_ulong2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_sat_rte(float2 x)
{
  return __clc_convert_ulong2_sat_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_rtp(float2 x)
{
  return __clc_convert_ulong2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_sat_rtp(float2 x)
{
  return __clc_convert_ulong2_sat_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_rtn(float2 x)
{
  return __clc_convert_ulong2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_sat_rtn(float2 x)
{
  return __clc_convert_ulong2_sat_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3(float3 x)
{
  return __clc_convert_ulong3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_sat(float3 x)
{
  return __clc_convert_ulong3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_rtz(float3 x)
{
  return __clc_convert_ulong3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_sat_rtz(float3 x)
{
  return __clc_convert_ulong3_sat_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_rte(float3 x)
{
  return __clc_convert_ulong3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_sat_rte(float3 x)
{
  return __clc_convert_ulong3_sat_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_rtp(float3 x)
{
  return __clc_convert_ulong3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_sat_rtp(float3 x)
{
  return __clc_convert_ulong3_sat_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_rtn(float3 x)
{
  return __clc_convert_ulong3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_sat_rtn(float3 x)
{
  return __clc_convert_ulong3_sat_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4(float4 x)
{
  return __clc_convert_ulong4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_sat(float4 x)
{
  return __clc_convert_ulong4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_rtz(float4 x)
{
  return __clc_convert_ulong4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_sat_rtz(float4 x)
{
  return __clc_convert_ulong4_sat_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_rte(float4 x)
{
  return __clc_convert_ulong4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_sat_rte(float4 x)
{
  return __clc_convert_ulong4_sat_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_rtp(float4 x)
{
  return __clc_convert_ulong4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_sat_rtp(float4 x)
{
  return __clc_convert_ulong4_sat_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_rtn(float4 x)
{
  return __clc_convert_ulong4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_sat_rtn(float4 x)
{
  return __clc_convert_ulong4_sat_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8(float8 x)
{
  return __clc_convert_ulong8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_sat(float8 x)
{
  return __clc_convert_ulong8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_rtz(float8 x)
{
  return __clc_convert_ulong8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_sat_rtz(float8 x)
{
  return __clc_convert_ulong8_sat_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_rte(float8 x)
{
  return __clc_convert_ulong8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_sat_rte(float8 x)
{
  return __clc_convert_ulong8_sat_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_rtp(float8 x)
{
  return __clc_convert_ulong8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_sat_rtp(float8 x)
{
  return __clc_convert_ulong8_sat_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_rtn(float8 x)
{
  return __clc_convert_ulong8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_sat_rtn(float8 x)
{
  return __clc_convert_ulong8_sat_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16(float16 x)
{
  return __clc_convert_ulong16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_sat(float16 x)
{
  return __clc_convert_ulong16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_rtz(float16 x)
{
  return __clc_convert_ulong16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_sat_rtz(float16 x)
{
  return __clc_convert_ulong16_sat_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_rte(float16 x)
{
  return __clc_convert_ulong16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_sat_rte(float16 x)
{
  return __clc_convert_ulong16_sat_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_rtp(float16 x)
{
  return __clc_convert_ulong16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_sat_rtp(float16 x)
{
  return __clc_convert_ulong16_sat_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_rtn(float16 x)
{
  return __clc_convert_ulong16_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_sat_rtn(float16 x)
{
  return __clc_convert_ulong16_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar(double x)
{
  return __clc_convert_schar(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_sat(double x)
{
  return __clc_convert_schar_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_rtz(double x)
{
  return __clc_convert_schar_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_sat_rtz(double x)
{
  return __clc_convert_schar_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_rte(double x)
{
  return __clc_convert_schar_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_sat_rte(double x)
{
  return __clc_convert_schar_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_rtp(double x)
{
  return __clc_convert_schar_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_sat_rtp(double x)
{
  return __clc_convert_schar_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_rtn(double x)
{
  return __clc_convert_schar_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_ConvertFToS_Rchar_sat_rtn(double x)
{
  return __clc_convert_schar_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2(double2 x)
{
  return __clc_convert_schar2(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_sat(double2 x)
{
  return __clc_convert_schar2_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_rtz(double2 x)
{
  return __clc_convert_schar2_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_sat_rtz(double2 x)
{
  return __clc_convert_schar2_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_rte(double2 x)
{
  return __clc_convert_schar2_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_sat_rte(double2 x)
{
  return __clc_convert_schar2_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_rtp(double2 x)
{
  return __clc_convert_schar2_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_sat_rtp(double2 x)
{
  return __clc_convert_schar2_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_rtn(double2 x)
{
  return __clc_convert_schar2_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_ConvertFToS_Rchar2_sat_rtn(double2 x)
{
  return __clc_convert_schar2_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3(double3 x)
{
  return __clc_convert_schar3(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_sat(double3 x)
{
  return __clc_convert_schar3_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_rtz(double3 x)
{
  return __clc_convert_schar3_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_sat_rtz(double3 x)
{
  return __clc_convert_schar3_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_rte(double3 x)
{
  return __clc_convert_schar3_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_sat_rte(double3 x)
{
  return __clc_convert_schar3_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_rtp(double3 x)
{
  return __clc_convert_schar3_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_sat_rtp(double3 x)
{
  return __clc_convert_schar3_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_rtn(double3 x)
{
  return __clc_convert_schar3_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_ConvertFToS_Rchar3_sat_rtn(double3 x)
{
  return __clc_convert_schar3_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4(double4 x)
{
  return __clc_convert_schar4(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_sat(double4 x)
{
  return __clc_convert_schar4_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_rtz(double4 x)
{
  return __clc_convert_schar4_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_sat_rtz(double4 x)
{
  return __clc_convert_schar4_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_rte(double4 x)
{
  return __clc_convert_schar4_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_sat_rte(double4 x)
{
  return __clc_convert_schar4_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_rtp(double4 x)
{
  return __clc_convert_schar4_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_sat_rtp(double4 x)
{
  return __clc_convert_schar4_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_rtn(double4 x)
{
  return __clc_convert_schar4_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_ConvertFToS_Rchar4_sat_rtn(double4 x)
{
  return __clc_convert_schar4_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8(double8 x)
{
  return __clc_convert_schar8(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_sat(double8 x)
{
  return __clc_convert_schar8_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_rtz(double8 x)
{
  return __clc_convert_schar8_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_sat_rtz(double8 x)
{
  return __clc_convert_schar8_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_rte(double8 x)
{
  return __clc_convert_schar8_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_sat_rte(double8 x)
{
  return __clc_convert_schar8_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_rtp(double8 x)
{
  return __clc_convert_schar8_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_sat_rtp(double8 x)
{
  return __clc_convert_schar8_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_rtn(double8 x)
{
  return __clc_convert_schar8_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_ConvertFToS_Rchar8_sat_rtn(double8 x)
{
  return __clc_convert_schar8_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16(double16 x)
{
  return __clc_convert_schar16(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_sat(double16 x)
{
  return __clc_convert_schar16_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_rtz(double16 x)
{
  return __clc_convert_schar16_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_sat_rtz(double16 x)
{
  return __clc_convert_schar16_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_rte(double16 x)
{
  return __clc_convert_schar16_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_sat_rte(double16 x)
{
  return __clc_convert_schar16_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_rtp(double16 x)
{
  return __clc_convert_schar16_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_sat_rtp(double16 x)
{
  return __clc_convert_schar16_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_rtn(double16 x)
{
  return __clc_convert_schar16_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_ConvertFToS_Rchar16_sat_rtn(double16 x)
{
  return __clc_convert_schar16_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar(double x)
{
  return __clc_convert_uchar(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_sat(double x)
{
  return __clc_convert_uchar_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_rtz(double x)
{
  return __clc_convert_uchar_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_sat_rtz(double x)
{
  return __clc_convert_uchar_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_rte(double x)
{
  return __clc_convert_uchar_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_sat_rte(double x)
{
  return __clc_convert_uchar_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_rtp(double x)
{
  return __clc_convert_uchar_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_sat_rtp(double x)
{
  return __clc_convert_uchar_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_rtn(double x)
{
  return __clc_convert_uchar_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_ConvertFToU_Ruchar_sat_rtn(double x)
{
  return __clc_convert_uchar_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2(double2 x)
{
  return __clc_convert_uchar2(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_sat(double2 x)
{
  return __clc_convert_uchar2_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_rtz(double2 x)
{
  return __clc_convert_uchar2_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_sat_rtz(double2 x)
{
  return __clc_convert_uchar2_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_rte(double2 x)
{
  return __clc_convert_uchar2_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_sat_rte(double2 x)
{
  return __clc_convert_uchar2_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_rtp(double2 x)
{
  return __clc_convert_uchar2_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_sat_rtp(double2 x)
{
  return __clc_convert_uchar2_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_rtn(double2 x)
{
  return __clc_convert_uchar2_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_ConvertFToU_Ruchar2_sat_rtn(double2 x)
{
  return __clc_convert_uchar2_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3(double3 x)
{
  return __clc_convert_uchar3(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_sat(double3 x)
{
  return __clc_convert_uchar3_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_rtz(double3 x)
{
  return __clc_convert_uchar3_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_sat_rtz(double3 x)
{
  return __clc_convert_uchar3_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_rte(double3 x)
{
  return __clc_convert_uchar3_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_sat_rte(double3 x)
{
  return __clc_convert_uchar3_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_rtp(double3 x)
{
  return __clc_convert_uchar3_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_sat_rtp(double3 x)
{
  return __clc_convert_uchar3_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_rtn(double3 x)
{
  return __clc_convert_uchar3_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_ConvertFToU_Ruchar3_sat_rtn(double3 x)
{
  return __clc_convert_uchar3_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4(double4 x)
{
  return __clc_convert_uchar4(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_sat(double4 x)
{
  return __clc_convert_uchar4_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_rtz(double4 x)
{
  return __clc_convert_uchar4_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_sat_rtz(double4 x)
{
  return __clc_convert_uchar4_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_rte(double4 x)
{
  return __clc_convert_uchar4_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_sat_rte(double4 x)
{
  return __clc_convert_uchar4_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_rtp(double4 x)
{
  return __clc_convert_uchar4_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_sat_rtp(double4 x)
{
  return __clc_convert_uchar4_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_rtn(double4 x)
{
  return __clc_convert_uchar4_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_ConvertFToU_Ruchar4_sat_rtn(double4 x)
{
  return __clc_convert_uchar4_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8(double8 x)
{
  return __clc_convert_uchar8(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_sat(double8 x)
{
  return __clc_convert_uchar8_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_rtz(double8 x)
{
  return __clc_convert_uchar8_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_sat_rtz(double8 x)
{
  return __clc_convert_uchar8_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_rte(double8 x)
{
  return __clc_convert_uchar8_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_sat_rte(double8 x)
{
  return __clc_convert_uchar8_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_rtp(double8 x)
{
  return __clc_convert_uchar8_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_sat_rtp(double8 x)
{
  return __clc_convert_uchar8_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_rtn(double8 x)
{
  return __clc_convert_uchar8_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_ConvertFToU_Ruchar8_sat_rtn(double8 x)
{
  return __clc_convert_uchar8_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16(double16 x)
{
  return __clc_convert_uchar16(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_sat(double16 x)
{
  return __clc_convert_uchar16_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_rtz(double16 x)
{
  return __clc_convert_uchar16_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_sat_rtz(double16 x)
{
  return __clc_convert_uchar16_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_rte(double16 x)
{
  return __clc_convert_uchar16_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_sat_rte(double16 x)
{
  return __clc_convert_uchar16_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_rtp(double16 x)
{
  return __clc_convert_uchar16_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_sat_rtp(double16 x)
{
  return __clc_convert_uchar16_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_rtn(double16 x)
{
  return __clc_convert_uchar16_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_ConvertFToU_Ruchar16_sat_rtn(double16 x)
{
  return __clc_convert_uchar16_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort(double x)
{
  return __clc_convert_short(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_sat(double x)
{
  return __clc_convert_short_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_rtz(double x)
{
  return __clc_convert_short_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_sat_rtz(double x)
{
  return __clc_convert_short_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_rte(double x)
{
  return __clc_convert_short_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_sat_rte(double x)
{
  return __clc_convert_short_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_rtp(double x)
{
  return __clc_convert_short_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_sat_rtp(double x)
{
  return __clc_convert_short_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_rtn(double x)
{
  return __clc_convert_short_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_ConvertFToS_Rshort_sat_rtn(double x)
{
  return __clc_convert_short_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2(double2 x)
{
  return __clc_convert_short2(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_sat(double2 x)
{
  return __clc_convert_short2_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_rtz(double2 x)
{
  return __clc_convert_short2_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_sat_rtz(double2 x)
{
  return __clc_convert_short2_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_rte(double2 x)
{
  return __clc_convert_short2_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_sat_rte(double2 x)
{
  return __clc_convert_short2_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_rtp(double2 x)
{
  return __clc_convert_short2_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_sat_rtp(double2 x)
{
  return __clc_convert_short2_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_rtn(double2 x)
{
  return __clc_convert_short2_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_ConvertFToS_Rshort2_sat_rtn(double2 x)
{
  return __clc_convert_short2_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3(double3 x)
{
  return __clc_convert_short3(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_sat(double3 x)
{
  return __clc_convert_short3_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_rtz(double3 x)
{
  return __clc_convert_short3_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_sat_rtz(double3 x)
{
  return __clc_convert_short3_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_rte(double3 x)
{
  return __clc_convert_short3_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_sat_rte(double3 x)
{
  return __clc_convert_short3_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_rtp(double3 x)
{
  return __clc_convert_short3_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_sat_rtp(double3 x)
{
  return __clc_convert_short3_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_rtn(double3 x)
{
  return __clc_convert_short3_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_ConvertFToS_Rshort3_sat_rtn(double3 x)
{
  return __clc_convert_short3_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4(double4 x)
{
  return __clc_convert_short4(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_sat(double4 x)
{
  return __clc_convert_short4_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_rtz(double4 x)
{
  return __clc_convert_short4_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_sat_rtz(double4 x)
{
  return __clc_convert_short4_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_rte(double4 x)
{
  return __clc_convert_short4_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_sat_rte(double4 x)
{
  return __clc_convert_short4_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_rtp(double4 x)
{
  return __clc_convert_short4_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_sat_rtp(double4 x)
{
  return __clc_convert_short4_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_rtn(double4 x)
{
  return __clc_convert_short4_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_ConvertFToS_Rshort4_sat_rtn(double4 x)
{
  return __clc_convert_short4_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8(double8 x)
{
  return __clc_convert_short8(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_sat(double8 x)
{
  return __clc_convert_short8_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_rtz(double8 x)
{
  return __clc_convert_short8_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_sat_rtz(double8 x)
{
  return __clc_convert_short8_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_rte(double8 x)
{
  return __clc_convert_short8_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_sat_rte(double8 x)
{
  return __clc_convert_short8_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_rtp(double8 x)
{
  return __clc_convert_short8_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_sat_rtp(double8 x)
{
  return __clc_convert_short8_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_rtn(double8 x)
{
  return __clc_convert_short8_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_ConvertFToS_Rshort8_sat_rtn(double8 x)
{
  return __clc_convert_short8_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16(double16 x)
{
  return __clc_convert_short16(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_sat(double16 x)
{
  return __clc_convert_short16_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_rtz(double16 x)
{
  return __clc_convert_short16_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_sat_rtz(double16 x)
{
  return __clc_convert_short16_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_rte(double16 x)
{
  return __clc_convert_short16_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_sat_rte(double16 x)
{
  return __clc_convert_short16_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_rtp(double16 x)
{
  return __clc_convert_short16_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_sat_rtp(double16 x)
{
  return __clc_convert_short16_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_rtn(double16 x)
{
  return __clc_convert_short16_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_ConvertFToS_Rshort16_sat_rtn(double16 x)
{
  return __clc_convert_short16_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort(double x)
{
  return __clc_convert_ushort(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_sat(double x)
{
  return __clc_convert_ushort_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_rtz(double x)
{
  return __clc_convert_ushort_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_sat_rtz(double x)
{
  return __clc_convert_ushort_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_rte(double x)
{
  return __clc_convert_ushort_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_sat_rte(double x)
{
  return __clc_convert_ushort_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_rtp(double x)
{
  return __clc_convert_ushort_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_sat_rtp(double x)
{
  return __clc_convert_ushort_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_rtn(double x)
{
  return __clc_convert_ushort_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_ConvertFToU_Rushort_sat_rtn(double x)
{
  return __clc_convert_ushort_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2(double2 x)
{
  return __clc_convert_ushort2(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_sat(double2 x)
{
  return __clc_convert_ushort2_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_rtz(double2 x)
{
  return __clc_convert_ushort2_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_sat_rtz(double2 x)
{
  return __clc_convert_ushort2_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_rte(double2 x)
{
  return __clc_convert_ushort2_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_sat_rte(double2 x)
{
  return __clc_convert_ushort2_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_rtp(double2 x)
{
  return __clc_convert_ushort2_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_sat_rtp(double2 x)
{
  return __clc_convert_ushort2_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_rtn(double2 x)
{
  return __clc_convert_ushort2_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_ConvertFToU_Rushort2_sat_rtn(double2 x)
{
  return __clc_convert_ushort2_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3(double3 x)
{
  return __clc_convert_ushort3(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_sat(double3 x)
{
  return __clc_convert_ushort3_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_rtz(double3 x)
{
  return __clc_convert_ushort3_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_sat_rtz(double3 x)
{
  return __clc_convert_ushort3_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_rte(double3 x)
{
  return __clc_convert_ushort3_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_sat_rte(double3 x)
{
  return __clc_convert_ushort3_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_rtp(double3 x)
{
  return __clc_convert_ushort3_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_sat_rtp(double3 x)
{
  return __clc_convert_ushort3_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_rtn(double3 x)
{
  return __clc_convert_ushort3_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_ConvertFToU_Rushort3_sat_rtn(double3 x)
{
  return __clc_convert_ushort3_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4(double4 x)
{
  return __clc_convert_ushort4(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_sat(double4 x)
{
  return __clc_convert_ushort4_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_rtz(double4 x)
{
  return __clc_convert_ushort4_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_sat_rtz(double4 x)
{
  return __clc_convert_ushort4_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_rte(double4 x)
{
  return __clc_convert_ushort4_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_sat_rte(double4 x)
{
  return __clc_convert_ushort4_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_rtp(double4 x)
{
  return __clc_convert_ushort4_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_sat_rtp(double4 x)
{
  return __clc_convert_ushort4_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_rtn(double4 x)
{
  return __clc_convert_ushort4_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_ConvertFToU_Rushort4_sat_rtn(double4 x)
{
  return __clc_convert_ushort4_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8(double8 x)
{
  return __clc_convert_ushort8(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_sat(double8 x)
{
  return __clc_convert_ushort8_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_rtz(double8 x)
{
  return __clc_convert_ushort8_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_sat_rtz(double8 x)
{
  return __clc_convert_ushort8_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_rte(double8 x)
{
  return __clc_convert_ushort8_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_sat_rte(double8 x)
{
  return __clc_convert_ushort8_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_rtp(double8 x)
{
  return __clc_convert_ushort8_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_sat_rtp(double8 x)
{
  return __clc_convert_ushort8_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_rtn(double8 x)
{
  return __clc_convert_ushort8_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_ConvertFToU_Rushort8_sat_rtn(double8 x)
{
  return __clc_convert_ushort8_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16(double16 x)
{
  return __clc_convert_ushort16(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_sat(double16 x)
{
  return __clc_convert_ushort16_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_rtz(double16 x)
{
  return __clc_convert_ushort16_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_sat_rtz(double16 x)
{
  return __clc_convert_ushort16_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_rte(double16 x)
{
  return __clc_convert_ushort16_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_sat_rte(double16 x)
{
  return __clc_convert_ushort16_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_rtp(double16 x)
{
  return __clc_convert_ushort16_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_sat_rtp(double16 x)
{
  return __clc_convert_ushort16_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_rtn(double16 x)
{
  return __clc_convert_ushort16_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_ConvertFToU_Rushort16_sat_rtn(double16 x)
{
  return __clc_convert_ushort16_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint(double x)
{
  return __clc_convert_int(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_sat(double x)
{
  return __clc_convert_int_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_rtz(double x)
{
  return __clc_convert_int_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_sat_rtz(double x)
{
  return __clc_convert_int_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_rte(double x)
{
  return __clc_convert_int_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_sat_rte(double x)
{
  return __clc_convert_int_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_rtp(double x)
{
  return __clc_convert_int_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_sat_rtp(double x)
{
  return __clc_convert_int_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_rtn(double x)
{
  return __clc_convert_int_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_ConvertFToS_Rint_sat_rtn(double x)
{
  return __clc_convert_int_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2(double2 x)
{
  return __clc_convert_int2(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_sat(double2 x)
{
  return __clc_convert_int2_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_rtz(double2 x)
{
  return __clc_convert_int2_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_sat_rtz(double2 x)
{
  return __clc_convert_int2_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_rte(double2 x)
{
  return __clc_convert_int2_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_sat_rte(double2 x)
{
  return __clc_convert_int2_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_rtp(double2 x)
{
  return __clc_convert_int2_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_sat_rtp(double2 x)
{
  return __clc_convert_int2_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_rtn(double2 x)
{
  return __clc_convert_int2_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_ConvertFToS_Rint2_sat_rtn(double2 x)
{
  return __clc_convert_int2_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3(double3 x)
{
  return __clc_convert_int3(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_sat(double3 x)
{
  return __clc_convert_int3_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_rtz(double3 x)
{
  return __clc_convert_int3_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_sat_rtz(double3 x)
{
  return __clc_convert_int3_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_rte(double3 x)
{
  return __clc_convert_int3_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_sat_rte(double3 x)
{
  return __clc_convert_int3_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_rtp(double3 x)
{
  return __clc_convert_int3_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_sat_rtp(double3 x)
{
  return __clc_convert_int3_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_rtn(double3 x)
{
  return __clc_convert_int3_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_ConvertFToS_Rint3_sat_rtn(double3 x)
{
  return __clc_convert_int3_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4(double4 x)
{
  return __clc_convert_int4(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_sat(double4 x)
{
  return __clc_convert_int4_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_rtz(double4 x)
{
  return __clc_convert_int4_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_sat_rtz(double4 x)
{
  return __clc_convert_int4_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_rte(double4 x)
{
  return __clc_convert_int4_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_sat_rte(double4 x)
{
  return __clc_convert_int4_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_rtp(double4 x)
{
  return __clc_convert_int4_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_sat_rtp(double4 x)
{
  return __clc_convert_int4_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_rtn(double4 x)
{
  return __clc_convert_int4_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_ConvertFToS_Rint4_sat_rtn(double4 x)
{
  return __clc_convert_int4_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8(double8 x)
{
  return __clc_convert_int8(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_sat(double8 x)
{
  return __clc_convert_int8_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_rtz(double8 x)
{
  return __clc_convert_int8_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_sat_rtz(double8 x)
{
  return __clc_convert_int8_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_rte(double8 x)
{
  return __clc_convert_int8_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_sat_rte(double8 x)
{
  return __clc_convert_int8_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_rtp(double8 x)
{
  return __clc_convert_int8_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_sat_rtp(double8 x)
{
  return __clc_convert_int8_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_rtn(double8 x)
{
  return __clc_convert_int8_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_ConvertFToS_Rint8_sat_rtn(double8 x)
{
  return __clc_convert_int8_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16(double16 x)
{
  return __clc_convert_int16(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_sat(double16 x)
{
  return __clc_convert_int16_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_rtz(double16 x)
{
  return __clc_convert_int16_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_sat_rtz(double16 x)
{
  return __clc_convert_int16_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_rte(double16 x)
{
  return __clc_convert_int16_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_sat_rte(double16 x)
{
  return __clc_convert_int16_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_rtp(double16 x)
{
  return __clc_convert_int16_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_sat_rtp(double16 x)
{
  return __clc_convert_int16_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_rtn(double16 x)
{
  return __clc_convert_int16_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_ConvertFToS_Rint16_sat_rtn(double16 x)
{
  return __clc_convert_int16_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint(double x)
{
  return __clc_convert_uint(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_sat(double x)
{
  return __clc_convert_uint_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_rtz(double x)
{
  return __clc_convert_uint_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_sat_rtz(double x)
{
  return __clc_convert_uint_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_rte(double x)
{
  return __clc_convert_uint_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_sat_rte(double x)
{
  return __clc_convert_uint_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_rtp(double x)
{
  return __clc_convert_uint_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_sat_rtp(double x)
{
  return __clc_convert_uint_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_rtn(double x)
{
  return __clc_convert_uint_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_ConvertFToU_Ruint_sat_rtn(double x)
{
  return __clc_convert_uint_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2(double2 x)
{
  return __clc_convert_uint2(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_sat(double2 x)
{
  return __clc_convert_uint2_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_rtz(double2 x)
{
  return __clc_convert_uint2_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_sat_rtz(double2 x)
{
  return __clc_convert_uint2_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_rte(double2 x)
{
  return __clc_convert_uint2_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_sat_rte(double2 x)
{
  return __clc_convert_uint2_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_rtp(double2 x)
{
  return __clc_convert_uint2_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_sat_rtp(double2 x)
{
  return __clc_convert_uint2_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_rtn(double2 x)
{
  return __clc_convert_uint2_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_ConvertFToU_Ruint2_sat_rtn(double2 x)
{
  return __clc_convert_uint2_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3(double3 x)
{
  return __clc_convert_uint3(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_sat(double3 x)
{
  return __clc_convert_uint3_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_rtz(double3 x)
{
  return __clc_convert_uint3_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_sat_rtz(double3 x)
{
  return __clc_convert_uint3_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_rte(double3 x)
{
  return __clc_convert_uint3_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_sat_rte(double3 x)
{
  return __clc_convert_uint3_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_rtp(double3 x)
{
  return __clc_convert_uint3_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_sat_rtp(double3 x)
{
  return __clc_convert_uint3_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_rtn(double3 x)
{
  return __clc_convert_uint3_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_ConvertFToU_Ruint3_sat_rtn(double3 x)
{
  return __clc_convert_uint3_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4(double4 x)
{
  return __clc_convert_uint4(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_sat(double4 x)
{
  return __clc_convert_uint4_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_rtz(double4 x)
{
  return __clc_convert_uint4_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_sat_rtz(double4 x)
{
  return __clc_convert_uint4_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_rte(double4 x)
{
  return __clc_convert_uint4_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_sat_rte(double4 x)
{
  return __clc_convert_uint4_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_rtp(double4 x)
{
  return __clc_convert_uint4_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_sat_rtp(double4 x)
{
  return __clc_convert_uint4_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_rtn(double4 x)
{
  return __clc_convert_uint4_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_ConvertFToU_Ruint4_sat_rtn(double4 x)
{
  return __clc_convert_uint4_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8(double8 x)
{
  return __clc_convert_uint8(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_sat(double8 x)
{
  return __clc_convert_uint8_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_rtz(double8 x)
{
  return __clc_convert_uint8_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_sat_rtz(double8 x)
{
  return __clc_convert_uint8_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_rte(double8 x)
{
  return __clc_convert_uint8_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_sat_rte(double8 x)
{
  return __clc_convert_uint8_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_rtp(double8 x)
{
  return __clc_convert_uint8_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_sat_rtp(double8 x)
{
  return __clc_convert_uint8_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_rtn(double8 x)
{
  return __clc_convert_uint8_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_ConvertFToU_Ruint8_sat_rtn(double8 x)
{
  return __clc_convert_uint8_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16(double16 x)
{
  return __clc_convert_uint16(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_sat(double16 x)
{
  return __clc_convert_uint16_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_rtz(double16 x)
{
  return __clc_convert_uint16_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_sat_rtz(double16 x)
{
  return __clc_convert_uint16_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_rte(double16 x)
{
  return __clc_convert_uint16_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_sat_rte(double16 x)
{
  return __clc_convert_uint16_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_rtp(double16 x)
{
  return __clc_convert_uint16_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_sat_rtp(double16 x)
{
  return __clc_convert_uint16_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_rtn(double16 x)
{
  return __clc_convert_uint16_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_ConvertFToU_Ruint16_sat_rtn(double16 x)
{
  return __clc_convert_uint16_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong(double x)
{
  return __clc_convert_long(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_sat(double x)
{
  return __clc_convert_long_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_rtz(double x)
{
  return __clc_convert_long_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_sat_rtz(double x)
{
  return __clc_convert_long_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_rte(double x)
{
  return __clc_convert_long_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_sat_rte(double x)
{
  return __clc_convert_long_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_rtp(double x)
{
  return __clc_convert_long_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_sat_rtp(double x)
{
  return __clc_convert_long_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_rtn(double x)
{
  return __clc_convert_long_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_ConvertFToS_Rlong_sat_rtn(double x)
{
  return __clc_convert_long_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2(double2 x)
{
  return __clc_convert_long2(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_sat(double2 x)
{
  return __clc_convert_long2_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_rtz(double2 x)
{
  return __clc_convert_long2_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_sat_rtz(double2 x)
{
  return __clc_convert_long2_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_rte(double2 x)
{
  return __clc_convert_long2_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_sat_rte(double2 x)
{
  return __clc_convert_long2_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_rtp(double2 x)
{
  return __clc_convert_long2_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_sat_rtp(double2 x)
{
  return __clc_convert_long2_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_rtn(double2 x)
{
  return __clc_convert_long2_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_ConvertFToS_Rlong2_sat_rtn(double2 x)
{
  return __clc_convert_long2_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3(double3 x)
{
  return __clc_convert_long3(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_sat(double3 x)
{
  return __clc_convert_long3_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_rtz(double3 x)
{
  return __clc_convert_long3_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_sat_rtz(double3 x)
{
  return __clc_convert_long3_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_rte(double3 x)
{
  return __clc_convert_long3_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_sat_rte(double3 x)
{
  return __clc_convert_long3_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_rtp(double3 x)
{
  return __clc_convert_long3_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_sat_rtp(double3 x)
{
  return __clc_convert_long3_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_rtn(double3 x)
{
  return __clc_convert_long3_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_ConvertFToS_Rlong3_sat_rtn(double3 x)
{
  return __clc_convert_long3_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4(double4 x)
{
  return __clc_convert_long4(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_sat(double4 x)
{
  return __clc_convert_long4_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_rtz(double4 x)
{
  return __clc_convert_long4_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_sat_rtz(double4 x)
{
  return __clc_convert_long4_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_rte(double4 x)
{
  return __clc_convert_long4_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_sat_rte(double4 x)
{
  return __clc_convert_long4_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_rtp(double4 x)
{
  return __clc_convert_long4_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_sat_rtp(double4 x)
{
  return __clc_convert_long4_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_rtn(double4 x)
{
  return __clc_convert_long4_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_ConvertFToS_Rlong4_sat_rtn(double4 x)
{
  return __clc_convert_long4_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8(double8 x)
{
  return __clc_convert_long8(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_sat(double8 x)
{
  return __clc_convert_long8_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_rtz(double8 x)
{
  return __clc_convert_long8_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_sat_rtz(double8 x)
{
  return __clc_convert_long8_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_rte(double8 x)
{
  return __clc_convert_long8_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_sat_rte(double8 x)
{
  return __clc_convert_long8_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_rtp(double8 x)
{
  return __clc_convert_long8_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_sat_rtp(double8 x)
{
  return __clc_convert_long8_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_rtn(double8 x)
{
  return __clc_convert_long8_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_ConvertFToS_Rlong8_sat_rtn(double8 x)
{
  return __clc_convert_long8_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16(double16 x)
{
  return __clc_convert_long16(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_sat(double16 x)
{
  return __clc_convert_long16_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_rtz(double16 x)
{
  return __clc_convert_long16_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_sat_rtz(double16 x)
{
  return __clc_convert_long16_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_rte(double16 x)
{
  return __clc_convert_long16_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_sat_rte(double16 x)
{
  return __clc_convert_long16_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_rtp(double16 x)
{
  return __clc_convert_long16_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_sat_rtp(double16 x)
{
  return __clc_convert_long16_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_rtn(double16 x)
{
  return __clc_convert_long16_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_ConvertFToS_Rlong16_sat_rtn(double16 x)
{
  return __clc_convert_long16_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong(double x)
{
  return __clc_convert_ulong(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_sat(double x)
{
  return __clc_convert_ulong_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_rtz(double x)
{
  return __clc_convert_ulong_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_sat_rtz(double x)
{
  return __clc_convert_ulong_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_rte(double x)
{
  return __clc_convert_ulong_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_sat_rte(double x)
{
  return __clc_convert_ulong_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_rtp(double x)
{
  return __clc_convert_ulong_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_sat_rtp(double x)
{
  return __clc_convert_ulong_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_rtn(double x)
{
  return __clc_convert_ulong_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_ConvertFToU_Rulong_sat_rtn(double x)
{
  return __clc_convert_ulong_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2(double2 x)
{
  return __clc_convert_ulong2(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_sat(double2 x)
{
  return __clc_convert_ulong2_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_rtz(double2 x)
{
  return __clc_convert_ulong2_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_sat_rtz(double2 x)
{
  return __clc_convert_ulong2_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_rte(double2 x)
{
  return __clc_convert_ulong2_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_sat_rte(double2 x)
{
  return __clc_convert_ulong2_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_rtp(double2 x)
{
  return __clc_convert_ulong2_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_sat_rtp(double2 x)
{
  return __clc_convert_ulong2_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_rtn(double2 x)
{
  return __clc_convert_ulong2_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_ConvertFToU_Rulong2_sat_rtn(double2 x)
{
  return __clc_convert_ulong2_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3(double3 x)
{
  return __clc_convert_ulong3(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_sat(double3 x)
{
  return __clc_convert_ulong3_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_rtz(double3 x)
{
  return __clc_convert_ulong3_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_sat_rtz(double3 x)
{
  return __clc_convert_ulong3_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_rte(double3 x)
{
  return __clc_convert_ulong3_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_sat_rte(double3 x)
{
  return __clc_convert_ulong3_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_rtp(double3 x)
{
  return __clc_convert_ulong3_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_sat_rtp(double3 x)
{
  return __clc_convert_ulong3_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_rtn(double3 x)
{
  return __clc_convert_ulong3_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_ConvertFToU_Rulong3_sat_rtn(double3 x)
{
  return __clc_convert_ulong3_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4(double4 x)
{
  return __clc_convert_ulong4(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_sat(double4 x)
{
  return __clc_convert_ulong4_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_rtz(double4 x)
{
  return __clc_convert_ulong4_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_sat_rtz(double4 x)
{
  return __clc_convert_ulong4_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_rte(double4 x)
{
  return __clc_convert_ulong4_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_sat_rte(double4 x)
{
  return __clc_convert_ulong4_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_rtp(double4 x)
{
  return __clc_convert_ulong4_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_sat_rtp(double4 x)
{
  return __clc_convert_ulong4_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_rtn(double4 x)
{
  return __clc_convert_ulong4_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_ConvertFToU_Rulong4_sat_rtn(double4 x)
{
  return __clc_convert_ulong4_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8(double8 x)
{
  return __clc_convert_ulong8(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_sat(double8 x)
{
  return __clc_convert_ulong8_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_rtz(double8 x)
{
  return __clc_convert_ulong8_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_sat_rtz(double8 x)
{
  return __clc_convert_ulong8_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_rte(double8 x)
{
  return __clc_convert_ulong8_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_sat_rte(double8 x)
{
  return __clc_convert_ulong8_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_rtp(double8 x)
{
  return __clc_convert_ulong8_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_sat_rtp(double8 x)
{
  return __clc_convert_ulong8_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_rtn(double8 x)
{
  return __clc_convert_ulong8_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_ConvertFToU_Rulong8_sat_rtn(double8 x)
{
  return __clc_convert_ulong8_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16(double16 x)
{
  return __clc_convert_ulong16(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_sat(double16 x)
{
  return __clc_convert_ulong16_sat(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_rtz(double16 x)
{
  return __clc_convert_ulong16_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_sat_rtz(double16 x)
{
  return __clc_convert_ulong16_sat_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_rte(double16 x)
{
  return __clc_convert_ulong16_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_sat_rte(double16 x)
{
  return __clc_convert_ulong16_sat_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_rtp(double16 x)
{
  return __clc_convert_ulong16_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_sat_rtp(double16 x)
{
  return __clc_convert_ulong16_sat_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_rtn(double16 x)
{
  return __clc_convert_ulong16_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_ConvertFToU_Rulong16_sat_rtn(double16 x)
{
  return __clc_convert_ulong16_sat_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertSToF_Rhalf(schar x)
{
  return __clc_convert_half(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertSToF_Rhalf_rtz(schar x)
{
  return __clc_convert_half_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertSToF_Rhalf_rte(schar x)
{
  return __clc_convert_half_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertSToF_Rhalf_rtp(schar x)
{
  return __clc_convert_half_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertSToF_Rhalf_rtn(schar x)
{
  return __clc_convert_half_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertSToF_Rhalf2(schar2 x)
{
  return __clc_convert_half2(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertSToF_Rhalf2_rtz(schar2 x)
{
  return __clc_convert_half2_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertSToF_Rhalf2_rte(schar2 x)
{
  return __clc_convert_half2_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertSToF_Rhalf2_rtp(schar2 x)
{
  return __clc_convert_half2_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertSToF_Rhalf2_rtn(schar2 x)
{
  return __clc_convert_half2_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertSToF_Rhalf3(schar3 x)
{
  return __clc_convert_half3(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertSToF_Rhalf3_rtz(schar3 x)
{
  return __clc_convert_half3_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertSToF_Rhalf3_rte(schar3 x)
{
  return __clc_convert_half3_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertSToF_Rhalf3_rtp(schar3 x)
{
  return __clc_convert_half3_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertSToF_Rhalf3_rtn(schar3 x)
{
  return __clc_convert_half3_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertSToF_Rhalf4(schar4 x)
{
  return __clc_convert_half4(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertSToF_Rhalf4_rtz(schar4 x)
{
  return __clc_convert_half4_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertSToF_Rhalf4_rte(schar4 x)
{
  return __clc_convert_half4_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertSToF_Rhalf4_rtp(schar4 x)
{
  return __clc_convert_half4_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertSToF_Rhalf4_rtn(schar4 x)
{
  return __clc_convert_half4_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertSToF_Rhalf8(schar8 x)
{
  return __clc_convert_half8(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertSToF_Rhalf8_rtz(schar8 x)
{
  return __clc_convert_half8_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertSToF_Rhalf8_rte(schar8 x)
{
  return __clc_convert_half8_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertSToF_Rhalf8_rtp(schar8 x)
{
  return __clc_convert_half8_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertSToF_Rhalf8_rtn(schar8 x)
{
  return __clc_convert_half8_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertSToF_Rhalf16(schar16 x)
{
  return __clc_convert_half16(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertSToF_Rhalf16_rtz(schar16 x)
{
  return __clc_convert_half16_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertSToF_Rhalf16_rte(schar16 x)
{
  return __clc_convert_half16_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertSToF_Rhalf16_rtp(schar16 x)
{
  return __clc_convert_half16_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertSToF_Rhalf16_rtn(schar16 x)
{
  return __clc_convert_half16_rtn(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertSToF_Rfloat(schar x)
{
  return __clc_convert_float(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertSToF_Rfloat_rtz(schar x)
{
  return __clc_convert_float_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertSToF_Rfloat_rte(schar x)
{
  return __clc_convert_float_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertSToF_Rfloat_rtp(schar x)
{
  return __clc_convert_float_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertSToF_Rfloat_rtn(schar x)
{
  return __clc_convert_float_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertSToF_Rfloat2(schar2 x)
{
  return __clc_convert_float2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertSToF_Rfloat2_rtz(schar2 x)
{
  return __clc_convert_float2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertSToF_Rfloat2_rte(schar2 x)
{
  return __clc_convert_float2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertSToF_Rfloat2_rtp(schar2 x)
{
  return __clc_convert_float2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertSToF_Rfloat2_rtn(schar2 x)
{
  return __clc_convert_float2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertSToF_Rfloat3(schar3 x)
{
  return __clc_convert_float3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertSToF_Rfloat3_rtz(schar3 x)
{
  return __clc_convert_float3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertSToF_Rfloat3_rte(schar3 x)
{
  return __clc_convert_float3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertSToF_Rfloat3_rtp(schar3 x)
{
  return __clc_convert_float3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertSToF_Rfloat3_rtn(schar3 x)
{
  return __clc_convert_float3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertSToF_Rfloat4(schar4 x)
{
  return __clc_convert_float4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertSToF_Rfloat4_rtz(schar4 x)
{
  return __clc_convert_float4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertSToF_Rfloat4_rte(schar4 x)
{
  return __clc_convert_float4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertSToF_Rfloat4_rtp(schar4 x)
{
  return __clc_convert_float4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertSToF_Rfloat4_rtn(schar4 x)
{
  return __clc_convert_float4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertSToF_Rfloat8(schar8 x)
{
  return __clc_convert_float8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertSToF_Rfloat8_rtz(schar8 x)
{
  return __clc_convert_float8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertSToF_Rfloat8_rte(schar8 x)
{
  return __clc_convert_float8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertSToF_Rfloat8_rtp(schar8 x)
{
  return __clc_convert_float8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertSToF_Rfloat8_rtn(schar8 x)
{
  return __clc_convert_float8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertSToF_Rfloat16(schar16 x)
{
  return __clc_convert_float16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertSToF_Rfloat16_rtz(schar16 x)
{
  return __clc_convert_float16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertSToF_Rfloat16_rte(schar16 x)
{
  return __clc_convert_float16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertSToF_Rfloat16_rtp(schar16 x)
{
  return __clc_convert_float16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertSToF_Rfloat16_rtn(schar16 x)
{
  return __clc_convert_float16_rtn(x);
}

#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertSToF_Rdouble(schar x)
{
  return __clc_convert_double(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertSToF_Rdouble_rtz(schar x)
{
  return __clc_convert_double_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertSToF_Rdouble_rte(schar x)
{
  return __clc_convert_double_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertSToF_Rdouble_rtp(schar x)
{
  return __clc_convert_double_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertSToF_Rdouble_rtn(schar x)
{
  return __clc_convert_double_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertSToF_Rdouble2(schar2 x)
{
  return __clc_convert_double2(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertSToF_Rdouble2_rtz(schar2 x)
{
  return __clc_convert_double2_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertSToF_Rdouble2_rte(schar2 x)
{
  return __clc_convert_double2_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertSToF_Rdouble2_rtp(schar2 x)
{
  return __clc_convert_double2_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertSToF_Rdouble2_rtn(schar2 x)
{
  return __clc_convert_double2_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertSToF_Rdouble3(schar3 x)
{
  return __clc_convert_double3(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertSToF_Rdouble3_rtz(schar3 x)
{
  return __clc_convert_double3_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertSToF_Rdouble3_rte(schar3 x)
{
  return __clc_convert_double3_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertSToF_Rdouble3_rtp(schar3 x)
{
  return __clc_convert_double3_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertSToF_Rdouble3_rtn(schar3 x)
{
  return __clc_convert_double3_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertSToF_Rdouble4(schar4 x)
{
  return __clc_convert_double4(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertSToF_Rdouble4_rtz(schar4 x)
{
  return __clc_convert_double4_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertSToF_Rdouble4_rte(schar4 x)
{
  return __clc_convert_double4_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertSToF_Rdouble4_rtp(schar4 x)
{
  return __clc_convert_double4_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertSToF_Rdouble4_rtn(schar4 x)
{
  return __clc_convert_double4_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertSToF_Rdouble8(schar8 x)
{
  return __clc_convert_double8(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertSToF_Rdouble8_rtz(schar8 x)
{
  return __clc_convert_double8_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertSToF_Rdouble8_rte(schar8 x)
{
  return __clc_convert_double8_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertSToF_Rdouble8_rtp(schar8 x)
{
  return __clc_convert_double8_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertSToF_Rdouble8_rtn(schar8 x)
{
  return __clc_convert_double8_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertSToF_Rdouble16(schar16 x)
{
  return __clc_convert_double16(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertSToF_Rdouble16_rtz(schar16 x)
{
  return __clc_convert_double16_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertSToF_Rdouble16_rte(schar16 x)
{
  return __clc_convert_double16_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertSToF_Rdouble16_rtp(schar16 x)
{
  return __clc_convert_double16_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertSToF_Rdouble16_rtn(schar16 x)
{
  return __clc_convert_double16_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertUToF_Rhalf(uchar x)
{
  return __clc_convert_half(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertUToF_Rhalf_rtz(uchar x)
{
  return __clc_convert_half_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertUToF_Rhalf_rte(uchar x)
{
  return __clc_convert_half_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertUToF_Rhalf_rtp(uchar x)
{
  return __clc_convert_half_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertUToF_Rhalf_rtn(uchar x)
{
  return __clc_convert_half_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertUToF_Rhalf2(uchar2 x)
{
  return __clc_convert_half2(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertUToF_Rhalf2_rtz(uchar2 x)
{
  return __clc_convert_half2_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertUToF_Rhalf2_rte(uchar2 x)
{
  return __clc_convert_half2_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertUToF_Rhalf2_rtp(uchar2 x)
{
  return __clc_convert_half2_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertUToF_Rhalf2_rtn(uchar2 x)
{
  return __clc_convert_half2_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertUToF_Rhalf3(uchar3 x)
{
  return __clc_convert_half3(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertUToF_Rhalf3_rtz(uchar3 x)
{
  return __clc_convert_half3_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertUToF_Rhalf3_rte(uchar3 x)
{
  return __clc_convert_half3_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertUToF_Rhalf3_rtp(uchar3 x)
{
  return __clc_convert_half3_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertUToF_Rhalf3_rtn(uchar3 x)
{
  return __clc_convert_half3_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertUToF_Rhalf4(uchar4 x)
{
  return __clc_convert_half4(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertUToF_Rhalf4_rtz(uchar4 x)
{
  return __clc_convert_half4_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertUToF_Rhalf4_rte(uchar4 x)
{
  return __clc_convert_half4_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertUToF_Rhalf4_rtp(uchar4 x)
{
  return __clc_convert_half4_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertUToF_Rhalf4_rtn(uchar4 x)
{
  return __clc_convert_half4_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertUToF_Rhalf8(uchar8 x)
{
  return __clc_convert_half8(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertUToF_Rhalf8_rtz(uchar8 x)
{
  return __clc_convert_half8_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertUToF_Rhalf8_rte(uchar8 x)
{
  return __clc_convert_half8_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertUToF_Rhalf8_rtp(uchar8 x)
{
  return __clc_convert_half8_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertUToF_Rhalf8_rtn(uchar8 x)
{
  return __clc_convert_half8_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertUToF_Rhalf16(uchar16 x)
{
  return __clc_convert_half16(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertUToF_Rhalf16_rtz(uchar16 x)
{
  return __clc_convert_half16_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertUToF_Rhalf16_rte(uchar16 x)
{
  return __clc_convert_half16_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertUToF_Rhalf16_rtp(uchar16 x)
{
  return __clc_convert_half16_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertUToF_Rhalf16_rtn(uchar16 x)
{
  return __clc_convert_half16_rtn(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertUToF_Rfloat(uchar x)
{
  return __clc_convert_float(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertUToF_Rfloat_rtz(uchar x)
{
  return __clc_convert_float_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertUToF_Rfloat_rte(uchar x)
{
  return __clc_convert_float_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertUToF_Rfloat_rtp(uchar x)
{
  return __clc_convert_float_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertUToF_Rfloat_rtn(uchar x)
{
  return __clc_convert_float_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertUToF_Rfloat2(uchar2 x)
{
  return __clc_convert_float2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertUToF_Rfloat2_rtz(uchar2 x)
{
  return __clc_convert_float2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertUToF_Rfloat2_rte(uchar2 x)
{
  return __clc_convert_float2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertUToF_Rfloat2_rtp(uchar2 x)
{
  return __clc_convert_float2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertUToF_Rfloat2_rtn(uchar2 x)
{
  return __clc_convert_float2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertUToF_Rfloat3(uchar3 x)
{
  return __clc_convert_float3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertUToF_Rfloat3_rtz(uchar3 x)
{
  return __clc_convert_float3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertUToF_Rfloat3_rte(uchar3 x)
{
  return __clc_convert_float3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertUToF_Rfloat3_rtp(uchar3 x)
{
  return __clc_convert_float3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertUToF_Rfloat3_rtn(uchar3 x)
{
  return __clc_convert_float3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertUToF_Rfloat4(uchar4 x)
{
  return __clc_convert_float4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertUToF_Rfloat4_rtz(uchar4 x)
{
  return __clc_convert_float4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertUToF_Rfloat4_rte(uchar4 x)
{
  return __clc_convert_float4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertUToF_Rfloat4_rtp(uchar4 x)
{
  return __clc_convert_float4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertUToF_Rfloat4_rtn(uchar4 x)
{
  return __clc_convert_float4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertUToF_Rfloat8(uchar8 x)
{
  return __clc_convert_float8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertUToF_Rfloat8_rtz(uchar8 x)
{
  return __clc_convert_float8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertUToF_Rfloat8_rte(uchar8 x)
{
  return __clc_convert_float8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertUToF_Rfloat8_rtp(uchar8 x)
{
  return __clc_convert_float8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertUToF_Rfloat8_rtn(uchar8 x)
{
  return __clc_convert_float8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertUToF_Rfloat16(uchar16 x)
{
  return __clc_convert_float16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertUToF_Rfloat16_rtz(uchar16 x)
{
  return __clc_convert_float16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertUToF_Rfloat16_rte(uchar16 x)
{
  return __clc_convert_float16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertUToF_Rfloat16_rtp(uchar16 x)
{
  return __clc_convert_float16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertUToF_Rfloat16_rtn(uchar16 x)
{
  return __clc_convert_float16_rtn(x);
}

#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertUToF_Rdouble(uchar x)
{
  return __clc_convert_double(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertUToF_Rdouble_rtz(uchar x)
{
  return __clc_convert_double_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertUToF_Rdouble_rte(uchar x)
{
  return __clc_convert_double_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertUToF_Rdouble_rtp(uchar x)
{
  return __clc_convert_double_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertUToF_Rdouble_rtn(uchar x)
{
  return __clc_convert_double_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertUToF_Rdouble2(uchar2 x)
{
  return __clc_convert_double2(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertUToF_Rdouble2_rtz(uchar2 x)
{
  return __clc_convert_double2_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertUToF_Rdouble2_rte(uchar2 x)
{
  return __clc_convert_double2_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertUToF_Rdouble2_rtp(uchar2 x)
{
  return __clc_convert_double2_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertUToF_Rdouble2_rtn(uchar2 x)
{
  return __clc_convert_double2_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertUToF_Rdouble3(uchar3 x)
{
  return __clc_convert_double3(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertUToF_Rdouble3_rtz(uchar3 x)
{
  return __clc_convert_double3_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertUToF_Rdouble3_rte(uchar3 x)
{
  return __clc_convert_double3_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertUToF_Rdouble3_rtp(uchar3 x)
{
  return __clc_convert_double3_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertUToF_Rdouble3_rtn(uchar3 x)
{
  return __clc_convert_double3_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertUToF_Rdouble4(uchar4 x)
{
  return __clc_convert_double4(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertUToF_Rdouble4_rtz(uchar4 x)
{
  return __clc_convert_double4_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertUToF_Rdouble4_rte(uchar4 x)
{
  return __clc_convert_double4_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertUToF_Rdouble4_rtp(uchar4 x)
{
  return __clc_convert_double4_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertUToF_Rdouble4_rtn(uchar4 x)
{
  return __clc_convert_double4_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertUToF_Rdouble8(uchar8 x)
{
  return __clc_convert_double8(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertUToF_Rdouble8_rtz(uchar8 x)
{
  return __clc_convert_double8_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertUToF_Rdouble8_rte(uchar8 x)
{
  return __clc_convert_double8_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertUToF_Rdouble8_rtp(uchar8 x)
{
  return __clc_convert_double8_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertUToF_Rdouble8_rtn(uchar8 x)
{
  return __clc_convert_double8_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertUToF_Rdouble16(uchar16 x)
{
  return __clc_convert_double16(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertUToF_Rdouble16_rtz(uchar16 x)
{
  return __clc_convert_double16_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertUToF_Rdouble16_rte(uchar16 x)
{
  return __clc_convert_double16_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertUToF_Rdouble16_rtp(uchar16 x)
{
  return __clc_convert_double16_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertUToF_Rdouble16_rtn(uchar16 x)
{
  return __clc_convert_double16_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertSToF_Rhalf(short x)
{
  return __clc_convert_half(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertSToF_Rhalf_rtz(short x)
{
  return __clc_convert_half_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertSToF_Rhalf_rte(short x)
{
  return __clc_convert_half_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertSToF_Rhalf_rtp(short x)
{
  return __clc_convert_half_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertSToF_Rhalf_rtn(short x)
{
  return __clc_convert_half_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertSToF_Rhalf2(short2 x)
{
  return __clc_convert_half2(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertSToF_Rhalf2_rtz(short2 x)
{
  return __clc_convert_half2_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertSToF_Rhalf2_rte(short2 x)
{
  return __clc_convert_half2_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertSToF_Rhalf2_rtp(short2 x)
{
  return __clc_convert_half2_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertSToF_Rhalf2_rtn(short2 x)
{
  return __clc_convert_half2_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertSToF_Rhalf3(short3 x)
{
  return __clc_convert_half3(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertSToF_Rhalf3_rtz(short3 x)
{
  return __clc_convert_half3_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertSToF_Rhalf3_rte(short3 x)
{
  return __clc_convert_half3_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertSToF_Rhalf3_rtp(short3 x)
{
  return __clc_convert_half3_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertSToF_Rhalf3_rtn(short3 x)
{
  return __clc_convert_half3_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertSToF_Rhalf4(short4 x)
{
  return __clc_convert_half4(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertSToF_Rhalf4_rtz(short4 x)
{
  return __clc_convert_half4_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertSToF_Rhalf4_rte(short4 x)
{
  return __clc_convert_half4_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertSToF_Rhalf4_rtp(short4 x)
{
  return __clc_convert_half4_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertSToF_Rhalf4_rtn(short4 x)
{
  return __clc_convert_half4_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertSToF_Rhalf8(short8 x)
{
  return __clc_convert_half8(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertSToF_Rhalf8_rtz(short8 x)
{
  return __clc_convert_half8_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertSToF_Rhalf8_rte(short8 x)
{
  return __clc_convert_half8_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertSToF_Rhalf8_rtp(short8 x)
{
  return __clc_convert_half8_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertSToF_Rhalf8_rtn(short8 x)
{
  return __clc_convert_half8_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertSToF_Rhalf16(short16 x)
{
  return __clc_convert_half16(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertSToF_Rhalf16_rtz(short16 x)
{
  return __clc_convert_half16_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertSToF_Rhalf16_rte(short16 x)
{
  return __clc_convert_half16_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertSToF_Rhalf16_rtp(short16 x)
{
  return __clc_convert_half16_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertSToF_Rhalf16_rtn(short16 x)
{
  return __clc_convert_half16_rtn(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertSToF_Rfloat(short x)
{
  return __clc_convert_float(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertSToF_Rfloat_rtz(short x)
{
  return __clc_convert_float_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertSToF_Rfloat_rte(short x)
{
  return __clc_convert_float_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertSToF_Rfloat_rtp(short x)
{
  return __clc_convert_float_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertSToF_Rfloat_rtn(short x)
{
  return __clc_convert_float_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertSToF_Rfloat2(short2 x)
{
  return __clc_convert_float2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertSToF_Rfloat2_rtz(short2 x)
{
  return __clc_convert_float2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertSToF_Rfloat2_rte(short2 x)
{
  return __clc_convert_float2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertSToF_Rfloat2_rtp(short2 x)
{
  return __clc_convert_float2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertSToF_Rfloat2_rtn(short2 x)
{
  return __clc_convert_float2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertSToF_Rfloat3(short3 x)
{
  return __clc_convert_float3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertSToF_Rfloat3_rtz(short3 x)
{
  return __clc_convert_float3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertSToF_Rfloat3_rte(short3 x)
{
  return __clc_convert_float3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertSToF_Rfloat3_rtp(short3 x)
{
  return __clc_convert_float3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertSToF_Rfloat3_rtn(short3 x)
{
  return __clc_convert_float3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertSToF_Rfloat4(short4 x)
{
  return __clc_convert_float4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertSToF_Rfloat4_rtz(short4 x)
{
  return __clc_convert_float4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertSToF_Rfloat4_rte(short4 x)
{
  return __clc_convert_float4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertSToF_Rfloat4_rtp(short4 x)
{
  return __clc_convert_float4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertSToF_Rfloat4_rtn(short4 x)
{
  return __clc_convert_float4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertSToF_Rfloat8(short8 x)
{
  return __clc_convert_float8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertSToF_Rfloat8_rtz(short8 x)
{
  return __clc_convert_float8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertSToF_Rfloat8_rte(short8 x)
{
  return __clc_convert_float8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertSToF_Rfloat8_rtp(short8 x)
{
  return __clc_convert_float8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertSToF_Rfloat8_rtn(short8 x)
{
  return __clc_convert_float8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertSToF_Rfloat16(short16 x)
{
  return __clc_convert_float16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertSToF_Rfloat16_rtz(short16 x)
{
  return __clc_convert_float16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertSToF_Rfloat16_rte(short16 x)
{
  return __clc_convert_float16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertSToF_Rfloat16_rtp(short16 x)
{
  return __clc_convert_float16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertSToF_Rfloat16_rtn(short16 x)
{
  return __clc_convert_float16_rtn(x);
}

#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertSToF_Rdouble(short x)
{
  return __clc_convert_double(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertSToF_Rdouble_rtz(short x)
{
  return __clc_convert_double_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertSToF_Rdouble_rte(short x)
{
  return __clc_convert_double_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertSToF_Rdouble_rtp(short x)
{
  return __clc_convert_double_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertSToF_Rdouble_rtn(short x)
{
  return __clc_convert_double_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertSToF_Rdouble2(short2 x)
{
  return __clc_convert_double2(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertSToF_Rdouble2_rtz(short2 x)
{
  return __clc_convert_double2_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertSToF_Rdouble2_rte(short2 x)
{
  return __clc_convert_double2_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertSToF_Rdouble2_rtp(short2 x)
{
  return __clc_convert_double2_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertSToF_Rdouble2_rtn(short2 x)
{
  return __clc_convert_double2_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertSToF_Rdouble3(short3 x)
{
  return __clc_convert_double3(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertSToF_Rdouble3_rtz(short3 x)
{
  return __clc_convert_double3_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertSToF_Rdouble3_rte(short3 x)
{
  return __clc_convert_double3_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertSToF_Rdouble3_rtp(short3 x)
{
  return __clc_convert_double3_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertSToF_Rdouble3_rtn(short3 x)
{
  return __clc_convert_double3_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertSToF_Rdouble4(short4 x)
{
  return __clc_convert_double4(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertSToF_Rdouble4_rtz(short4 x)
{
  return __clc_convert_double4_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertSToF_Rdouble4_rte(short4 x)
{
  return __clc_convert_double4_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertSToF_Rdouble4_rtp(short4 x)
{
  return __clc_convert_double4_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertSToF_Rdouble4_rtn(short4 x)
{
  return __clc_convert_double4_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertSToF_Rdouble8(short8 x)
{
  return __clc_convert_double8(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertSToF_Rdouble8_rtz(short8 x)
{
  return __clc_convert_double8_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertSToF_Rdouble8_rte(short8 x)
{
  return __clc_convert_double8_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertSToF_Rdouble8_rtp(short8 x)
{
  return __clc_convert_double8_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertSToF_Rdouble8_rtn(short8 x)
{
  return __clc_convert_double8_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertSToF_Rdouble16(short16 x)
{
  return __clc_convert_double16(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertSToF_Rdouble16_rtz(short16 x)
{
  return __clc_convert_double16_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertSToF_Rdouble16_rte(short16 x)
{
  return __clc_convert_double16_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertSToF_Rdouble16_rtp(short16 x)
{
  return __clc_convert_double16_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertSToF_Rdouble16_rtn(short16 x)
{
  return __clc_convert_double16_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertUToF_Rhalf(ushort x)
{
  return __clc_convert_half(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertUToF_Rhalf_rtz(ushort x)
{
  return __clc_convert_half_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertUToF_Rhalf_rte(ushort x)
{
  return __clc_convert_half_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertUToF_Rhalf_rtp(ushort x)
{
  return __clc_convert_half_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertUToF_Rhalf_rtn(ushort x)
{
  return __clc_convert_half_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertUToF_Rhalf2(ushort2 x)
{
  return __clc_convert_half2(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertUToF_Rhalf2_rtz(ushort2 x)
{
  return __clc_convert_half2_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertUToF_Rhalf2_rte(ushort2 x)
{
  return __clc_convert_half2_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertUToF_Rhalf2_rtp(ushort2 x)
{
  return __clc_convert_half2_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertUToF_Rhalf2_rtn(ushort2 x)
{
  return __clc_convert_half2_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertUToF_Rhalf3(ushort3 x)
{
  return __clc_convert_half3(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertUToF_Rhalf3_rtz(ushort3 x)
{
  return __clc_convert_half3_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertUToF_Rhalf3_rte(ushort3 x)
{
  return __clc_convert_half3_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertUToF_Rhalf3_rtp(ushort3 x)
{
  return __clc_convert_half3_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertUToF_Rhalf3_rtn(ushort3 x)
{
  return __clc_convert_half3_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertUToF_Rhalf4(ushort4 x)
{
  return __clc_convert_half4(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertUToF_Rhalf4_rtz(ushort4 x)
{
  return __clc_convert_half4_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertUToF_Rhalf4_rte(ushort4 x)
{
  return __clc_convert_half4_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertUToF_Rhalf4_rtp(ushort4 x)
{
  return __clc_convert_half4_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertUToF_Rhalf4_rtn(ushort4 x)
{
  return __clc_convert_half4_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertUToF_Rhalf8(ushort8 x)
{
  return __clc_convert_half8(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertUToF_Rhalf8_rtz(ushort8 x)
{
  return __clc_convert_half8_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertUToF_Rhalf8_rte(ushort8 x)
{
  return __clc_convert_half8_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertUToF_Rhalf8_rtp(ushort8 x)
{
  return __clc_convert_half8_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertUToF_Rhalf8_rtn(ushort8 x)
{
  return __clc_convert_half8_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertUToF_Rhalf16(ushort16 x)
{
  return __clc_convert_half16(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertUToF_Rhalf16_rtz(ushort16 x)
{
  return __clc_convert_half16_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertUToF_Rhalf16_rte(ushort16 x)
{
  return __clc_convert_half16_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertUToF_Rhalf16_rtp(ushort16 x)
{
  return __clc_convert_half16_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertUToF_Rhalf16_rtn(ushort16 x)
{
  return __clc_convert_half16_rtn(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertUToF_Rfloat(ushort x)
{
  return __clc_convert_float(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertUToF_Rfloat_rtz(ushort x)
{
  return __clc_convert_float_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertUToF_Rfloat_rte(ushort x)
{
  return __clc_convert_float_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertUToF_Rfloat_rtp(ushort x)
{
  return __clc_convert_float_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertUToF_Rfloat_rtn(ushort x)
{
  return __clc_convert_float_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertUToF_Rfloat2(ushort2 x)
{
  return __clc_convert_float2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertUToF_Rfloat2_rtz(ushort2 x)
{
  return __clc_convert_float2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertUToF_Rfloat2_rte(ushort2 x)
{
  return __clc_convert_float2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertUToF_Rfloat2_rtp(ushort2 x)
{
  return __clc_convert_float2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertUToF_Rfloat2_rtn(ushort2 x)
{
  return __clc_convert_float2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertUToF_Rfloat3(ushort3 x)
{
  return __clc_convert_float3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertUToF_Rfloat3_rtz(ushort3 x)
{
  return __clc_convert_float3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertUToF_Rfloat3_rte(ushort3 x)
{
  return __clc_convert_float3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertUToF_Rfloat3_rtp(ushort3 x)
{
  return __clc_convert_float3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertUToF_Rfloat3_rtn(ushort3 x)
{
  return __clc_convert_float3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertUToF_Rfloat4(ushort4 x)
{
  return __clc_convert_float4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertUToF_Rfloat4_rtz(ushort4 x)
{
  return __clc_convert_float4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertUToF_Rfloat4_rte(ushort4 x)
{
  return __clc_convert_float4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertUToF_Rfloat4_rtp(ushort4 x)
{
  return __clc_convert_float4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertUToF_Rfloat4_rtn(ushort4 x)
{
  return __clc_convert_float4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertUToF_Rfloat8(ushort8 x)
{
  return __clc_convert_float8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertUToF_Rfloat8_rtz(ushort8 x)
{
  return __clc_convert_float8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertUToF_Rfloat8_rte(ushort8 x)
{
  return __clc_convert_float8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertUToF_Rfloat8_rtp(ushort8 x)
{
  return __clc_convert_float8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertUToF_Rfloat8_rtn(ushort8 x)
{
  return __clc_convert_float8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertUToF_Rfloat16(ushort16 x)
{
  return __clc_convert_float16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertUToF_Rfloat16_rtz(ushort16 x)
{
  return __clc_convert_float16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertUToF_Rfloat16_rte(ushort16 x)
{
  return __clc_convert_float16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertUToF_Rfloat16_rtp(ushort16 x)
{
  return __clc_convert_float16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertUToF_Rfloat16_rtn(ushort16 x)
{
  return __clc_convert_float16_rtn(x);
}

#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertUToF_Rdouble(ushort x)
{
  return __clc_convert_double(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertUToF_Rdouble_rtz(ushort x)
{
  return __clc_convert_double_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertUToF_Rdouble_rte(ushort x)
{
  return __clc_convert_double_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertUToF_Rdouble_rtp(ushort x)
{
  return __clc_convert_double_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertUToF_Rdouble_rtn(ushort x)
{
  return __clc_convert_double_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertUToF_Rdouble2(ushort2 x)
{
  return __clc_convert_double2(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertUToF_Rdouble2_rtz(ushort2 x)
{
  return __clc_convert_double2_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertUToF_Rdouble2_rte(ushort2 x)
{
  return __clc_convert_double2_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertUToF_Rdouble2_rtp(ushort2 x)
{
  return __clc_convert_double2_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertUToF_Rdouble2_rtn(ushort2 x)
{
  return __clc_convert_double2_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertUToF_Rdouble3(ushort3 x)
{
  return __clc_convert_double3(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertUToF_Rdouble3_rtz(ushort3 x)
{
  return __clc_convert_double3_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertUToF_Rdouble3_rte(ushort3 x)
{
  return __clc_convert_double3_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertUToF_Rdouble3_rtp(ushort3 x)
{
  return __clc_convert_double3_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertUToF_Rdouble3_rtn(ushort3 x)
{
  return __clc_convert_double3_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertUToF_Rdouble4(ushort4 x)
{
  return __clc_convert_double4(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertUToF_Rdouble4_rtz(ushort4 x)
{
  return __clc_convert_double4_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertUToF_Rdouble4_rte(ushort4 x)
{
  return __clc_convert_double4_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertUToF_Rdouble4_rtp(ushort4 x)
{
  return __clc_convert_double4_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertUToF_Rdouble4_rtn(ushort4 x)
{
  return __clc_convert_double4_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertUToF_Rdouble8(ushort8 x)
{
  return __clc_convert_double8(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertUToF_Rdouble8_rtz(ushort8 x)
{
  return __clc_convert_double8_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertUToF_Rdouble8_rte(ushort8 x)
{
  return __clc_convert_double8_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertUToF_Rdouble8_rtp(ushort8 x)
{
  return __clc_convert_double8_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertUToF_Rdouble8_rtn(ushort8 x)
{
  return __clc_convert_double8_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertUToF_Rdouble16(ushort16 x)
{
  return __clc_convert_double16(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertUToF_Rdouble16_rtz(ushort16 x)
{
  return __clc_convert_double16_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertUToF_Rdouble16_rte(ushort16 x)
{
  return __clc_convert_double16_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertUToF_Rdouble16_rtp(ushort16 x)
{
  return __clc_convert_double16_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertUToF_Rdouble16_rtn(ushort16 x)
{
  return __clc_convert_double16_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertSToF_Rhalf(int x)
{
  return __clc_convert_half(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertSToF_Rhalf_rtz(int x)
{
  return __clc_convert_half_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertSToF_Rhalf_rte(int x)
{
  return __clc_convert_half_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertSToF_Rhalf_rtp(int x)
{
  return __clc_convert_half_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertSToF_Rhalf_rtn(int x)
{
  return __clc_convert_half_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertSToF_Rhalf2(int2 x)
{
  return __clc_convert_half2(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertSToF_Rhalf2_rtz(int2 x)
{
  return __clc_convert_half2_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertSToF_Rhalf2_rte(int2 x)
{
  return __clc_convert_half2_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertSToF_Rhalf2_rtp(int2 x)
{
  return __clc_convert_half2_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertSToF_Rhalf2_rtn(int2 x)
{
  return __clc_convert_half2_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertSToF_Rhalf3(int3 x)
{
  return __clc_convert_half3(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertSToF_Rhalf3_rtz(int3 x)
{
  return __clc_convert_half3_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertSToF_Rhalf3_rte(int3 x)
{
  return __clc_convert_half3_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertSToF_Rhalf3_rtp(int3 x)
{
  return __clc_convert_half3_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertSToF_Rhalf3_rtn(int3 x)
{
  return __clc_convert_half3_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertSToF_Rhalf4(int4 x)
{
  return __clc_convert_half4(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertSToF_Rhalf4_rtz(int4 x)
{
  return __clc_convert_half4_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertSToF_Rhalf4_rte(int4 x)
{
  return __clc_convert_half4_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertSToF_Rhalf4_rtp(int4 x)
{
  return __clc_convert_half4_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertSToF_Rhalf4_rtn(int4 x)
{
  return __clc_convert_half4_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertSToF_Rhalf8(int8 x)
{
  return __clc_convert_half8(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertSToF_Rhalf8_rtz(int8 x)
{
  return __clc_convert_half8_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertSToF_Rhalf8_rte(int8 x)
{
  return __clc_convert_half8_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertSToF_Rhalf8_rtp(int8 x)
{
  return __clc_convert_half8_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertSToF_Rhalf8_rtn(int8 x)
{
  return __clc_convert_half8_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertSToF_Rhalf16(int16 x)
{
  return __clc_convert_half16(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertSToF_Rhalf16_rtz(int16 x)
{
  return __clc_convert_half16_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertSToF_Rhalf16_rte(int16 x)
{
  return __clc_convert_half16_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertSToF_Rhalf16_rtp(int16 x)
{
  return __clc_convert_half16_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertSToF_Rhalf16_rtn(int16 x)
{
  return __clc_convert_half16_rtn(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertSToF_Rfloat(int x)
{
  return __clc_convert_float(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertSToF_Rfloat_rtz(int x)
{
  return __clc_convert_float_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertSToF_Rfloat_rte(int x)
{
  return __clc_convert_float_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertSToF_Rfloat_rtp(int x)
{
  return __clc_convert_float_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertSToF_Rfloat_rtn(int x)
{
  return __clc_convert_float_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertSToF_Rfloat2(int2 x)
{
  return __clc_convert_float2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertSToF_Rfloat2_rtz(int2 x)
{
  return __clc_convert_float2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertSToF_Rfloat2_rte(int2 x)
{
  return __clc_convert_float2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertSToF_Rfloat2_rtp(int2 x)
{
  return __clc_convert_float2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertSToF_Rfloat2_rtn(int2 x)
{
  return __clc_convert_float2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertSToF_Rfloat3(int3 x)
{
  return __clc_convert_float3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertSToF_Rfloat3_rtz(int3 x)
{
  return __clc_convert_float3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertSToF_Rfloat3_rte(int3 x)
{
  return __clc_convert_float3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertSToF_Rfloat3_rtp(int3 x)
{
  return __clc_convert_float3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertSToF_Rfloat3_rtn(int3 x)
{
  return __clc_convert_float3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertSToF_Rfloat4(int4 x)
{
  return __clc_convert_float4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertSToF_Rfloat4_rtz(int4 x)
{
  return __clc_convert_float4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertSToF_Rfloat4_rte(int4 x)
{
  return __clc_convert_float4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertSToF_Rfloat4_rtp(int4 x)
{
  return __clc_convert_float4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertSToF_Rfloat4_rtn(int4 x)
{
  return __clc_convert_float4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertSToF_Rfloat8(int8 x)
{
  return __clc_convert_float8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertSToF_Rfloat8_rtz(int8 x)
{
  return __clc_convert_float8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertSToF_Rfloat8_rte(int8 x)
{
  return __clc_convert_float8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertSToF_Rfloat8_rtp(int8 x)
{
  return __clc_convert_float8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertSToF_Rfloat8_rtn(int8 x)
{
  return __clc_convert_float8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertSToF_Rfloat16(int16 x)
{
  return __clc_convert_float16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertSToF_Rfloat16_rtz(int16 x)
{
  return __clc_convert_float16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertSToF_Rfloat16_rte(int16 x)
{
  return __clc_convert_float16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertSToF_Rfloat16_rtp(int16 x)
{
  return __clc_convert_float16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertSToF_Rfloat16_rtn(int16 x)
{
  return __clc_convert_float16_rtn(x);
}

#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertSToF_Rdouble(int x)
{
  return __clc_convert_double(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertSToF_Rdouble_rtz(int x)
{
  return __clc_convert_double_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertSToF_Rdouble_rte(int x)
{
  return __clc_convert_double_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertSToF_Rdouble_rtp(int x)
{
  return __clc_convert_double_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertSToF_Rdouble_rtn(int x)
{
  return __clc_convert_double_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertSToF_Rdouble2(int2 x)
{
  return __clc_convert_double2(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertSToF_Rdouble2_rtz(int2 x)
{
  return __clc_convert_double2_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertSToF_Rdouble2_rte(int2 x)
{
  return __clc_convert_double2_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertSToF_Rdouble2_rtp(int2 x)
{
  return __clc_convert_double2_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertSToF_Rdouble2_rtn(int2 x)
{
  return __clc_convert_double2_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertSToF_Rdouble3(int3 x)
{
  return __clc_convert_double3(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertSToF_Rdouble3_rtz(int3 x)
{
  return __clc_convert_double3_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertSToF_Rdouble3_rte(int3 x)
{
  return __clc_convert_double3_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertSToF_Rdouble3_rtp(int3 x)
{
  return __clc_convert_double3_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertSToF_Rdouble3_rtn(int3 x)
{
  return __clc_convert_double3_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertSToF_Rdouble4(int4 x)
{
  return __clc_convert_double4(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertSToF_Rdouble4_rtz(int4 x)
{
  return __clc_convert_double4_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertSToF_Rdouble4_rte(int4 x)
{
  return __clc_convert_double4_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertSToF_Rdouble4_rtp(int4 x)
{
  return __clc_convert_double4_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertSToF_Rdouble4_rtn(int4 x)
{
  return __clc_convert_double4_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertSToF_Rdouble8(int8 x)
{
  return __clc_convert_double8(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertSToF_Rdouble8_rtz(int8 x)
{
  return __clc_convert_double8_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertSToF_Rdouble8_rte(int8 x)
{
  return __clc_convert_double8_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertSToF_Rdouble8_rtp(int8 x)
{
  return __clc_convert_double8_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertSToF_Rdouble8_rtn(int8 x)
{
  return __clc_convert_double8_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertSToF_Rdouble16(int16 x)
{
  return __clc_convert_double16(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertSToF_Rdouble16_rtz(int16 x)
{
  return __clc_convert_double16_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertSToF_Rdouble16_rte(int16 x)
{
  return __clc_convert_double16_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertSToF_Rdouble16_rtp(int16 x)
{
  return __clc_convert_double16_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertSToF_Rdouble16_rtn(int16 x)
{
  return __clc_convert_double16_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertUToF_Rhalf(uint x)
{
  return __clc_convert_half(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertUToF_Rhalf_rtz(uint x)
{
  return __clc_convert_half_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertUToF_Rhalf_rte(uint x)
{
  return __clc_convert_half_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertUToF_Rhalf_rtp(uint x)
{
  return __clc_convert_half_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertUToF_Rhalf_rtn(uint x)
{
  return __clc_convert_half_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertUToF_Rhalf2(uint2 x)
{
  return __clc_convert_half2(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertUToF_Rhalf2_rtz(uint2 x)
{
  return __clc_convert_half2_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertUToF_Rhalf2_rte(uint2 x)
{
  return __clc_convert_half2_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertUToF_Rhalf2_rtp(uint2 x)
{
  return __clc_convert_half2_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertUToF_Rhalf2_rtn(uint2 x)
{
  return __clc_convert_half2_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertUToF_Rhalf3(uint3 x)
{
  return __clc_convert_half3(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertUToF_Rhalf3_rtz(uint3 x)
{
  return __clc_convert_half3_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertUToF_Rhalf3_rte(uint3 x)
{
  return __clc_convert_half3_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertUToF_Rhalf3_rtp(uint3 x)
{
  return __clc_convert_half3_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertUToF_Rhalf3_rtn(uint3 x)
{
  return __clc_convert_half3_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertUToF_Rhalf4(uint4 x)
{
  return __clc_convert_half4(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertUToF_Rhalf4_rtz(uint4 x)
{
  return __clc_convert_half4_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertUToF_Rhalf4_rte(uint4 x)
{
  return __clc_convert_half4_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertUToF_Rhalf4_rtp(uint4 x)
{
  return __clc_convert_half4_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertUToF_Rhalf4_rtn(uint4 x)
{
  return __clc_convert_half4_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertUToF_Rhalf8(uint8 x)
{
  return __clc_convert_half8(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertUToF_Rhalf8_rtz(uint8 x)
{
  return __clc_convert_half8_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertUToF_Rhalf8_rte(uint8 x)
{
  return __clc_convert_half8_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertUToF_Rhalf8_rtp(uint8 x)
{
  return __clc_convert_half8_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertUToF_Rhalf8_rtn(uint8 x)
{
  return __clc_convert_half8_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertUToF_Rhalf16(uint16 x)
{
  return __clc_convert_half16(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertUToF_Rhalf16_rtz(uint16 x)
{
  return __clc_convert_half16_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertUToF_Rhalf16_rte(uint16 x)
{
  return __clc_convert_half16_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertUToF_Rhalf16_rtp(uint16 x)
{
  return __clc_convert_half16_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertUToF_Rhalf16_rtn(uint16 x)
{
  return __clc_convert_half16_rtn(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertUToF_Rfloat(uint x)
{
  return __clc_convert_float(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertUToF_Rfloat_rtz(uint x)
{
  return __clc_convert_float_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertUToF_Rfloat_rte(uint x)
{
  return __clc_convert_float_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertUToF_Rfloat_rtp(uint x)
{
  return __clc_convert_float_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertUToF_Rfloat_rtn(uint x)
{
  return __clc_convert_float_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertUToF_Rfloat2(uint2 x)
{
  return __clc_convert_float2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertUToF_Rfloat2_rtz(uint2 x)
{
  return __clc_convert_float2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertUToF_Rfloat2_rte(uint2 x)
{
  return __clc_convert_float2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertUToF_Rfloat2_rtp(uint2 x)
{
  return __clc_convert_float2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertUToF_Rfloat2_rtn(uint2 x)
{
  return __clc_convert_float2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertUToF_Rfloat3(uint3 x)
{
  return __clc_convert_float3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertUToF_Rfloat3_rtz(uint3 x)
{
  return __clc_convert_float3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertUToF_Rfloat3_rte(uint3 x)
{
  return __clc_convert_float3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertUToF_Rfloat3_rtp(uint3 x)
{
  return __clc_convert_float3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertUToF_Rfloat3_rtn(uint3 x)
{
  return __clc_convert_float3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertUToF_Rfloat4(uint4 x)
{
  return __clc_convert_float4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertUToF_Rfloat4_rtz(uint4 x)
{
  return __clc_convert_float4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertUToF_Rfloat4_rte(uint4 x)
{
  return __clc_convert_float4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertUToF_Rfloat4_rtp(uint4 x)
{
  return __clc_convert_float4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertUToF_Rfloat4_rtn(uint4 x)
{
  return __clc_convert_float4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertUToF_Rfloat8(uint8 x)
{
  return __clc_convert_float8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertUToF_Rfloat8_rtz(uint8 x)
{
  return __clc_convert_float8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertUToF_Rfloat8_rte(uint8 x)
{
  return __clc_convert_float8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertUToF_Rfloat8_rtp(uint8 x)
{
  return __clc_convert_float8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertUToF_Rfloat8_rtn(uint8 x)
{
  return __clc_convert_float8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertUToF_Rfloat16(uint16 x)
{
  return __clc_convert_float16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertUToF_Rfloat16_rtz(uint16 x)
{
  return __clc_convert_float16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertUToF_Rfloat16_rte(uint16 x)
{
  return __clc_convert_float16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertUToF_Rfloat16_rtp(uint16 x)
{
  return __clc_convert_float16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertUToF_Rfloat16_rtn(uint16 x)
{
  return __clc_convert_float16_rtn(x);
}

#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertUToF_Rdouble(uint x)
{
  return __clc_convert_double(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertUToF_Rdouble_rtz(uint x)
{
  return __clc_convert_double_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertUToF_Rdouble_rte(uint x)
{
  return __clc_convert_double_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertUToF_Rdouble_rtp(uint x)
{
  return __clc_convert_double_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertUToF_Rdouble_rtn(uint x)
{
  return __clc_convert_double_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertUToF_Rdouble2(uint2 x)
{
  return __clc_convert_double2(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertUToF_Rdouble2_rtz(uint2 x)
{
  return __clc_convert_double2_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertUToF_Rdouble2_rte(uint2 x)
{
  return __clc_convert_double2_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertUToF_Rdouble2_rtp(uint2 x)
{
  return __clc_convert_double2_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertUToF_Rdouble2_rtn(uint2 x)
{
  return __clc_convert_double2_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertUToF_Rdouble3(uint3 x)
{
  return __clc_convert_double3(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertUToF_Rdouble3_rtz(uint3 x)
{
  return __clc_convert_double3_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertUToF_Rdouble3_rte(uint3 x)
{
  return __clc_convert_double3_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertUToF_Rdouble3_rtp(uint3 x)
{
  return __clc_convert_double3_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertUToF_Rdouble3_rtn(uint3 x)
{
  return __clc_convert_double3_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertUToF_Rdouble4(uint4 x)
{
  return __clc_convert_double4(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertUToF_Rdouble4_rtz(uint4 x)
{
  return __clc_convert_double4_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertUToF_Rdouble4_rte(uint4 x)
{
  return __clc_convert_double4_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertUToF_Rdouble4_rtp(uint4 x)
{
  return __clc_convert_double4_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertUToF_Rdouble4_rtn(uint4 x)
{
  return __clc_convert_double4_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertUToF_Rdouble8(uint8 x)
{
  return __clc_convert_double8(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertUToF_Rdouble8_rtz(uint8 x)
{
  return __clc_convert_double8_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertUToF_Rdouble8_rte(uint8 x)
{
  return __clc_convert_double8_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertUToF_Rdouble8_rtp(uint8 x)
{
  return __clc_convert_double8_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertUToF_Rdouble8_rtn(uint8 x)
{
  return __clc_convert_double8_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertUToF_Rdouble16(uint16 x)
{
  return __clc_convert_double16(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertUToF_Rdouble16_rtz(uint16 x)
{
  return __clc_convert_double16_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertUToF_Rdouble16_rte(uint16 x)
{
  return __clc_convert_double16_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertUToF_Rdouble16_rtp(uint16 x)
{
  return __clc_convert_double16_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertUToF_Rdouble16_rtn(uint16 x)
{
  return __clc_convert_double16_rtn(x);
}

#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertSToF_Rhalf(long x)
{
  return __clc_convert_half(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertSToF_Rhalf_rtz(long x)
{
  return __clc_convert_half_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertSToF_Rhalf_rte(long x)
{
  return __clc_convert_half_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertSToF_Rhalf_rtp(long x)
{
  return __clc_convert_half_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertSToF_Rhalf_rtn(long x)
{
  return __clc_convert_half_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertSToF_Rhalf2(long2 x)
{
  return __clc_convert_half2(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertSToF_Rhalf2_rtz(long2 x)
{
  return __clc_convert_half2_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertSToF_Rhalf2_rte(long2 x)
{
  return __clc_convert_half2_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertSToF_Rhalf2_rtp(long2 x)
{
  return __clc_convert_half2_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertSToF_Rhalf2_rtn(long2 x)
{
  return __clc_convert_half2_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertSToF_Rhalf3(long3 x)
{
  return __clc_convert_half3(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertSToF_Rhalf3_rtz(long3 x)
{
  return __clc_convert_half3_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertSToF_Rhalf3_rte(long3 x)
{
  return __clc_convert_half3_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertSToF_Rhalf3_rtp(long3 x)
{
  return __clc_convert_half3_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertSToF_Rhalf3_rtn(long3 x)
{
  return __clc_convert_half3_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertSToF_Rhalf4(long4 x)
{
  return __clc_convert_half4(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertSToF_Rhalf4_rtz(long4 x)
{
  return __clc_convert_half4_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertSToF_Rhalf4_rte(long4 x)
{
  return __clc_convert_half4_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertSToF_Rhalf4_rtp(long4 x)
{
  return __clc_convert_half4_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertSToF_Rhalf4_rtn(long4 x)
{
  return __clc_convert_half4_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertSToF_Rhalf8(long8 x)
{
  return __clc_convert_half8(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertSToF_Rhalf8_rtz(long8 x)
{
  return __clc_convert_half8_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertSToF_Rhalf8_rte(long8 x)
{
  return __clc_convert_half8_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertSToF_Rhalf8_rtp(long8 x)
{
  return __clc_convert_half8_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertSToF_Rhalf8_rtn(long8 x)
{
  return __clc_convert_half8_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertSToF_Rhalf16(long16 x)
{
  return __clc_convert_half16(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertSToF_Rhalf16_rtz(long16 x)
{
  return __clc_convert_half16_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertSToF_Rhalf16_rte(long16 x)
{
  return __clc_convert_half16_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertSToF_Rhalf16_rtp(long16 x)
{
  return __clc_convert_half16_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertSToF_Rhalf16_rtn(long16 x)
{
  return __clc_convert_half16_rtn(x);
}

#endif
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertSToF_Rfloat(long x)
{
  return __clc_convert_float(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertSToF_Rfloat_rtz(long x)
{
  return __clc_convert_float_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertSToF_Rfloat_rte(long x)
{
  return __clc_convert_float_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertSToF_Rfloat_rtp(long x)
{
  return __clc_convert_float_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertSToF_Rfloat_rtn(long x)
{
  return __clc_convert_float_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertSToF_Rfloat2(long2 x)
{
  return __clc_convert_float2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertSToF_Rfloat2_rtz(long2 x)
{
  return __clc_convert_float2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertSToF_Rfloat2_rte(long2 x)
{
  return __clc_convert_float2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertSToF_Rfloat2_rtp(long2 x)
{
  return __clc_convert_float2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertSToF_Rfloat2_rtn(long2 x)
{
  return __clc_convert_float2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertSToF_Rfloat3(long3 x)
{
  return __clc_convert_float3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertSToF_Rfloat3_rtz(long3 x)
{
  return __clc_convert_float3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertSToF_Rfloat3_rte(long3 x)
{
  return __clc_convert_float3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertSToF_Rfloat3_rtp(long3 x)
{
  return __clc_convert_float3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertSToF_Rfloat3_rtn(long3 x)
{
  return __clc_convert_float3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertSToF_Rfloat4(long4 x)
{
  return __clc_convert_float4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertSToF_Rfloat4_rtz(long4 x)
{
  return __clc_convert_float4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertSToF_Rfloat4_rte(long4 x)
{
  return __clc_convert_float4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertSToF_Rfloat4_rtp(long4 x)
{
  return __clc_convert_float4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertSToF_Rfloat4_rtn(long4 x)
{
  return __clc_convert_float4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertSToF_Rfloat8(long8 x)
{
  return __clc_convert_float8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertSToF_Rfloat8_rtz(long8 x)
{
  return __clc_convert_float8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertSToF_Rfloat8_rte(long8 x)
{
  return __clc_convert_float8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertSToF_Rfloat8_rtp(long8 x)
{
  return __clc_convert_float8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertSToF_Rfloat8_rtn(long8 x)
{
  return __clc_convert_float8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertSToF_Rfloat16(long16 x)
{
  return __clc_convert_float16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertSToF_Rfloat16_rtz(long16 x)
{
  return __clc_convert_float16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertSToF_Rfloat16_rte(long16 x)
{
  return __clc_convert_float16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertSToF_Rfloat16_rtp(long16 x)
{
  return __clc_convert_float16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertSToF_Rfloat16_rtn(long16 x)
{
  return __clc_convert_float16_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertSToF_Rdouble(long x)
{
  return __clc_convert_double(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertSToF_Rdouble_rtz(long x)
{
  return __clc_convert_double_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertSToF_Rdouble_rte(long x)
{
  return __clc_convert_double_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertSToF_Rdouble_rtp(long x)
{
  return __clc_convert_double_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertSToF_Rdouble_rtn(long x)
{
  return __clc_convert_double_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertSToF_Rdouble2(long2 x)
{
  return __clc_convert_double2(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertSToF_Rdouble2_rtz(long2 x)
{
  return __clc_convert_double2_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertSToF_Rdouble2_rte(long2 x)
{
  return __clc_convert_double2_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertSToF_Rdouble2_rtp(long2 x)
{
  return __clc_convert_double2_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertSToF_Rdouble2_rtn(long2 x)
{
  return __clc_convert_double2_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertSToF_Rdouble3(long3 x)
{
  return __clc_convert_double3(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertSToF_Rdouble3_rtz(long3 x)
{
  return __clc_convert_double3_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertSToF_Rdouble3_rte(long3 x)
{
  return __clc_convert_double3_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertSToF_Rdouble3_rtp(long3 x)
{
  return __clc_convert_double3_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertSToF_Rdouble3_rtn(long3 x)
{
  return __clc_convert_double3_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertSToF_Rdouble4(long4 x)
{
  return __clc_convert_double4(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertSToF_Rdouble4_rtz(long4 x)
{
  return __clc_convert_double4_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertSToF_Rdouble4_rte(long4 x)
{
  return __clc_convert_double4_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertSToF_Rdouble4_rtp(long4 x)
{
  return __clc_convert_double4_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertSToF_Rdouble4_rtn(long4 x)
{
  return __clc_convert_double4_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertSToF_Rdouble8(long8 x)
{
  return __clc_convert_double8(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertSToF_Rdouble8_rtz(long8 x)
{
  return __clc_convert_double8_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertSToF_Rdouble8_rte(long8 x)
{
  return __clc_convert_double8_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertSToF_Rdouble8_rtp(long8 x)
{
  return __clc_convert_double8_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertSToF_Rdouble8_rtn(long8 x)
{
  return __clc_convert_double8_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertSToF_Rdouble16(long16 x)
{
  return __clc_convert_double16(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertSToF_Rdouble16_rtz(long16 x)
{
  return __clc_convert_double16_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertSToF_Rdouble16_rte(long16 x)
{
  return __clc_convert_double16_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertSToF_Rdouble16_rtp(long16 x)
{
  return __clc_convert_double16_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertSToF_Rdouble16_rtn(long16 x)
{
  return __clc_convert_double16_rtn(x);
}

#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertUToF_Rhalf(ulong x)
{
  return __clc_convert_half(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertUToF_Rhalf_rtz(ulong x)
{
  return __clc_convert_half_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertUToF_Rhalf_rte(ulong x)
{
  return __clc_convert_half_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertUToF_Rhalf_rtp(ulong x)
{
  return __clc_convert_half_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_ConvertUToF_Rhalf_rtn(ulong x)
{
  return __clc_convert_half_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertUToF_Rhalf2(ulong2 x)
{
  return __clc_convert_half2(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertUToF_Rhalf2_rtz(ulong2 x)
{
  return __clc_convert_half2_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertUToF_Rhalf2_rte(ulong2 x)
{
  return __clc_convert_half2_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertUToF_Rhalf2_rtp(ulong2 x)
{
  return __clc_convert_half2_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_ConvertUToF_Rhalf2_rtn(ulong2 x)
{
  return __clc_convert_half2_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertUToF_Rhalf3(ulong3 x)
{
  return __clc_convert_half3(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertUToF_Rhalf3_rtz(ulong3 x)
{
  return __clc_convert_half3_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertUToF_Rhalf3_rte(ulong3 x)
{
  return __clc_convert_half3_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertUToF_Rhalf3_rtp(ulong3 x)
{
  return __clc_convert_half3_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_ConvertUToF_Rhalf3_rtn(ulong3 x)
{
  return __clc_convert_half3_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertUToF_Rhalf4(ulong4 x)
{
  return __clc_convert_half4(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertUToF_Rhalf4_rtz(ulong4 x)
{
  return __clc_convert_half4_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertUToF_Rhalf4_rte(ulong4 x)
{
  return __clc_convert_half4_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertUToF_Rhalf4_rtp(ulong4 x)
{
  return __clc_convert_half4_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_ConvertUToF_Rhalf4_rtn(ulong4 x)
{
  return __clc_convert_half4_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertUToF_Rhalf8(ulong8 x)
{
  return __clc_convert_half8(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertUToF_Rhalf8_rtz(ulong8 x)
{
  return __clc_convert_half8_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertUToF_Rhalf8_rte(ulong8 x)
{
  return __clc_convert_half8_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertUToF_Rhalf8_rtp(ulong8 x)
{
  return __clc_convert_half8_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_ConvertUToF_Rhalf8_rtn(ulong8 x)
{
  return __clc_convert_half8_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertUToF_Rhalf16(ulong16 x)
{
  return __clc_convert_half16(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertUToF_Rhalf16_rtz(ulong16 x)
{
  return __clc_convert_half16_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertUToF_Rhalf16_rte(ulong16 x)
{
  return __clc_convert_half16_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertUToF_Rhalf16_rtp(ulong16 x)
{
  return __clc_convert_half16_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_ConvertUToF_Rhalf16_rtn(ulong16 x)
{
  return __clc_convert_half16_rtn(x);
}

#endif
#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertUToF_Rfloat(ulong x)
{
  return __clc_convert_float(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertUToF_Rfloat_rtz(ulong x)
{
  return __clc_convert_float_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertUToF_Rfloat_rte(ulong x)
{
  return __clc_convert_float_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertUToF_Rfloat_rtp(ulong x)
{
  return __clc_convert_float_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_ConvertUToF_Rfloat_rtn(ulong x)
{
  return __clc_convert_float_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertUToF_Rfloat2(ulong2 x)
{
  return __clc_convert_float2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertUToF_Rfloat2_rtz(ulong2 x)
{
  return __clc_convert_float2_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertUToF_Rfloat2_rte(ulong2 x)
{
  return __clc_convert_float2_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertUToF_Rfloat2_rtp(ulong2 x)
{
  return __clc_convert_float2_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_ConvertUToF_Rfloat2_rtn(ulong2 x)
{
  return __clc_convert_float2_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertUToF_Rfloat3(ulong3 x)
{
  return __clc_convert_float3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertUToF_Rfloat3_rtz(ulong3 x)
{
  return __clc_convert_float3_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertUToF_Rfloat3_rte(ulong3 x)
{
  return __clc_convert_float3_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertUToF_Rfloat3_rtp(ulong3 x)
{
  return __clc_convert_float3_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_ConvertUToF_Rfloat3_rtn(ulong3 x)
{
  return __clc_convert_float3_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertUToF_Rfloat4(ulong4 x)
{
  return __clc_convert_float4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertUToF_Rfloat4_rtz(ulong4 x)
{
  return __clc_convert_float4_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertUToF_Rfloat4_rte(ulong4 x)
{
  return __clc_convert_float4_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertUToF_Rfloat4_rtp(ulong4 x)
{
  return __clc_convert_float4_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_ConvertUToF_Rfloat4_rtn(ulong4 x)
{
  return __clc_convert_float4_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertUToF_Rfloat8(ulong8 x)
{
  return __clc_convert_float8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertUToF_Rfloat8_rtz(ulong8 x)
{
  return __clc_convert_float8_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertUToF_Rfloat8_rte(ulong8 x)
{
  return __clc_convert_float8_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertUToF_Rfloat8_rtp(ulong8 x)
{
  return __clc_convert_float8_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_ConvertUToF_Rfloat8_rtn(ulong8 x)
{
  return __clc_convert_float8_rtn(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertUToF_Rfloat16(ulong16 x)
{
  return __clc_convert_float16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertUToF_Rfloat16_rtz(ulong16 x)
{
  return __clc_convert_float16_rtz(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertUToF_Rfloat16_rte(ulong16 x)
{
  return __clc_convert_float16_rte(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertUToF_Rfloat16_rtp(ulong16 x)
{
  return __clc_convert_float16_rtp(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_ConvertUToF_Rfloat16_rtn(ulong16 x)
{
  return __clc_convert_float16_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertUToF_Rdouble(ulong x)
{
  return __clc_convert_double(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertUToF_Rdouble_rtz(ulong x)
{
  return __clc_convert_double_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertUToF_Rdouble_rte(ulong x)
{
  return __clc_convert_double_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertUToF_Rdouble_rtp(ulong x)
{
  return __clc_convert_double_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_ConvertUToF_Rdouble_rtn(ulong x)
{
  return __clc_convert_double_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertUToF_Rdouble2(ulong2 x)
{
  return __clc_convert_double2(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertUToF_Rdouble2_rtz(ulong2 x)
{
  return __clc_convert_double2_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertUToF_Rdouble2_rte(ulong2 x)
{
  return __clc_convert_double2_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertUToF_Rdouble2_rtp(ulong2 x)
{
  return __clc_convert_double2_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_ConvertUToF_Rdouble2_rtn(ulong2 x)
{
  return __clc_convert_double2_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertUToF_Rdouble3(ulong3 x)
{
  return __clc_convert_double3(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertUToF_Rdouble3_rtz(ulong3 x)
{
  return __clc_convert_double3_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertUToF_Rdouble3_rte(ulong3 x)
{
  return __clc_convert_double3_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertUToF_Rdouble3_rtp(ulong3 x)
{
  return __clc_convert_double3_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_ConvertUToF_Rdouble3_rtn(ulong3 x)
{
  return __clc_convert_double3_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertUToF_Rdouble4(ulong4 x)
{
  return __clc_convert_double4(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertUToF_Rdouble4_rtz(ulong4 x)
{
  return __clc_convert_double4_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertUToF_Rdouble4_rte(ulong4 x)
{
  return __clc_convert_double4_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertUToF_Rdouble4_rtp(ulong4 x)
{
  return __clc_convert_double4_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_ConvertUToF_Rdouble4_rtn(ulong4 x)
{
  return __clc_convert_double4_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertUToF_Rdouble8(ulong8 x)
{
  return __clc_convert_double8(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertUToF_Rdouble8_rtz(ulong8 x)
{
  return __clc_convert_double8_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertUToF_Rdouble8_rte(ulong8 x)
{
  return __clc_convert_double8_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertUToF_Rdouble8_rtp(ulong8 x)
{
  return __clc_convert_double8_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_ConvertUToF_Rdouble8_rtn(ulong8 x)
{
  return __clc_convert_double8_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertUToF_Rdouble16(ulong16 x)
{
  return __clc_convert_double16(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertUToF_Rdouble16_rtz(ulong16 x)
{
  return __clc_convert_double16_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertUToF_Rdouble16_rte(ulong16 x)
{
  return __clc_convert_double16_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertUToF_Rdouble16_rtp(ulong16 x)
{
  return __clc_convert_double16_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_ConvertUToF_Rdouble16_rtn(ulong16 x)
{
  return __clc_convert_double16_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_FConvert_Rhalf(half x)
{
  return __clc_convert_half(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_FConvert_Rhalf_rtz(half x)
{
  return __clc_convert_half_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_FConvert_Rhalf_rte(half x)
{
  return __clc_convert_half_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_FConvert_Rhalf_rtp(half x)
{
  return __clc_convert_half_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_FConvert_Rhalf_rtn(half x)
{
  return __clc_convert_half_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_FConvert_Rhalf2(half2 x)
{
  return __clc_convert_half2(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_FConvert_Rhalf2_rtz(half2 x)
{
  return __clc_convert_half2_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_FConvert_Rhalf2_rte(half2 x)
{
  return __clc_convert_half2_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_FConvert_Rhalf2_rtp(half2 x)
{
  return __clc_convert_half2_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_FConvert_Rhalf2_rtn(half2 x)
{
  return __clc_convert_half2_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_FConvert_Rhalf3(half3 x)
{
  return __clc_convert_half3(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_FConvert_Rhalf3_rtz(half3 x)
{
  return __clc_convert_half3_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_FConvert_Rhalf3_rte(half3 x)
{
  return __clc_convert_half3_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_FConvert_Rhalf3_rtp(half3 x)
{
  return __clc_convert_half3_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_FConvert_Rhalf3_rtn(half3 x)
{
  return __clc_convert_half3_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_FConvert_Rhalf4(half4 x)
{
  return __clc_convert_half4(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_FConvert_Rhalf4_rtz(half4 x)
{
  return __clc_convert_half4_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_FConvert_Rhalf4_rte(half4 x)
{
  return __clc_convert_half4_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_FConvert_Rhalf4_rtp(half4 x)
{
  return __clc_convert_half4_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_FConvert_Rhalf4_rtn(half4 x)
{
  return __clc_convert_half4_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_FConvert_Rhalf8(half8 x)
{
  return __clc_convert_half8(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_FConvert_Rhalf8_rtz(half8 x)
{
  return __clc_convert_half8_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_FConvert_Rhalf8_rte(half8 x)
{
  return __clc_convert_half8_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_FConvert_Rhalf8_rtp(half8 x)
{
  return __clc_convert_half8_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_FConvert_Rhalf8_rtn(half8 x)
{
  return __clc_convert_half8_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_FConvert_Rhalf16(half16 x)
{
  return __clc_convert_half16(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_FConvert_Rhalf16_rtz(half16 x)
{
  return __clc_convert_half16_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_FConvert_Rhalf16_rte(half16 x)
{
  return __clc_convert_half16_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_FConvert_Rhalf16_rtp(half16 x)
{
  return __clc_convert_half16_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_FConvert_Rhalf16_rtn(half16 x)
{
  return __clc_convert_half16_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_FConvert_Rfloat(half x)
{
  return __clc_convert_float(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_FConvert_Rfloat_rtz(half x)
{
  return __clc_convert_float_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_FConvert_Rfloat_rte(half x)
{
  return __clc_convert_float_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_FConvert_Rfloat_rtp(half x)
{
  return __clc_convert_float_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_FConvert_Rfloat_rtn(half x)
{
  return __clc_convert_float_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_FConvert_Rfloat2(half2 x)
{
  return __clc_convert_float2(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_FConvert_Rfloat2_rtz(half2 x)
{
  return __clc_convert_float2_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_FConvert_Rfloat2_rte(half2 x)
{
  return __clc_convert_float2_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_FConvert_Rfloat2_rtp(half2 x)
{
  return __clc_convert_float2_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_FConvert_Rfloat2_rtn(half2 x)
{
  return __clc_convert_float2_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_FConvert_Rfloat3(half3 x)
{
  return __clc_convert_float3(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_FConvert_Rfloat3_rtz(half3 x)
{
  return __clc_convert_float3_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_FConvert_Rfloat3_rte(half3 x)
{
  return __clc_convert_float3_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_FConvert_Rfloat3_rtp(half3 x)
{
  return __clc_convert_float3_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_FConvert_Rfloat3_rtn(half3 x)
{
  return __clc_convert_float3_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_FConvert_Rfloat4(half4 x)
{
  return __clc_convert_float4(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_FConvert_Rfloat4_rtz(half4 x)
{
  return __clc_convert_float4_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_FConvert_Rfloat4_rte(half4 x)
{
  return __clc_convert_float4_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_FConvert_Rfloat4_rtp(half4 x)
{
  return __clc_convert_float4_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_FConvert_Rfloat4_rtn(half4 x)
{
  return __clc_convert_float4_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_FConvert_Rfloat8(half8 x)
{
  return __clc_convert_float8(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_FConvert_Rfloat8_rtz(half8 x)
{
  return __clc_convert_float8_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_FConvert_Rfloat8_rte(half8 x)
{
  return __clc_convert_float8_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_FConvert_Rfloat8_rtp(half8 x)
{
  return __clc_convert_float8_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_FConvert_Rfloat8_rtn(half8 x)
{
  return __clc_convert_float8_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_FConvert_Rfloat16(half16 x)
{
  return __clc_convert_float16(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_FConvert_Rfloat16_rtz(half16 x)
{
  return __clc_convert_float16_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_FConvert_Rfloat16_rte(half16 x)
{
  return __clc_convert_float16_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_FConvert_Rfloat16_rtp(half16 x)
{
  return __clc_convert_float16_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_FConvert_Rfloat16_rtn(half16 x)
{
  return __clc_convert_float16_rtn(x);
}

#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_FConvert_Rdouble(half x)
{
  return __clc_convert_double(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_FConvert_Rdouble_rtz(half x)
{
  return __clc_convert_double_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_FConvert_Rdouble_rte(half x)
{
  return __clc_convert_double_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_FConvert_Rdouble_rtp(half x)
{
  return __clc_convert_double_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_FConvert_Rdouble_rtn(half x)
{
  return __clc_convert_double_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_FConvert_Rdouble2(half2 x)
{
  return __clc_convert_double2(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_FConvert_Rdouble2_rtz(half2 x)
{
  return __clc_convert_double2_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_FConvert_Rdouble2_rte(half2 x)
{
  return __clc_convert_double2_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_FConvert_Rdouble2_rtp(half2 x)
{
  return __clc_convert_double2_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_FConvert_Rdouble2_rtn(half2 x)
{
  return __clc_convert_double2_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_FConvert_Rdouble3(half3 x)
{
  return __clc_convert_double3(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_FConvert_Rdouble3_rtz(half3 x)
{
  return __clc_convert_double3_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_FConvert_Rdouble3_rte(half3 x)
{
  return __clc_convert_double3_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_FConvert_Rdouble3_rtp(half3 x)
{
  return __clc_convert_double3_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_FConvert_Rdouble3_rtn(half3 x)
{
  return __clc_convert_double3_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_FConvert_Rdouble4(half4 x)
{
  return __clc_convert_double4(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_FConvert_Rdouble4_rtz(half4 x)
{
  return __clc_convert_double4_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_FConvert_Rdouble4_rte(half4 x)
{
  return __clc_convert_double4_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_FConvert_Rdouble4_rtp(half4 x)
{
  return __clc_convert_double4_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_FConvert_Rdouble4_rtn(half4 x)
{
  return __clc_convert_double4_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_FConvert_Rdouble8(half8 x)
{
  return __clc_convert_double8(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_FConvert_Rdouble8_rtz(half8 x)
{
  return __clc_convert_double8_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_FConvert_Rdouble8_rte(half8 x)
{
  return __clc_convert_double8_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_FConvert_Rdouble8_rtp(half8 x)
{
  return __clc_convert_double8_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_FConvert_Rdouble8_rtn(half8 x)
{
  return __clc_convert_double8_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_FConvert_Rdouble16(half16 x)
{
  return __clc_convert_double16(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_FConvert_Rdouble16_rtz(half16 x)
{
  return __clc_convert_double16_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_FConvert_Rdouble16_rte(half16 x)
{
  return __clc_convert_double16_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_FConvert_Rdouble16_rtp(half16 x)
{
  return __clc_convert_double16_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_FConvert_Rdouble16_rtn(half16 x)
{
  return __clc_convert_double16_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_FConvert_Rhalf(float x)
{
  return __clc_convert_half(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_FConvert_Rhalf_rtz(float x)
{
  return __clc_convert_half_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_FConvert_Rhalf_rte(float x)
{
  return __clc_convert_half_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_FConvert_Rhalf_rtp(float x)
{
  return __clc_convert_half_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_FConvert_Rhalf_rtn(float x)
{
  return __clc_convert_half_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_FConvert_Rhalf2(float2 x)
{
  return __clc_convert_half2(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_FConvert_Rhalf2_rtz(float2 x)
{
  return __clc_convert_half2_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_FConvert_Rhalf2_rte(float2 x)
{
  return __clc_convert_half2_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_FConvert_Rhalf2_rtp(float2 x)
{
  return __clc_convert_half2_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_FConvert_Rhalf2_rtn(float2 x)
{
  return __clc_convert_half2_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_FConvert_Rhalf3(float3 x)
{
  return __clc_convert_half3(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_FConvert_Rhalf3_rtz(float3 x)
{
  return __clc_convert_half3_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_FConvert_Rhalf3_rte(float3 x)
{
  return __clc_convert_half3_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_FConvert_Rhalf3_rtp(float3 x)
{
  return __clc_convert_half3_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_FConvert_Rhalf3_rtn(float3 x)
{
  return __clc_convert_half3_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_FConvert_Rhalf4(float4 x)
{
  return __clc_convert_half4(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_FConvert_Rhalf4_rtz(float4 x)
{
  return __clc_convert_half4_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_FConvert_Rhalf4_rte(float4 x)
{
  return __clc_convert_half4_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_FConvert_Rhalf4_rtp(float4 x)
{
  return __clc_convert_half4_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_FConvert_Rhalf4_rtn(float4 x)
{
  return __clc_convert_half4_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_FConvert_Rhalf8(float8 x)
{
  return __clc_convert_half8(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_FConvert_Rhalf8_rtz(float8 x)
{
  return __clc_convert_half8_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_FConvert_Rhalf8_rte(float8 x)
{
  return __clc_convert_half8_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_FConvert_Rhalf8_rtp(float8 x)
{
  return __clc_convert_half8_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_FConvert_Rhalf8_rtn(float8 x)
{
  return __clc_convert_half8_rtn(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_FConvert_Rhalf16(float16 x)
{
  return __clc_convert_half16(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_FConvert_Rhalf16_rtz(float16 x)
{
  return __clc_convert_half16_rtz(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_FConvert_Rhalf16_rte(float16 x)
{
  return __clc_convert_half16_rte(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_FConvert_Rhalf16_rtp(float16 x)
{
  return __clc_convert_half16_rtp(x);
}

#endif
#ifdef cl_khr_fp16
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_FConvert_Rhalf16_rtn(float16 x)
{
  return __clc_convert_half16_rtn(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_FConvert_Rfloat(float x)
{
  return __clc_convert_float(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_FConvert_Rfloat_rtz(float x)
{
  return __clc_convert_float_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_FConvert_Rfloat_rte(float x)
{
  return __clc_convert_float_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_FConvert_Rfloat_rtp(float x)
{
  return __clc_convert_float_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_FConvert_Rfloat_rtn(float x)
{
  return __clc_convert_float_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_FConvert_Rfloat2(float2 x)
{
  return __clc_convert_float2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_FConvert_Rfloat2_rtz(float2 x)
{
  return __clc_convert_float2_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_FConvert_Rfloat2_rte(float2 x)
{
  return __clc_convert_float2_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_FConvert_Rfloat2_rtp(float2 x)
{
  return __clc_convert_float2_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_FConvert_Rfloat2_rtn(float2 x)
{
  return __clc_convert_float2_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_FConvert_Rfloat3(float3 x)
{
  return __clc_convert_float3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_FConvert_Rfloat3_rtz(float3 x)
{
  return __clc_convert_float3_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_FConvert_Rfloat3_rte(float3 x)
{
  return __clc_convert_float3_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_FConvert_Rfloat3_rtp(float3 x)
{
  return __clc_convert_float3_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_FConvert_Rfloat3_rtn(float3 x)
{
  return __clc_convert_float3_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_FConvert_Rfloat4(float4 x)
{
  return __clc_convert_float4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_FConvert_Rfloat4_rtz(float4 x)
{
  return __clc_convert_float4_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_FConvert_Rfloat4_rte(float4 x)
{
  return __clc_convert_float4_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_FConvert_Rfloat4_rtp(float4 x)
{
  return __clc_convert_float4_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_FConvert_Rfloat4_rtn(float4 x)
{
  return __clc_convert_float4_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_FConvert_Rfloat8(float8 x)
{
  return __clc_convert_float8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_FConvert_Rfloat8_rtz(float8 x)
{
  return __clc_convert_float8_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_FConvert_Rfloat8_rte(float8 x)
{
  return __clc_convert_float8_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_FConvert_Rfloat8_rtp(float8 x)
{
  return __clc_convert_float8_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_FConvert_Rfloat8_rtn(float8 x)
{
  return __clc_convert_float8_rtn(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_FConvert_Rfloat16(float16 x)
{
  return __clc_convert_float16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_FConvert_Rfloat16_rtz(float16 x)
{
  return __clc_convert_float16_rtz(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_FConvert_Rfloat16_rte(float16 x)
{
  return __clc_convert_float16_rte(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_FConvert_Rfloat16_rtp(float16 x)
{
  return __clc_convert_float16_rtp(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_FConvert_Rfloat16_rtn(float16 x)
{
  return __clc_convert_float16_rtn(x);
}

#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_FConvert_Rdouble(float x)
{
  return __clc_convert_double(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_FConvert_Rdouble_rtz(float x)
{
  return __clc_convert_double_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_FConvert_Rdouble_rte(float x)
{
  return __clc_convert_double_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_FConvert_Rdouble_rtp(float x)
{
  return __clc_convert_double_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_FConvert_Rdouble_rtn(float x)
{
  return __clc_convert_double_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_FConvert_Rdouble2(float2 x)
{
  return __clc_convert_double2(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_FConvert_Rdouble2_rtz(float2 x)
{
  return __clc_convert_double2_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_FConvert_Rdouble2_rte(float2 x)
{
  return __clc_convert_double2_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_FConvert_Rdouble2_rtp(float2 x)
{
  return __clc_convert_double2_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_FConvert_Rdouble2_rtn(float2 x)
{
  return __clc_convert_double2_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_FConvert_Rdouble3(float3 x)
{
  return __clc_convert_double3(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_FConvert_Rdouble3_rtz(float3 x)
{
  return __clc_convert_double3_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_FConvert_Rdouble3_rte(float3 x)
{
  return __clc_convert_double3_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_FConvert_Rdouble3_rtp(float3 x)
{
  return __clc_convert_double3_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_FConvert_Rdouble3_rtn(float3 x)
{
  return __clc_convert_double3_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_FConvert_Rdouble4(float4 x)
{
  return __clc_convert_double4(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_FConvert_Rdouble4_rtz(float4 x)
{
  return __clc_convert_double4_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_FConvert_Rdouble4_rte(float4 x)
{
  return __clc_convert_double4_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_FConvert_Rdouble4_rtp(float4 x)
{
  return __clc_convert_double4_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_FConvert_Rdouble4_rtn(float4 x)
{
  return __clc_convert_double4_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_FConvert_Rdouble8(float8 x)
{
  return __clc_convert_double8(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_FConvert_Rdouble8_rtz(float8 x)
{
  return __clc_convert_double8_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_FConvert_Rdouble8_rte(float8 x)
{
  return __clc_convert_double8_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_FConvert_Rdouble8_rtp(float8 x)
{
  return __clc_convert_double8_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_FConvert_Rdouble8_rtn(float8 x)
{
  return __clc_convert_double8_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_FConvert_Rdouble16(float16 x)
{
  return __clc_convert_double16(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_FConvert_Rdouble16_rtz(float16 x)
{
  return __clc_convert_double16_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_FConvert_Rdouble16_rte(float16 x)
{
  return __clc_convert_double16_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_FConvert_Rdouble16_rtp(float16 x)
{
  return __clc_convert_double16_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_FConvert_Rdouble16_rtn(float16 x)
{
  return __clc_convert_double16_rtn(x);
}

#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_FConvert_Rhalf(double x)
{
  return __clc_convert_half(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_FConvert_Rhalf_rtz(double x)
{
  return __clc_convert_half_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_FConvert_Rhalf_rte(double x)
{
  return __clc_convert_half_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_FConvert_Rhalf_rtp(double x)
{
  return __clc_convert_half_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half __spirv_FConvert_Rhalf_rtn(double x)
{
  return __clc_convert_half_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_FConvert_Rhalf2(double2 x)
{
  return __clc_convert_half2(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_FConvert_Rhalf2_rtz(double2 x)
{
  return __clc_convert_half2_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_FConvert_Rhalf2_rte(double2 x)
{
  return __clc_convert_half2_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_FConvert_Rhalf2_rtp(double2 x)
{
  return __clc_convert_half2_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half2 __spirv_FConvert_Rhalf2_rtn(double2 x)
{
  return __clc_convert_half2_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_FConvert_Rhalf3(double3 x)
{
  return __clc_convert_half3(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_FConvert_Rhalf3_rtz(double3 x)
{
  return __clc_convert_half3_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_FConvert_Rhalf3_rte(double3 x)
{
  return __clc_convert_half3_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_FConvert_Rhalf3_rtp(double3 x)
{
  return __clc_convert_half3_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half3 __spirv_FConvert_Rhalf3_rtn(double3 x)
{
  return __clc_convert_half3_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_FConvert_Rhalf4(double4 x)
{
  return __clc_convert_half4(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_FConvert_Rhalf4_rtz(double4 x)
{
  return __clc_convert_half4_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_FConvert_Rhalf4_rte(double4 x)
{
  return __clc_convert_half4_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_FConvert_Rhalf4_rtp(double4 x)
{
  return __clc_convert_half4_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half4 __spirv_FConvert_Rhalf4_rtn(double4 x)
{
  return __clc_convert_half4_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_FConvert_Rhalf8(double8 x)
{
  return __clc_convert_half8(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_FConvert_Rhalf8_rtz(double8 x)
{
  return __clc_convert_half8_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_FConvert_Rhalf8_rte(double8 x)
{
  return __clc_convert_half8_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_FConvert_Rhalf8_rtp(double8 x)
{
  return __clc_convert_half8_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half8 __spirv_FConvert_Rhalf8_rtn(double8 x)
{
  return __clc_convert_half8_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_FConvert_Rhalf16(double16 x)
{
  return __clc_convert_half16(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_FConvert_Rhalf16_rtz(double16 x)
{
  return __clc_convert_half16_rtz(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_FConvert_Rhalf16_rte(double16 x)
{
  return __clc_convert_half16_rte(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_FConvert_Rhalf16_rtp(double16 x)
{
  return __clc_convert_half16_rtp(x);
}

#endif
#endif
#ifdef cl_khr_fp16
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
half16 __spirv_FConvert_Rhalf16_rtn(double16 x)
{
  return __clc_convert_half16_rtn(x);
}

#endif
#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_FConvert_Rfloat(double x)
{
  return __clc_convert_float(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_FConvert_Rfloat_rtz(double x)
{
  return __clc_convert_float_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_FConvert_Rfloat_rte(double x)
{
  return __clc_convert_float_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_FConvert_Rfloat_rtp(double x)
{
  return __clc_convert_float_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float __spirv_FConvert_Rfloat_rtn(double x)
{
  return __clc_convert_float_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_FConvert_Rfloat2(double2 x)
{
  return __clc_convert_float2(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_FConvert_Rfloat2_rtz(double2 x)
{
  return __clc_convert_float2_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_FConvert_Rfloat2_rte(double2 x)
{
  return __clc_convert_float2_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_FConvert_Rfloat2_rtp(double2 x)
{
  return __clc_convert_float2_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float2 __spirv_FConvert_Rfloat2_rtn(double2 x)
{
  return __clc_convert_float2_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_FConvert_Rfloat3(double3 x)
{
  return __clc_convert_float3(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_FConvert_Rfloat3_rtz(double3 x)
{
  return __clc_convert_float3_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_FConvert_Rfloat3_rte(double3 x)
{
  return __clc_convert_float3_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_FConvert_Rfloat3_rtp(double3 x)
{
  return __clc_convert_float3_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float3 __spirv_FConvert_Rfloat3_rtn(double3 x)
{
  return __clc_convert_float3_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_FConvert_Rfloat4(double4 x)
{
  return __clc_convert_float4(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_FConvert_Rfloat4_rtz(double4 x)
{
  return __clc_convert_float4_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_FConvert_Rfloat4_rte(double4 x)
{
  return __clc_convert_float4_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_FConvert_Rfloat4_rtp(double4 x)
{
  return __clc_convert_float4_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float4 __spirv_FConvert_Rfloat4_rtn(double4 x)
{
  return __clc_convert_float4_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_FConvert_Rfloat8(double8 x)
{
  return __clc_convert_float8(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_FConvert_Rfloat8_rtz(double8 x)
{
  return __clc_convert_float8_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_FConvert_Rfloat8_rte(double8 x)
{
  return __clc_convert_float8_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_FConvert_Rfloat8_rtp(double8 x)
{
  return __clc_convert_float8_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float8 __spirv_FConvert_Rfloat8_rtn(double8 x)
{
  return __clc_convert_float8_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_FConvert_Rfloat16(double16 x)
{
  return __clc_convert_float16(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_FConvert_Rfloat16_rtz(double16 x)
{
  return __clc_convert_float16_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_FConvert_Rfloat16_rte(double16 x)
{
  return __clc_convert_float16_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_FConvert_Rfloat16_rtp(double16 x)
{
  return __clc_convert_float16_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
float16 __spirv_FConvert_Rfloat16_rtn(double16 x)
{
  return __clc_convert_float16_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_FConvert_Rdouble(double x)
{
  return __clc_convert_double(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_FConvert_Rdouble_rtz(double x)
{
  return __clc_convert_double_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_FConvert_Rdouble_rte(double x)
{
  return __clc_convert_double_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_FConvert_Rdouble_rtp(double x)
{
  return __clc_convert_double_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double __spirv_FConvert_Rdouble_rtn(double x)
{
  return __clc_convert_double_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_FConvert_Rdouble2(double2 x)
{
  return __clc_convert_double2(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_FConvert_Rdouble2_rtz(double2 x)
{
  return __clc_convert_double2_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_FConvert_Rdouble2_rte(double2 x)
{
  return __clc_convert_double2_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_FConvert_Rdouble2_rtp(double2 x)
{
  return __clc_convert_double2_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double2 __spirv_FConvert_Rdouble2_rtn(double2 x)
{
  return __clc_convert_double2_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_FConvert_Rdouble3(double3 x)
{
  return __clc_convert_double3(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_FConvert_Rdouble3_rtz(double3 x)
{
  return __clc_convert_double3_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_FConvert_Rdouble3_rte(double3 x)
{
  return __clc_convert_double3_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_FConvert_Rdouble3_rtp(double3 x)
{
  return __clc_convert_double3_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double3 __spirv_FConvert_Rdouble3_rtn(double3 x)
{
  return __clc_convert_double3_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_FConvert_Rdouble4(double4 x)
{
  return __clc_convert_double4(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_FConvert_Rdouble4_rtz(double4 x)
{
  return __clc_convert_double4_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_FConvert_Rdouble4_rte(double4 x)
{
  return __clc_convert_double4_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_FConvert_Rdouble4_rtp(double4 x)
{
  return __clc_convert_double4_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double4 __spirv_FConvert_Rdouble4_rtn(double4 x)
{
  return __clc_convert_double4_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_FConvert_Rdouble8(double8 x)
{
  return __clc_convert_double8(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_FConvert_Rdouble8_rtz(double8 x)
{
  return __clc_convert_double8_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_FConvert_Rdouble8_rte(double8 x)
{
  return __clc_convert_double8_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_FConvert_Rdouble8_rtp(double8 x)
{
  return __clc_convert_double8_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double8 __spirv_FConvert_Rdouble8_rtn(double8 x)
{
  return __clc_convert_double8_rtn(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_FConvert_Rdouble16(double16 x)
{
  return __clc_convert_double16(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_FConvert_Rdouble16_rtz(double16 x)
{
  return __clc_convert_double16_rtz(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_FConvert_Rdouble16_rte(double16 x)
{
  return __clc_convert_double16_rte(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_FConvert_Rdouble16_rtp(double16 x)
{
  return __clc_convert_double16_rtp(x);
}

#endif
#ifdef cl_khr_fp64
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
double16 __spirv_FConvert_Rdouble16_rtn(double16 x)
{
  return __clc_convert_double16_rtn(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_UConvert_Ruchar(schar x)
{
  return __clc_convert_uchar(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_SatConvertSToU_Ruchar(schar x)
{
  return __clc_convert_uchar_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_UConvert_Ruchar2(schar2 x)
{
  return __clc_convert_uchar2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_SatConvertSToU_Ruchar2(schar2 x)
{
  return __clc_convert_uchar2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_UConvert_Ruchar3(schar3 x)
{
  return __clc_convert_uchar3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_SatConvertSToU_Ruchar3(schar3 x)
{
  return __clc_convert_uchar3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_UConvert_Ruchar4(schar4 x)
{
  return __clc_convert_uchar4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_SatConvertSToU_Ruchar4(schar4 x)
{
  return __clc_convert_uchar4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_UConvert_Ruchar8(schar8 x)
{
  return __clc_convert_uchar8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_SatConvertSToU_Ruchar8(schar8 x)
{
  return __clc_convert_uchar8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_UConvert_Ruchar16(schar16 x)
{
  return __clc_convert_uchar16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_SatConvertSToU_Ruchar16(schar16 x)
{
  return __clc_convert_uchar16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_UConvert_Rushort(schar x)
{
  return __clc_convert_ushort(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_SatConvertSToU_Rushort(schar x)
{
  return __clc_convert_ushort_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_UConvert_Rushort_sat(schar x)
{
  return __clc_convert_ushort_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_UConvert_Rushort2(schar2 x)
{
  return __clc_convert_ushort2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_SatConvertSToU_Rushort2(schar2 x)
{
  return __clc_convert_ushort2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_UConvert_Rushort2_sat(schar2 x)
{
  return __clc_convert_ushort2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_UConvert_Rushort3(schar3 x)
{
  return __clc_convert_ushort3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_SatConvertSToU_Rushort3(schar3 x)
{
  return __clc_convert_ushort3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_UConvert_Rushort3_sat(schar3 x)
{
  return __clc_convert_ushort3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_UConvert_Rushort4(schar4 x)
{
  return __clc_convert_ushort4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_SatConvertSToU_Rushort4(schar4 x)
{
  return __clc_convert_ushort4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_UConvert_Rushort4_sat(schar4 x)
{
  return __clc_convert_ushort4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_UConvert_Rushort8(schar8 x)
{
  return __clc_convert_ushort8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_SatConvertSToU_Rushort8(schar8 x)
{
  return __clc_convert_ushort8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_UConvert_Rushort8_sat(schar8 x)
{
  return __clc_convert_ushort8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_UConvert_Rushort16(schar16 x)
{
  return __clc_convert_ushort16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_SatConvertSToU_Rushort16(schar16 x)
{
  return __clc_convert_ushort16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_UConvert_Rushort16_sat(schar16 x)
{
  return __clc_convert_ushort16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_UConvert_Ruint(schar x)
{
  return __clc_convert_uint(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_SatConvertSToU_Ruint(schar x)
{
  return __clc_convert_uint_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_UConvert_Ruint_sat(schar x)
{
  return __clc_convert_uint_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_UConvert_Ruint2(schar2 x)
{
  return __clc_convert_uint2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_SatConvertSToU_Ruint2(schar2 x)
{
  return __clc_convert_uint2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_UConvert_Ruint2_sat(schar2 x)
{
  return __clc_convert_uint2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_UConvert_Ruint3(schar3 x)
{
  return __clc_convert_uint3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_SatConvertSToU_Ruint3(schar3 x)
{
  return __clc_convert_uint3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_UConvert_Ruint3_sat(schar3 x)
{
  return __clc_convert_uint3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_UConvert_Ruint4(schar4 x)
{
  return __clc_convert_uint4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_SatConvertSToU_Ruint4(schar4 x)
{
  return __clc_convert_uint4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_UConvert_Ruint4_sat(schar4 x)
{
  return __clc_convert_uint4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_UConvert_Ruint8(schar8 x)
{
  return __clc_convert_uint8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_SatConvertSToU_Ruint8(schar8 x)
{
  return __clc_convert_uint8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_UConvert_Ruint8_sat(schar8 x)
{
  return __clc_convert_uint8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_UConvert_Ruint16(schar16 x)
{
  return __clc_convert_uint16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_SatConvertSToU_Ruint16(schar16 x)
{
  return __clc_convert_uint16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_UConvert_Ruint16_sat(schar16 x)
{
  return __clc_convert_uint16_sat(x);
}

#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_UConvert_Rulong(schar x)
{
  return __clc_convert_ulong(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_SatConvertSToU_Rulong(schar x)
{
  return __clc_convert_ulong_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_UConvert_Rulong_sat(schar x)
{
  return __clc_convert_ulong_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_UConvert_Rulong2(schar2 x)
{
  return __clc_convert_ulong2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_SatConvertSToU_Rulong2(schar2 x)
{
  return __clc_convert_ulong2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_UConvert_Rulong2_sat(schar2 x)
{
  return __clc_convert_ulong2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_UConvert_Rulong3(schar3 x)
{
  return __clc_convert_ulong3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_SatConvertSToU_Rulong3(schar3 x)
{
  return __clc_convert_ulong3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_UConvert_Rulong3_sat(schar3 x)
{
  return __clc_convert_ulong3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_UConvert_Rulong4(schar4 x)
{
  return __clc_convert_ulong4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_SatConvertSToU_Rulong4(schar4 x)
{
  return __clc_convert_ulong4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_UConvert_Rulong4_sat(schar4 x)
{
  return __clc_convert_ulong4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_UConvert_Rulong8(schar8 x)
{
  return __clc_convert_ulong8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_SatConvertSToU_Rulong8(schar8 x)
{
  return __clc_convert_ulong8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_UConvert_Rulong8_sat(schar8 x)
{
  return __clc_convert_ulong8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_UConvert_Rulong16(schar16 x)
{
  return __clc_convert_ulong16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_SatConvertSToU_Rulong16(schar16 x)
{
  return __clc_convert_ulong16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_UConvert_Rulong16_sat(schar16 x)
{
  return __clc_convert_ulong16_sat(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_UConvert_Ruchar(uchar x)
{
  return __clc_convert_uchar(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_UConvert_Ruchar_sat(uchar x)
{
  return __clc_convert_uchar_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_UConvert_Ruchar2(uchar2 x)
{
  return __clc_convert_uchar2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_UConvert_Ruchar2_sat(uchar2 x)
{
  return __clc_convert_uchar2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_UConvert_Ruchar3(uchar3 x)
{
  return __clc_convert_uchar3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_UConvert_Ruchar3_sat(uchar3 x)
{
  return __clc_convert_uchar3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_UConvert_Ruchar4(uchar4 x)
{
  return __clc_convert_uchar4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_UConvert_Ruchar4_sat(uchar4 x)
{
  return __clc_convert_uchar4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_UConvert_Ruchar8(uchar8 x)
{
  return __clc_convert_uchar8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_UConvert_Ruchar8_sat(uchar8 x)
{
  return __clc_convert_uchar8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_UConvert_Ruchar16(uchar16 x)
{
  return __clc_convert_uchar16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_UConvert_Ruchar16_sat(uchar16 x)
{
  return __clc_convert_uchar16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_UConvert_Rushort(uchar x)
{
  return __clc_convert_ushort(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_UConvert_Rushort_sat(uchar x)
{
  return __clc_convert_ushort_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_UConvert_Rushort2(uchar2 x)
{
  return __clc_convert_ushort2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_UConvert_Rushort2_sat(uchar2 x)
{
  return __clc_convert_ushort2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_UConvert_Rushort3(uchar3 x)
{
  return __clc_convert_ushort3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_UConvert_Rushort3_sat(uchar3 x)
{
  return __clc_convert_ushort3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_UConvert_Rushort4(uchar4 x)
{
  return __clc_convert_ushort4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_UConvert_Rushort4_sat(uchar4 x)
{
  return __clc_convert_ushort4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_UConvert_Rushort8(uchar8 x)
{
  return __clc_convert_ushort8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_UConvert_Rushort8_sat(uchar8 x)
{
  return __clc_convert_ushort8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_UConvert_Rushort16(uchar16 x)
{
  return __clc_convert_ushort16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_UConvert_Rushort16_sat(uchar16 x)
{
  return __clc_convert_ushort16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_UConvert_Ruint(uchar x)
{
  return __clc_convert_uint(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_UConvert_Ruint_sat(uchar x)
{
  return __clc_convert_uint_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_UConvert_Ruint2(uchar2 x)
{
  return __clc_convert_uint2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_UConvert_Ruint2_sat(uchar2 x)
{
  return __clc_convert_uint2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_UConvert_Ruint3(uchar3 x)
{
  return __clc_convert_uint3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_UConvert_Ruint3_sat(uchar3 x)
{
  return __clc_convert_uint3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_UConvert_Ruint4(uchar4 x)
{
  return __clc_convert_uint4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_UConvert_Ruint4_sat(uchar4 x)
{
  return __clc_convert_uint4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_UConvert_Ruint8(uchar8 x)
{
  return __clc_convert_uint8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_UConvert_Ruint8_sat(uchar8 x)
{
  return __clc_convert_uint8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_UConvert_Ruint16(uchar16 x)
{
  return __clc_convert_uint16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_UConvert_Ruint16_sat(uchar16 x)
{
  return __clc_convert_uint16_sat(x);
}

#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_UConvert_Rulong(uchar x)
{
  return __clc_convert_ulong(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_UConvert_Rulong_sat(uchar x)
{
  return __clc_convert_ulong_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_UConvert_Rulong2(uchar2 x)
{
  return __clc_convert_ulong2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_UConvert_Rulong2_sat(uchar2 x)
{
  return __clc_convert_ulong2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_UConvert_Rulong3(uchar3 x)
{
  return __clc_convert_ulong3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_UConvert_Rulong3_sat(uchar3 x)
{
  return __clc_convert_ulong3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_UConvert_Rulong4(uchar4 x)
{
  return __clc_convert_ulong4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_UConvert_Rulong4_sat(uchar4 x)
{
  return __clc_convert_ulong4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_UConvert_Rulong8(uchar8 x)
{
  return __clc_convert_ulong8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_UConvert_Rulong8_sat(uchar8 x)
{
  return __clc_convert_ulong8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_UConvert_Rulong16(uchar16 x)
{
  return __clc_convert_ulong16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_UConvert_Rulong16_sat(uchar16 x)
{
  return __clc_convert_ulong16_sat(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_UConvert_Ruchar(short x)
{
  return __clc_convert_uchar(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_SatConvertSToU_Ruchar(short x)
{
  return __clc_convert_uchar_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_UConvert_Ruchar_sat(short x)
{
  return __clc_convert_uchar_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_UConvert_Ruchar2(short2 x)
{
  return __clc_convert_uchar2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_SatConvertSToU_Ruchar2(short2 x)
{
  return __clc_convert_uchar2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_UConvert_Ruchar2_sat(short2 x)
{
  return __clc_convert_uchar2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_UConvert_Ruchar3(short3 x)
{
  return __clc_convert_uchar3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_SatConvertSToU_Ruchar3(short3 x)
{
  return __clc_convert_uchar3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_UConvert_Ruchar3_sat(short3 x)
{
  return __clc_convert_uchar3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_UConvert_Ruchar4(short4 x)
{
  return __clc_convert_uchar4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_SatConvertSToU_Ruchar4(short4 x)
{
  return __clc_convert_uchar4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_UConvert_Ruchar4_sat(short4 x)
{
  return __clc_convert_uchar4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_UConvert_Ruchar8(short8 x)
{
  return __clc_convert_uchar8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_SatConvertSToU_Ruchar8(short8 x)
{
  return __clc_convert_uchar8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_UConvert_Ruchar8_sat(short8 x)
{
  return __clc_convert_uchar8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_UConvert_Ruchar16(short16 x)
{
  return __clc_convert_uchar16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_SatConvertSToU_Ruchar16(short16 x)
{
  return __clc_convert_uchar16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_UConvert_Ruchar16_sat(short16 x)
{
  return __clc_convert_uchar16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_UConvert_Rushort(short x)
{
  return __clc_convert_ushort(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_SatConvertSToU_Rushort(short x)
{
  return __clc_convert_ushort_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_UConvert_Rushort2(short2 x)
{
  return __clc_convert_ushort2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_SatConvertSToU_Rushort2(short2 x)
{
  return __clc_convert_ushort2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_UConvert_Rushort3(short3 x)
{
  return __clc_convert_ushort3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_SatConvertSToU_Rushort3(short3 x)
{
  return __clc_convert_ushort3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_UConvert_Rushort4(short4 x)
{
  return __clc_convert_ushort4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_SatConvertSToU_Rushort4(short4 x)
{
  return __clc_convert_ushort4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_UConvert_Rushort8(short8 x)
{
  return __clc_convert_ushort8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_SatConvertSToU_Rushort8(short8 x)
{
  return __clc_convert_ushort8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_UConvert_Rushort16(short16 x)
{
  return __clc_convert_ushort16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_SatConvertSToU_Rushort16(short16 x)
{
  return __clc_convert_ushort16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_UConvert_Ruint(short x)
{
  return __clc_convert_uint(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_SatConvertSToU_Ruint(short x)
{
  return __clc_convert_uint_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_UConvert_Ruint_sat(short x)
{
  return __clc_convert_uint_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_UConvert_Ruint2(short2 x)
{
  return __clc_convert_uint2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_SatConvertSToU_Ruint2(short2 x)
{
  return __clc_convert_uint2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_UConvert_Ruint2_sat(short2 x)
{
  return __clc_convert_uint2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_UConvert_Ruint3(short3 x)
{
  return __clc_convert_uint3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_SatConvertSToU_Ruint3(short3 x)
{
  return __clc_convert_uint3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_UConvert_Ruint3_sat(short3 x)
{
  return __clc_convert_uint3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_UConvert_Ruint4(short4 x)
{
  return __clc_convert_uint4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_SatConvertSToU_Ruint4(short4 x)
{
  return __clc_convert_uint4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_UConvert_Ruint4_sat(short4 x)
{
  return __clc_convert_uint4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_UConvert_Ruint8(short8 x)
{
  return __clc_convert_uint8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_SatConvertSToU_Ruint8(short8 x)
{
  return __clc_convert_uint8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_UConvert_Ruint8_sat(short8 x)
{
  return __clc_convert_uint8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_UConvert_Ruint16(short16 x)
{
  return __clc_convert_uint16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_SatConvertSToU_Ruint16(short16 x)
{
  return __clc_convert_uint16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_UConvert_Ruint16_sat(short16 x)
{
  return __clc_convert_uint16_sat(x);
}

#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_UConvert_Rulong(short x)
{
  return __clc_convert_ulong(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_SatConvertSToU_Rulong(short x)
{
  return __clc_convert_ulong_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_UConvert_Rulong_sat(short x)
{
  return __clc_convert_ulong_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_UConvert_Rulong2(short2 x)
{
  return __clc_convert_ulong2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_SatConvertSToU_Rulong2(short2 x)
{
  return __clc_convert_ulong2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_UConvert_Rulong2_sat(short2 x)
{
  return __clc_convert_ulong2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_UConvert_Rulong3(short3 x)
{
  return __clc_convert_ulong3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_SatConvertSToU_Rulong3(short3 x)
{
  return __clc_convert_ulong3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_UConvert_Rulong3_sat(short3 x)
{
  return __clc_convert_ulong3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_UConvert_Rulong4(short4 x)
{
  return __clc_convert_ulong4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_SatConvertSToU_Rulong4(short4 x)
{
  return __clc_convert_ulong4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_UConvert_Rulong4_sat(short4 x)
{
  return __clc_convert_ulong4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_UConvert_Rulong8(short8 x)
{
  return __clc_convert_ulong8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_SatConvertSToU_Rulong8(short8 x)
{
  return __clc_convert_ulong8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_UConvert_Rulong8_sat(short8 x)
{
  return __clc_convert_ulong8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_UConvert_Rulong16(short16 x)
{
  return __clc_convert_ulong16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_SatConvertSToU_Rulong16(short16 x)
{
  return __clc_convert_ulong16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_UConvert_Rulong16_sat(short16 x)
{
  return __clc_convert_ulong16_sat(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_UConvert_Ruchar(ushort x)
{
  return __clc_convert_uchar(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_UConvert_Ruchar_sat(ushort x)
{
  return __clc_convert_uchar_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_UConvert_Ruchar2(ushort2 x)
{
  return __clc_convert_uchar2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_UConvert_Ruchar2_sat(ushort2 x)
{
  return __clc_convert_uchar2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_UConvert_Ruchar3(ushort3 x)
{
  return __clc_convert_uchar3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_UConvert_Ruchar3_sat(ushort3 x)
{
  return __clc_convert_uchar3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_UConvert_Ruchar4(ushort4 x)
{
  return __clc_convert_uchar4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_UConvert_Ruchar4_sat(ushort4 x)
{
  return __clc_convert_uchar4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_UConvert_Ruchar8(ushort8 x)
{
  return __clc_convert_uchar8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_UConvert_Ruchar8_sat(ushort8 x)
{
  return __clc_convert_uchar8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_UConvert_Ruchar16(ushort16 x)
{
  return __clc_convert_uchar16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_UConvert_Ruchar16_sat(ushort16 x)
{
  return __clc_convert_uchar16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_UConvert_Rushort(ushort x)
{
  return __clc_convert_ushort(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_UConvert_Rushort_sat(ushort x)
{
  return __clc_convert_ushort_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_UConvert_Rushort2(ushort2 x)
{
  return __clc_convert_ushort2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_UConvert_Rushort2_sat(ushort2 x)
{
  return __clc_convert_ushort2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_UConvert_Rushort3(ushort3 x)
{
  return __clc_convert_ushort3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_UConvert_Rushort3_sat(ushort3 x)
{
  return __clc_convert_ushort3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_UConvert_Rushort4(ushort4 x)
{
  return __clc_convert_ushort4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_UConvert_Rushort4_sat(ushort4 x)
{
  return __clc_convert_ushort4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_UConvert_Rushort8(ushort8 x)
{
  return __clc_convert_ushort8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_UConvert_Rushort8_sat(ushort8 x)
{
  return __clc_convert_ushort8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_UConvert_Rushort16(ushort16 x)
{
  return __clc_convert_ushort16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_UConvert_Rushort16_sat(ushort16 x)
{
  return __clc_convert_ushort16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_UConvert_Ruint(ushort x)
{
  return __clc_convert_uint(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_UConvert_Ruint_sat(ushort x)
{
  return __clc_convert_uint_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_UConvert_Ruint2(ushort2 x)
{
  return __clc_convert_uint2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_UConvert_Ruint2_sat(ushort2 x)
{
  return __clc_convert_uint2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_UConvert_Ruint3(ushort3 x)
{
  return __clc_convert_uint3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_UConvert_Ruint3_sat(ushort3 x)
{
  return __clc_convert_uint3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_UConvert_Ruint4(ushort4 x)
{
  return __clc_convert_uint4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_UConvert_Ruint4_sat(ushort4 x)
{
  return __clc_convert_uint4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_UConvert_Ruint8(ushort8 x)
{
  return __clc_convert_uint8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_UConvert_Ruint8_sat(ushort8 x)
{
  return __clc_convert_uint8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_UConvert_Ruint16(ushort16 x)
{
  return __clc_convert_uint16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_UConvert_Ruint16_sat(ushort16 x)
{
  return __clc_convert_uint16_sat(x);
}

#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_UConvert_Rulong(ushort x)
{
  return __clc_convert_ulong(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_UConvert_Rulong_sat(ushort x)
{
  return __clc_convert_ulong_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_UConvert_Rulong2(ushort2 x)
{
  return __clc_convert_ulong2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_UConvert_Rulong2_sat(ushort2 x)
{
  return __clc_convert_ulong2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_UConvert_Rulong3(ushort3 x)
{
  return __clc_convert_ulong3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_UConvert_Rulong3_sat(ushort3 x)
{
  return __clc_convert_ulong3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_UConvert_Rulong4(ushort4 x)
{
  return __clc_convert_ulong4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_UConvert_Rulong4_sat(ushort4 x)
{
  return __clc_convert_ulong4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_UConvert_Rulong8(ushort8 x)
{
  return __clc_convert_ulong8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_UConvert_Rulong8_sat(ushort8 x)
{
  return __clc_convert_ulong8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_UConvert_Rulong16(ushort16 x)
{
  return __clc_convert_ulong16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_UConvert_Rulong16_sat(ushort16 x)
{
  return __clc_convert_ulong16_sat(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_UConvert_Ruchar(int x)
{
  return __clc_convert_uchar(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_SatConvertSToU_Ruchar(int x)
{
  return __clc_convert_uchar_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_UConvert_Ruchar_sat(int x)
{
  return __clc_convert_uchar_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_UConvert_Ruchar2(int2 x)
{
  return __clc_convert_uchar2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_SatConvertSToU_Ruchar2(int2 x)
{
  return __clc_convert_uchar2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_UConvert_Ruchar2_sat(int2 x)
{
  return __clc_convert_uchar2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_UConvert_Ruchar3(int3 x)
{
  return __clc_convert_uchar3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_SatConvertSToU_Ruchar3(int3 x)
{
  return __clc_convert_uchar3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_UConvert_Ruchar3_sat(int3 x)
{
  return __clc_convert_uchar3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_UConvert_Ruchar4(int4 x)
{
  return __clc_convert_uchar4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_SatConvertSToU_Ruchar4(int4 x)
{
  return __clc_convert_uchar4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_UConvert_Ruchar4_sat(int4 x)
{
  return __clc_convert_uchar4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_UConvert_Ruchar8(int8 x)
{
  return __clc_convert_uchar8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_SatConvertSToU_Ruchar8(int8 x)
{
  return __clc_convert_uchar8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_UConvert_Ruchar8_sat(int8 x)
{
  return __clc_convert_uchar8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_UConvert_Ruchar16(int16 x)
{
  return __clc_convert_uchar16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_SatConvertSToU_Ruchar16(int16 x)
{
  return __clc_convert_uchar16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_UConvert_Ruchar16_sat(int16 x)
{
  return __clc_convert_uchar16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_UConvert_Rushort(int x)
{
  return __clc_convert_ushort(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_SatConvertSToU_Rushort(int x)
{
  return __clc_convert_ushort_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_UConvert_Rushort_sat(int x)
{
  return __clc_convert_ushort_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_UConvert_Rushort2(int2 x)
{
  return __clc_convert_ushort2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_SatConvertSToU_Rushort2(int2 x)
{
  return __clc_convert_ushort2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_UConvert_Rushort2_sat(int2 x)
{
  return __clc_convert_ushort2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_UConvert_Rushort3(int3 x)
{
  return __clc_convert_ushort3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_SatConvertSToU_Rushort3(int3 x)
{
  return __clc_convert_ushort3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_UConvert_Rushort3_sat(int3 x)
{
  return __clc_convert_ushort3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_UConvert_Rushort4(int4 x)
{
  return __clc_convert_ushort4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_SatConvertSToU_Rushort4(int4 x)
{
  return __clc_convert_ushort4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_UConvert_Rushort4_sat(int4 x)
{
  return __clc_convert_ushort4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_UConvert_Rushort8(int8 x)
{
  return __clc_convert_ushort8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_SatConvertSToU_Rushort8(int8 x)
{
  return __clc_convert_ushort8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_UConvert_Rushort8_sat(int8 x)
{
  return __clc_convert_ushort8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_UConvert_Rushort16(int16 x)
{
  return __clc_convert_ushort16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_SatConvertSToU_Rushort16(int16 x)
{
  return __clc_convert_ushort16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_UConvert_Rushort16_sat(int16 x)
{
  return __clc_convert_ushort16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_UConvert_Ruint(int x)
{
  return __clc_convert_uint(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_SatConvertSToU_Ruint(int x)
{
  return __clc_convert_uint_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_UConvert_Ruint2(int2 x)
{
  return __clc_convert_uint2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_SatConvertSToU_Ruint2(int2 x)
{
  return __clc_convert_uint2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_UConvert_Ruint3(int3 x)
{
  return __clc_convert_uint3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_SatConvertSToU_Ruint3(int3 x)
{
  return __clc_convert_uint3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_UConvert_Ruint4(int4 x)
{
  return __clc_convert_uint4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_SatConvertSToU_Ruint4(int4 x)
{
  return __clc_convert_uint4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_UConvert_Ruint8(int8 x)
{
  return __clc_convert_uint8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_SatConvertSToU_Ruint8(int8 x)
{
  return __clc_convert_uint8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_UConvert_Ruint16(int16 x)
{
  return __clc_convert_uint16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_SatConvertSToU_Ruint16(int16 x)
{
  return __clc_convert_uint16_sat(x);
}

#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_UConvert_Rulong(int x)
{
  return __clc_convert_ulong(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_SatConvertSToU_Rulong(int x)
{
  return __clc_convert_ulong_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_UConvert_Rulong_sat(int x)
{
  return __clc_convert_ulong_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_UConvert_Rulong2(int2 x)
{
  return __clc_convert_ulong2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_SatConvertSToU_Rulong2(int2 x)
{
  return __clc_convert_ulong2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_UConvert_Rulong2_sat(int2 x)
{
  return __clc_convert_ulong2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_UConvert_Rulong3(int3 x)
{
  return __clc_convert_ulong3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_SatConvertSToU_Rulong3(int3 x)
{
  return __clc_convert_ulong3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_UConvert_Rulong3_sat(int3 x)
{
  return __clc_convert_ulong3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_UConvert_Rulong4(int4 x)
{
  return __clc_convert_ulong4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_SatConvertSToU_Rulong4(int4 x)
{
  return __clc_convert_ulong4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_UConvert_Rulong4_sat(int4 x)
{
  return __clc_convert_ulong4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_UConvert_Rulong8(int8 x)
{
  return __clc_convert_ulong8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_SatConvertSToU_Rulong8(int8 x)
{
  return __clc_convert_ulong8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_UConvert_Rulong8_sat(int8 x)
{
  return __clc_convert_ulong8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_UConvert_Rulong16(int16 x)
{
  return __clc_convert_ulong16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_SatConvertSToU_Rulong16(int16 x)
{
  return __clc_convert_ulong16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_UConvert_Rulong16_sat(int16 x)
{
  return __clc_convert_ulong16_sat(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_UConvert_Ruchar(uint x)
{
  return __clc_convert_uchar(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_UConvert_Ruchar_sat(uint x)
{
  return __clc_convert_uchar_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_UConvert_Ruchar2(uint2 x)
{
  return __clc_convert_uchar2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_UConvert_Ruchar2_sat(uint2 x)
{
  return __clc_convert_uchar2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_UConvert_Ruchar3(uint3 x)
{
  return __clc_convert_uchar3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_UConvert_Ruchar3_sat(uint3 x)
{
  return __clc_convert_uchar3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_UConvert_Ruchar4(uint4 x)
{
  return __clc_convert_uchar4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_UConvert_Ruchar4_sat(uint4 x)
{
  return __clc_convert_uchar4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_UConvert_Ruchar8(uint8 x)
{
  return __clc_convert_uchar8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_UConvert_Ruchar8_sat(uint8 x)
{
  return __clc_convert_uchar8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_UConvert_Ruchar16(uint16 x)
{
  return __clc_convert_uchar16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_UConvert_Ruchar16_sat(uint16 x)
{
  return __clc_convert_uchar16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_UConvert_Rushort(uint x)
{
  return __clc_convert_ushort(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_UConvert_Rushort_sat(uint x)
{
  return __clc_convert_ushort_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_UConvert_Rushort2(uint2 x)
{
  return __clc_convert_ushort2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_UConvert_Rushort2_sat(uint2 x)
{
  return __clc_convert_ushort2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_UConvert_Rushort3(uint3 x)
{
  return __clc_convert_ushort3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_UConvert_Rushort3_sat(uint3 x)
{
  return __clc_convert_ushort3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_UConvert_Rushort4(uint4 x)
{
  return __clc_convert_ushort4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_UConvert_Rushort4_sat(uint4 x)
{
  return __clc_convert_ushort4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_UConvert_Rushort8(uint8 x)
{
  return __clc_convert_ushort8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_UConvert_Rushort8_sat(uint8 x)
{
  return __clc_convert_ushort8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_UConvert_Rushort16(uint16 x)
{
  return __clc_convert_ushort16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_UConvert_Rushort16_sat(uint16 x)
{
  return __clc_convert_ushort16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_UConvert_Ruint(uint x)
{
  return __clc_convert_uint(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_UConvert_Ruint_sat(uint x)
{
  return __clc_convert_uint_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_UConvert_Ruint2(uint2 x)
{
  return __clc_convert_uint2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_UConvert_Ruint2_sat(uint2 x)
{
  return __clc_convert_uint2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_UConvert_Ruint3(uint3 x)
{
  return __clc_convert_uint3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_UConvert_Ruint3_sat(uint3 x)
{
  return __clc_convert_uint3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_UConvert_Ruint4(uint4 x)
{
  return __clc_convert_uint4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_UConvert_Ruint4_sat(uint4 x)
{
  return __clc_convert_uint4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_UConvert_Ruint8(uint8 x)
{
  return __clc_convert_uint8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_UConvert_Ruint8_sat(uint8 x)
{
  return __clc_convert_uint8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_UConvert_Ruint16(uint16 x)
{
  return __clc_convert_uint16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_UConvert_Ruint16_sat(uint16 x)
{
  return __clc_convert_uint16_sat(x);
}

#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_UConvert_Rulong(uint x)
{
  return __clc_convert_ulong(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_UConvert_Rulong_sat(uint x)
{
  return __clc_convert_ulong_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_UConvert_Rulong2(uint2 x)
{
  return __clc_convert_ulong2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_UConvert_Rulong2_sat(uint2 x)
{
  return __clc_convert_ulong2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_UConvert_Rulong3(uint3 x)
{
  return __clc_convert_ulong3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_UConvert_Rulong3_sat(uint3 x)
{
  return __clc_convert_ulong3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_UConvert_Rulong4(uint4 x)
{
  return __clc_convert_ulong4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_UConvert_Rulong4_sat(uint4 x)
{
  return __clc_convert_ulong4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_UConvert_Rulong8(uint8 x)
{
  return __clc_convert_ulong8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_UConvert_Rulong8_sat(uint8 x)
{
  return __clc_convert_ulong8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_UConvert_Rulong16(uint16 x)
{
  return __clc_convert_ulong16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_UConvert_Rulong16_sat(uint16 x)
{
  return __clc_convert_ulong16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_UConvert_Ruchar(long x)
{
  return __clc_convert_uchar(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_SatConvertSToU_Ruchar(long x)
{
  return __clc_convert_uchar_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_UConvert_Ruchar_sat(long x)
{
  return __clc_convert_uchar_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_UConvert_Ruchar2(long2 x)
{
  return __clc_convert_uchar2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_SatConvertSToU_Ruchar2(long2 x)
{
  return __clc_convert_uchar2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_UConvert_Ruchar2_sat(long2 x)
{
  return __clc_convert_uchar2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_UConvert_Ruchar3(long3 x)
{
  return __clc_convert_uchar3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_SatConvertSToU_Ruchar3(long3 x)
{
  return __clc_convert_uchar3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_UConvert_Ruchar3_sat(long3 x)
{
  return __clc_convert_uchar3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_UConvert_Ruchar4(long4 x)
{
  return __clc_convert_uchar4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_SatConvertSToU_Ruchar4(long4 x)
{
  return __clc_convert_uchar4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_UConvert_Ruchar4_sat(long4 x)
{
  return __clc_convert_uchar4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_UConvert_Ruchar8(long8 x)
{
  return __clc_convert_uchar8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_SatConvertSToU_Ruchar8(long8 x)
{
  return __clc_convert_uchar8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_UConvert_Ruchar8_sat(long8 x)
{
  return __clc_convert_uchar8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_UConvert_Ruchar16(long16 x)
{
  return __clc_convert_uchar16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_SatConvertSToU_Ruchar16(long16 x)
{
  return __clc_convert_uchar16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_UConvert_Ruchar16_sat(long16 x)
{
  return __clc_convert_uchar16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_UConvert_Rushort(long x)
{
  return __clc_convert_ushort(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_SatConvertSToU_Rushort(long x)
{
  return __clc_convert_ushort_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_UConvert_Rushort_sat(long x)
{
  return __clc_convert_ushort_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_UConvert_Rushort2(long2 x)
{
  return __clc_convert_ushort2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_SatConvertSToU_Rushort2(long2 x)
{
  return __clc_convert_ushort2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_UConvert_Rushort2_sat(long2 x)
{
  return __clc_convert_ushort2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_UConvert_Rushort3(long3 x)
{
  return __clc_convert_ushort3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_SatConvertSToU_Rushort3(long3 x)
{
  return __clc_convert_ushort3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_UConvert_Rushort3_sat(long3 x)
{
  return __clc_convert_ushort3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_UConvert_Rushort4(long4 x)
{
  return __clc_convert_ushort4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_SatConvertSToU_Rushort4(long4 x)
{
  return __clc_convert_ushort4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_UConvert_Rushort4_sat(long4 x)
{
  return __clc_convert_ushort4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_UConvert_Rushort8(long8 x)
{
  return __clc_convert_ushort8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_SatConvertSToU_Rushort8(long8 x)
{
  return __clc_convert_ushort8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_UConvert_Rushort8_sat(long8 x)
{
  return __clc_convert_ushort8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_UConvert_Rushort16(long16 x)
{
  return __clc_convert_ushort16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_SatConvertSToU_Rushort16(long16 x)
{
  return __clc_convert_ushort16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_UConvert_Rushort16_sat(long16 x)
{
  return __clc_convert_ushort16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_UConvert_Ruint(long x)
{
  return __clc_convert_uint(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_SatConvertSToU_Ruint(long x)
{
  return __clc_convert_uint_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_UConvert_Ruint_sat(long x)
{
  return __clc_convert_uint_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_UConvert_Ruint2(long2 x)
{
  return __clc_convert_uint2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_SatConvertSToU_Ruint2(long2 x)
{
  return __clc_convert_uint2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_UConvert_Ruint2_sat(long2 x)
{
  return __clc_convert_uint2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_UConvert_Ruint3(long3 x)
{
  return __clc_convert_uint3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_SatConvertSToU_Ruint3(long3 x)
{
  return __clc_convert_uint3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_UConvert_Ruint3_sat(long3 x)
{
  return __clc_convert_uint3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_UConvert_Ruint4(long4 x)
{
  return __clc_convert_uint4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_SatConvertSToU_Ruint4(long4 x)
{
  return __clc_convert_uint4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_UConvert_Ruint4_sat(long4 x)
{
  return __clc_convert_uint4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_UConvert_Ruint8(long8 x)
{
  return __clc_convert_uint8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_SatConvertSToU_Ruint8(long8 x)
{
  return __clc_convert_uint8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_UConvert_Ruint8_sat(long8 x)
{
  return __clc_convert_uint8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_UConvert_Ruint16(long16 x)
{
  return __clc_convert_uint16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_SatConvertSToU_Ruint16(long16 x)
{
  return __clc_convert_uint16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_UConvert_Ruint16_sat(long16 x)
{
  return __clc_convert_uint16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_UConvert_Rulong(long x)
{
  return __clc_convert_ulong(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_SatConvertSToU_Rulong(long x)
{
  return __clc_convert_ulong_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_UConvert_Rulong2(long2 x)
{
  return __clc_convert_ulong2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_SatConvertSToU_Rulong2(long2 x)
{
  return __clc_convert_ulong2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_UConvert_Rulong3(long3 x)
{
  return __clc_convert_ulong3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_SatConvertSToU_Rulong3(long3 x)
{
  return __clc_convert_ulong3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_UConvert_Rulong4(long4 x)
{
  return __clc_convert_ulong4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_SatConvertSToU_Rulong4(long4 x)
{
  return __clc_convert_ulong4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_UConvert_Rulong8(long8 x)
{
  return __clc_convert_ulong8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_SatConvertSToU_Rulong8(long8 x)
{
  return __clc_convert_ulong8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_UConvert_Rulong16(long16 x)
{
  return __clc_convert_ulong16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_SatConvertSToU_Rulong16(long16 x)
{
  return __clc_convert_ulong16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_UConvert_Ruchar(ulong x)
{
  return __clc_convert_uchar(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar __spirv_UConvert_Ruchar_sat(ulong x)
{
  return __clc_convert_uchar_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_UConvert_Ruchar2(ulong2 x)
{
  return __clc_convert_uchar2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar2 __spirv_UConvert_Ruchar2_sat(ulong2 x)
{
  return __clc_convert_uchar2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_UConvert_Ruchar3(ulong3 x)
{
  return __clc_convert_uchar3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar3 __spirv_UConvert_Ruchar3_sat(ulong3 x)
{
  return __clc_convert_uchar3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_UConvert_Ruchar4(ulong4 x)
{
  return __clc_convert_uchar4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar4 __spirv_UConvert_Ruchar4_sat(ulong4 x)
{
  return __clc_convert_uchar4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_UConvert_Ruchar8(ulong8 x)
{
  return __clc_convert_uchar8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar8 __spirv_UConvert_Ruchar8_sat(ulong8 x)
{
  return __clc_convert_uchar8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_UConvert_Ruchar16(ulong16 x)
{
  return __clc_convert_uchar16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uchar16 __spirv_UConvert_Ruchar16_sat(ulong16 x)
{
  return __clc_convert_uchar16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_UConvert_Rushort(ulong x)
{
  return __clc_convert_ushort(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort __spirv_UConvert_Rushort_sat(ulong x)
{
  return __clc_convert_ushort_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_UConvert_Rushort2(ulong2 x)
{
  return __clc_convert_ushort2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort2 __spirv_UConvert_Rushort2_sat(ulong2 x)
{
  return __clc_convert_ushort2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_UConvert_Rushort3(ulong3 x)
{
  return __clc_convert_ushort3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort3 __spirv_UConvert_Rushort3_sat(ulong3 x)
{
  return __clc_convert_ushort3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_UConvert_Rushort4(ulong4 x)
{
  return __clc_convert_ushort4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort4 __spirv_UConvert_Rushort4_sat(ulong4 x)
{
  return __clc_convert_ushort4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_UConvert_Rushort8(ulong8 x)
{
  return __clc_convert_ushort8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort8 __spirv_UConvert_Rushort8_sat(ulong8 x)
{
  return __clc_convert_ushort8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_UConvert_Rushort16(ulong16 x)
{
  return __clc_convert_ushort16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ushort16 __spirv_UConvert_Rushort16_sat(ulong16 x)
{
  return __clc_convert_ushort16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_UConvert_Ruint(ulong x)
{
  return __clc_convert_uint(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint __spirv_UConvert_Ruint_sat(ulong x)
{
  return __clc_convert_uint_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_UConvert_Ruint2(ulong2 x)
{
  return __clc_convert_uint2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint2 __spirv_UConvert_Ruint2_sat(ulong2 x)
{
  return __clc_convert_uint2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_UConvert_Ruint3(ulong3 x)
{
  return __clc_convert_uint3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint3 __spirv_UConvert_Ruint3_sat(ulong3 x)
{
  return __clc_convert_uint3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_UConvert_Ruint4(ulong4 x)
{
  return __clc_convert_uint4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint4 __spirv_UConvert_Ruint4_sat(ulong4 x)
{
  return __clc_convert_uint4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_UConvert_Ruint8(ulong8 x)
{
  return __clc_convert_uint8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint8 __spirv_UConvert_Ruint8_sat(ulong8 x)
{
  return __clc_convert_uint8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_UConvert_Ruint16(ulong16 x)
{
  return __clc_convert_uint16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
uint16 __spirv_UConvert_Ruint16_sat(ulong16 x)
{
  return __clc_convert_uint16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_UConvert_Rulong(ulong x)
{
  return __clc_convert_ulong(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong __spirv_UConvert_Rulong_sat(ulong x)
{
  return __clc_convert_ulong_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_UConvert_Rulong2(ulong2 x)
{
  return __clc_convert_ulong2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong2 __spirv_UConvert_Rulong2_sat(ulong2 x)
{
  return __clc_convert_ulong2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_UConvert_Rulong3(ulong3 x)
{
  return __clc_convert_ulong3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong3 __spirv_UConvert_Rulong3_sat(ulong3 x)
{
  return __clc_convert_ulong3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_UConvert_Rulong4(ulong4 x)
{
  return __clc_convert_ulong4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong4 __spirv_UConvert_Rulong4_sat(ulong4 x)
{
  return __clc_convert_ulong4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_UConvert_Rulong8(ulong8 x)
{
  return __clc_convert_ulong8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong8 __spirv_UConvert_Rulong8_sat(ulong8 x)
{
  return __clc_convert_ulong8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_UConvert_Rulong16(ulong16 x)
{
  return __clc_convert_ulong16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
ulong16 __spirv_UConvert_Rulong16_sat(ulong16 x)
{
  return __clc_convert_ulong16_sat(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_SConvert_Rchar(schar x)
{
  return __clc_convert_schar(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_SConvert_Rchar_sat(schar x)
{
  return __clc_convert_schar_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_SConvert_Rchar2(schar2 x)
{
  return __clc_convert_schar2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_SConvert_Rchar2_sat(schar2 x)
{
  return __clc_convert_schar2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_SConvert_Rchar3(schar3 x)
{
  return __clc_convert_schar3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_SConvert_Rchar3_sat(schar3 x)
{
  return __clc_convert_schar3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_SConvert_Rchar4(schar4 x)
{
  return __clc_convert_schar4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_SConvert_Rchar4_sat(schar4 x)
{
  return __clc_convert_schar4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_SConvert_Rchar8(schar8 x)
{
  return __clc_convert_schar8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_SConvert_Rchar8_sat(schar8 x)
{
  return __clc_convert_schar8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_SConvert_Rchar16(schar16 x)
{
  return __clc_convert_schar16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_SConvert_Rchar16_sat(schar16 x)
{
  return __clc_convert_schar16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_SConvert_Rshort(schar x)
{
  return __clc_convert_short(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_SConvert_Rshort_sat(schar x)
{
  return __clc_convert_short_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_SConvert_Rshort2(schar2 x)
{
  return __clc_convert_short2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_SConvert_Rshort2_sat(schar2 x)
{
  return __clc_convert_short2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_SConvert_Rshort3(schar3 x)
{
  return __clc_convert_short3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_SConvert_Rshort3_sat(schar3 x)
{
  return __clc_convert_short3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_SConvert_Rshort4(schar4 x)
{
  return __clc_convert_short4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_SConvert_Rshort4_sat(schar4 x)
{
  return __clc_convert_short4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_SConvert_Rshort8(schar8 x)
{
  return __clc_convert_short8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_SConvert_Rshort8_sat(schar8 x)
{
  return __clc_convert_short8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_SConvert_Rshort16(schar16 x)
{
  return __clc_convert_short16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_SConvert_Rshort16_sat(schar16 x)
{
  return __clc_convert_short16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_SConvert_Rint(schar x)
{
  return __clc_convert_int(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_SConvert_Rint_sat(schar x)
{
  return __clc_convert_int_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_SConvert_Rint2(schar2 x)
{
  return __clc_convert_int2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_SConvert_Rint2_sat(schar2 x)
{
  return __clc_convert_int2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_SConvert_Rint3(schar3 x)
{
  return __clc_convert_int3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_SConvert_Rint3_sat(schar3 x)
{
  return __clc_convert_int3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_SConvert_Rint4(schar4 x)
{
  return __clc_convert_int4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_SConvert_Rint4_sat(schar4 x)
{
  return __clc_convert_int4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_SConvert_Rint8(schar8 x)
{
  return __clc_convert_int8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_SConvert_Rint8_sat(schar8 x)
{
  return __clc_convert_int8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_SConvert_Rint16(schar16 x)
{
  return __clc_convert_int16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_SConvert_Rint16_sat(schar16 x)
{
  return __clc_convert_int16_sat(x);
}

#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_SConvert_Rlong(schar x)
{
  return __clc_convert_long(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_SConvert_Rlong_sat(schar x)
{
  return __clc_convert_long_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_SConvert_Rlong2(schar2 x)
{
  return __clc_convert_long2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_SConvert_Rlong2_sat(schar2 x)
{
  return __clc_convert_long2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_SConvert_Rlong3(schar3 x)
{
  return __clc_convert_long3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_SConvert_Rlong3_sat(schar3 x)
{
  return __clc_convert_long3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_SConvert_Rlong4(schar4 x)
{
  return __clc_convert_long4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_SConvert_Rlong4_sat(schar4 x)
{
  return __clc_convert_long4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_SConvert_Rlong8(schar8 x)
{
  return __clc_convert_long8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_SConvert_Rlong8_sat(schar8 x)
{
  return __clc_convert_long8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_SConvert_Rlong16(schar16 x)
{
  return __clc_convert_long16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_SConvert_Rlong16_sat(schar16 x)
{
  return __clc_convert_long16_sat(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_SConvert_Rchar(uchar x)
{
  return __clc_convert_schar(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_SatConvertUToS_Rchar(uchar x)
{
  return __clc_convert_schar_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_SConvert_Rchar2(uchar2 x)
{
  return __clc_convert_schar2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_SatConvertUToS_Rchar2(uchar2 x)
{
  return __clc_convert_schar2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_SConvert_Rchar3(uchar3 x)
{
  return __clc_convert_schar3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_SatConvertUToS_Rchar3(uchar3 x)
{
  return __clc_convert_schar3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_SConvert_Rchar4(uchar4 x)
{
  return __clc_convert_schar4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_SatConvertUToS_Rchar4(uchar4 x)
{
  return __clc_convert_schar4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_SConvert_Rchar8(uchar8 x)
{
  return __clc_convert_schar8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_SatConvertUToS_Rchar8(uchar8 x)
{
  return __clc_convert_schar8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_SConvert_Rchar16(uchar16 x)
{
  return __clc_convert_schar16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_SatConvertUToS_Rchar16(uchar16 x)
{
  return __clc_convert_schar16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_SConvert_Rshort(uchar x)
{
  return __clc_convert_short(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_SatConvertUToS_Rshort(uchar x)
{
  return __clc_convert_short_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_SConvert_Rshort_sat(uchar x)
{
  return __clc_convert_short_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_SConvert_Rshort2(uchar2 x)
{
  return __clc_convert_short2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_SatConvertUToS_Rshort2(uchar2 x)
{
  return __clc_convert_short2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_SConvert_Rshort2_sat(uchar2 x)
{
  return __clc_convert_short2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_SConvert_Rshort3(uchar3 x)
{
  return __clc_convert_short3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_SatConvertUToS_Rshort3(uchar3 x)
{
  return __clc_convert_short3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_SConvert_Rshort3_sat(uchar3 x)
{
  return __clc_convert_short3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_SConvert_Rshort4(uchar4 x)
{
  return __clc_convert_short4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_SatConvertUToS_Rshort4(uchar4 x)
{
  return __clc_convert_short4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_SConvert_Rshort4_sat(uchar4 x)
{
  return __clc_convert_short4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_SConvert_Rshort8(uchar8 x)
{
  return __clc_convert_short8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_SatConvertUToS_Rshort8(uchar8 x)
{
  return __clc_convert_short8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_SConvert_Rshort8_sat(uchar8 x)
{
  return __clc_convert_short8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_SConvert_Rshort16(uchar16 x)
{
  return __clc_convert_short16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_SatConvertUToS_Rshort16(uchar16 x)
{
  return __clc_convert_short16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_SConvert_Rshort16_sat(uchar16 x)
{
  return __clc_convert_short16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_SConvert_Rint(uchar x)
{
  return __clc_convert_int(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_SatConvertUToS_Rint(uchar x)
{
  return __clc_convert_int_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_SConvert_Rint_sat(uchar x)
{
  return __clc_convert_int_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_SConvert_Rint2(uchar2 x)
{
  return __clc_convert_int2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_SatConvertUToS_Rint2(uchar2 x)
{
  return __clc_convert_int2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_SConvert_Rint2_sat(uchar2 x)
{
  return __clc_convert_int2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_SConvert_Rint3(uchar3 x)
{
  return __clc_convert_int3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_SatConvertUToS_Rint3(uchar3 x)
{
  return __clc_convert_int3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_SConvert_Rint3_sat(uchar3 x)
{
  return __clc_convert_int3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_SConvert_Rint4(uchar4 x)
{
  return __clc_convert_int4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_SatConvertUToS_Rint4(uchar4 x)
{
  return __clc_convert_int4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_SConvert_Rint4_sat(uchar4 x)
{
  return __clc_convert_int4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_SConvert_Rint8(uchar8 x)
{
  return __clc_convert_int8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_SatConvertUToS_Rint8(uchar8 x)
{
  return __clc_convert_int8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_SConvert_Rint8_sat(uchar8 x)
{
  return __clc_convert_int8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_SConvert_Rint16(uchar16 x)
{
  return __clc_convert_int16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_SatConvertUToS_Rint16(uchar16 x)
{
  return __clc_convert_int16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_SConvert_Rint16_sat(uchar16 x)
{
  return __clc_convert_int16_sat(x);
}

#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_SConvert_Rlong(uchar x)
{
  return __clc_convert_long(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_SatConvertUToS_Rlong(uchar x)
{
  return __clc_convert_long_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_SConvert_Rlong_sat(uchar x)
{
  return __clc_convert_long_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_SConvert_Rlong2(uchar2 x)
{
  return __clc_convert_long2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_SatConvertUToS_Rlong2(uchar2 x)
{
  return __clc_convert_long2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_SConvert_Rlong2_sat(uchar2 x)
{
  return __clc_convert_long2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_SConvert_Rlong3(uchar3 x)
{
  return __clc_convert_long3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_SatConvertUToS_Rlong3(uchar3 x)
{
  return __clc_convert_long3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_SConvert_Rlong3_sat(uchar3 x)
{
  return __clc_convert_long3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_SConvert_Rlong4(uchar4 x)
{
  return __clc_convert_long4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_SatConvertUToS_Rlong4(uchar4 x)
{
  return __clc_convert_long4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_SConvert_Rlong4_sat(uchar4 x)
{
  return __clc_convert_long4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_SConvert_Rlong8(uchar8 x)
{
  return __clc_convert_long8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_SatConvertUToS_Rlong8(uchar8 x)
{
  return __clc_convert_long8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_SConvert_Rlong8_sat(uchar8 x)
{
  return __clc_convert_long8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_SConvert_Rlong16(uchar16 x)
{
  return __clc_convert_long16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_SatConvertUToS_Rlong16(uchar16 x)
{
  return __clc_convert_long16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_SConvert_Rlong16_sat(uchar16 x)
{
  return __clc_convert_long16_sat(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_SConvert_Rchar(short x)
{
  return __clc_convert_schar(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_SConvert_Rchar_sat(short x)
{
  return __clc_convert_schar_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_SConvert_Rchar2(short2 x)
{
  return __clc_convert_schar2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_SConvert_Rchar2_sat(short2 x)
{
  return __clc_convert_schar2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_SConvert_Rchar3(short3 x)
{
  return __clc_convert_schar3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_SConvert_Rchar3_sat(short3 x)
{
  return __clc_convert_schar3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_SConvert_Rchar4(short4 x)
{
  return __clc_convert_schar4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_SConvert_Rchar4_sat(short4 x)
{
  return __clc_convert_schar4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_SConvert_Rchar8(short8 x)
{
  return __clc_convert_schar8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_SConvert_Rchar8_sat(short8 x)
{
  return __clc_convert_schar8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_SConvert_Rchar16(short16 x)
{
  return __clc_convert_schar16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_SConvert_Rchar16_sat(short16 x)
{
  return __clc_convert_schar16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_SConvert_Rshort(short x)
{
  return __clc_convert_short(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_SConvert_Rshort_sat(short x)
{
  return __clc_convert_short_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_SConvert_Rshort2(short2 x)
{
  return __clc_convert_short2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_SConvert_Rshort2_sat(short2 x)
{
  return __clc_convert_short2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_SConvert_Rshort3(short3 x)
{
  return __clc_convert_short3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_SConvert_Rshort3_sat(short3 x)
{
  return __clc_convert_short3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_SConvert_Rshort4(short4 x)
{
  return __clc_convert_short4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_SConvert_Rshort4_sat(short4 x)
{
  return __clc_convert_short4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_SConvert_Rshort8(short8 x)
{
  return __clc_convert_short8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_SConvert_Rshort8_sat(short8 x)
{
  return __clc_convert_short8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_SConvert_Rshort16(short16 x)
{
  return __clc_convert_short16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_SConvert_Rshort16_sat(short16 x)
{
  return __clc_convert_short16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_SConvert_Rint(short x)
{
  return __clc_convert_int(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_SConvert_Rint_sat(short x)
{
  return __clc_convert_int_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_SConvert_Rint2(short2 x)
{
  return __clc_convert_int2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_SConvert_Rint2_sat(short2 x)
{
  return __clc_convert_int2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_SConvert_Rint3(short3 x)
{
  return __clc_convert_int3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_SConvert_Rint3_sat(short3 x)
{
  return __clc_convert_int3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_SConvert_Rint4(short4 x)
{
  return __clc_convert_int4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_SConvert_Rint4_sat(short4 x)
{
  return __clc_convert_int4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_SConvert_Rint8(short8 x)
{
  return __clc_convert_int8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_SConvert_Rint8_sat(short8 x)
{
  return __clc_convert_int8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_SConvert_Rint16(short16 x)
{
  return __clc_convert_int16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_SConvert_Rint16_sat(short16 x)
{
  return __clc_convert_int16_sat(x);
}

#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_SConvert_Rlong(short x)
{
  return __clc_convert_long(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_SConvert_Rlong_sat(short x)
{
  return __clc_convert_long_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_SConvert_Rlong2(short2 x)
{
  return __clc_convert_long2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_SConvert_Rlong2_sat(short2 x)
{
  return __clc_convert_long2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_SConvert_Rlong3(short3 x)
{
  return __clc_convert_long3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_SConvert_Rlong3_sat(short3 x)
{
  return __clc_convert_long3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_SConvert_Rlong4(short4 x)
{
  return __clc_convert_long4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_SConvert_Rlong4_sat(short4 x)
{
  return __clc_convert_long4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_SConvert_Rlong8(short8 x)
{
  return __clc_convert_long8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_SConvert_Rlong8_sat(short8 x)
{
  return __clc_convert_long8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_SConvert_Rlong16(short16 x)
{
  return __clc_convert_long16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_SConvert_Rlong16_sat(short16 x)
{
  return __clc_convert_long16_sat(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_SConvert_Rchar(ushort x)
{
  return __clc_convert_schar(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_SatConvertUToS_Rchar(ushort x)
{
  return __clc_convert_schar_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_SConvert_Rchar_sat(ushort x)
{
  return __clc_convert_schar_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_SConvert_Rchar2(ushort2 x)
{
  return __clc_convert_schar2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_SatConvertUToS_Rchar2(ushort2 x)
{
  return __clc_convert_schar2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_SConvert_Rchar2_sat(ushort2 x)
{
  return __clc_convert_schar2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_SConvert_Rchar3(ushort3 x)
{
  return __clc_convert_schar3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_SatConvertUToS_Rchar3(ushort3 x)
{
  return __clc_convert_schar3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_SConvert_Rchar3_sat(ushort3 x)
{
  return __clc_convert_schar3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_SConvert_Rchar4(ushort4 x)
{
  return __clc_convert_schar4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_SatConvertUToS_Rchar4(ushort4 x)
{
  return __clc_convert_schar4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_SConvert_Rchar4_sat(ushort4 x)
{
  return __clc_convert_schar4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_SConvert_Rchar8(ushort8 x)
{
  return __clc_convert_schar8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_SatConvertUToS_Rchar8(ushort8 x)
{
  return __clc_convert_schar8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_SConvert_Rchar8_sat(ushort8 x)
{
  return __clc_convert_schar8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_SConvert_Rchar16(ushort16 x)
{
  return __clc_convert_schar16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_SatConvertUToS_Rchar16(ushort16 x)
{
  return __clc_convert_schar16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_SConvert_Rchar16_sat(ushort16 x)
{
  return __clc_convert_schar16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_SConvert_Rshort(ushort x)
{
  return __clc_convert_short(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_SatConvertUToS_Rshort(ushort x)
{
  return __clc_convert_short_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_SConvert_Rshort2(ushort2 x)
{
  return __clc_convert_short2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_SatConvertUToS_Rshort2(ushort2 x)
{
  return __clc_convert_short2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_SConvert_Rshort3(ushort3 x)
{
  return __clc_convert_short3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_SatConvertUToS_Rshort3(ushort3 x)
{
  return __clc_convert_short3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_SConvert_Rshort4(ushort4 x)
{
  return __clc_convert_short4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_SatConvertUToS_Rshort4(ushort4 x)
{
  return __clc_convert_short4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_SConvert_Rshort8(ushort8 x)
{
  return __clc_convert_short8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_SatConvertUToS_Rshort8(ushort8 x)
{
  return __clc_convert_short8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_SConvert_Rshort16(ushort16 x)
{
  return __clc_convert_short16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_SatConvertUToS_Rshort16(ushort16 x)
{
  return __clc_convert_short16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_SConvert_Rint(ushort x)
{
  return __clc_convert_int(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_SatConvertUToS_Rint(ushort x)
{
  return __clc_convert_int_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_SConvert_Rint_sat(ushort x)
{
  return __clc_convert_int_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_SConvert_Rint2(ushort2 x)
{
  return __clc_convert_int2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_SatConvertUToS_Rint2(ushort2 x)
{
  return __clc_convert_int2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_SConvert_Rint2_sat(ushort2 x)
{
  return __clc_convert_int2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_SConvert_Rint3(ushort3 x)
{
  return __clc_convert_int3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_SatConvertUToS_Rint3(ushort3 x)
{
  return __clc_convert_int3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_SConvert_Rint3_sat(ushort3 x)
{
  return __clc_convert_int3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_SConvert_Rint4(ushort4 x)
{
  return __clc_convert_int4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_SatConvertUToS_Rint4(ushort4 x)
{
  return __clc_convert_int4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_SConvert_Rint4_sat(ushort4 x)
{
  return __clc_convert_int4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_SConvert_Rint8(ushort8 x)
{
  return __clc_convert_int8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_SatConvertUToS_Rint8(ushort8 x)
{
  return __clc_convert_int8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_SConvert_Rint8_sat(ushort8 x)
{
  return __clc_convert_int8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_SConvert_Rint16(ushort16 x)
{
  return __clc_convert_int16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_SatConvertUToS_Rint16(ushort16 x)
{
  return __clc_convert_int16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_SConvert_Rint16_sat(ushort16 x)
{
  return __clc_convert_int16_sat(x);
}

#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_SConvert_Rlong(ushort x)
{
  return __clc_convert_long(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_SatConvertUToS_Rlong(ushort x)
{
  return __clc_convert_long_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_SConvert_Rlong_sat(ushort x)
{
  return __clc_convert_long_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_SConvert_Rlong2(ushort2 x)
{
  return __clc_convert_long2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_SatConvertUToS_Rlong2(ushort2 x)
{
  return __clc_convert_long2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_SConvert_Rlong2_sat(ushort2 x)
{
  return __clc_convert_long2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_SConvert_Rlong3(ushort3 x)
{
  return __clc_convert_long3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_SatConvertUToS_Rlong3(ushort3 x)
{
  return __clc_convert_long3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_SConvert_Rlong3_sat(ushort3 x)
{
  return __clc_convert_long3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_SConvert_Rlong4(ushort4 x)
{
  return __clc_convert_long4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_SatConvertUToS_Rlong4(ushort4 x)
{
  return __clc_convert_long4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_SConvert_Rlong4_sat(ushort4 x)
{
  return __clc_convert_long4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_SConvert_Rlong8(ushort8 x)
{
  return __clc_convert_long8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_SatConvertUToS_Rlong8(ushort8 x)
{
  return __clc_convert_long8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_SConvert_Rlong8_sat(ushort8 x)
{
  return __clc_convert_long8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_SConvert_Rlong16(ushort16 x)
{
  return __clc_convert_long16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_SatConvertUToS_Rlong16(ushort16 x)
{
  return __clc_convert_long16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_SConvert_Rlong16_sat(ushort16 x)
{
  return __clc_convert_long16_sat(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_SConvert_Rchar(int x)
{
  return __clc_convert_schar(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_SConvert_Rchar_sat(int x)
{
  return __clc_convert_schar_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_SConvert_Rchar2(int2 x)
{
  return __clc_convert_schar2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_SConvert_Rchar2_sat(int2 x)
{
  return __clc_convert_schar2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_SConvert_Rchar3(int3 x)
{
  return __clc_convert_schar3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_SConvert_Rchar3_sat(int3 x)
{
  return __clc_convert_schar3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_SConvert_Rchar4(int4 x)
{
  return __clc_convert_schar4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_SConvert_Rchar4_sat(int4 x)
{
  return __clc_convert_schar4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_SConvert_Rchar8(int8 x)
{
  return __clc_convert_schar8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_SConvert_Rchar8_sat(int8 x)
{
  return __clc_convert_schar8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_SConvert_Rchar16(int16 x)
{
  return __clc_convert_schar16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_SConvert_Rchar16_sat(int16 x)
{
  return __clc_convert_schar16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_SConvert_Rshort(int x)
{
  return __clc_convert_short(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_SConvert_Rshort_sat(int x)
{
  return __clc_convert_short_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_SConvert_Rshort2(int2 x)
{
  return __clc_convert_short2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_SConvert_Rshort2_sat(int2 x)
{
  return __clc_convert_short2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_SConvert_Rshort3(int3 x)
{
  return __clc_convert_short3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_SConvert_Rshort3_sat(int3 x)
{
  return __clc_convert_short3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_SConvert_Rshort4(int4 x)
{
  return __clc_convert_short4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_SConvert_Rshort4_sat(int4 x)
{
  return __clc_convert_short4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_SConvert_Rshort8(int8 x)
{
  return __clc_convert_short8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_SConvert_Rshort8_sat(int8 x)
{
  return __clc_convert_short8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_SConvert_Rshort16(int16 x)
{
  return __clc_convert_short16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_SConvert_Rshort16_sat(int16 x)
{
  return __clc_convert_short16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_SConvert_Rint(int x)
{
  return __clc_convert_int(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_SConvert_Rint_sat(int x)
{
  return __clc_convert_int_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_SConvert_Rint2(int2 x)
{
  return __clc_convert_int2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_SConvert_Rint2_sat(int2 x)
{
  return __clc_convert_int2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_SConvert_Rint3(int3 x)
{
  return __clc_convert_int3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_SConvert_Rint3_sat(int3 x)
{
  return __clc_convert_int3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_SConvert_Rint4(int4 x)
{
  return __clc_convert_int4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_SConvert_Rint4_sat(int4 x)
{
  return __clc_convert_int4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_SConvert_Rint8(int8 x)
{
  return __clc_convert_int8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_SConvert_Rint8_sat(int8 x)
{
  return __clc_convert_int8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_SConvert_Rint16(int16 x)
{
  return __clc_convert_int16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_SConvert_Rint16_sat(int16 x)
{
  return __clc_convert_int16_sat(x);
}

#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_SConvert_Rlong(int x)
{
  return __clc_convert_long(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_SConvert_Rlong_sat(int x)
{
  return __clc_convert_long_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_SConvert_Rlong2(int2 x)
{
  return __clc_convert_long2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_SConvert_Rlong2_sat(int2 x)
{
  return __clc_convert_long2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_SConvert_Rlong3(int3 x)
{
  return __clc_convert_long3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_SConvert_Rlong3_sat(int3 x)
{
  return __clc_convert_long3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_SConvert_Rlong4(int4 x)
{
  return __clc_convert_long4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_SConvert_Rlong4_sat(int4 x)
{
  return __clc_convert_long4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_SConvert_Rlong8(int8 x)
{
  return __clc_convert_long8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_SConvert_Rlong8_sat(int8 x)
{
  return __clc_convert_long8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_SConvert_Rlong16(int16 x)
{
  return __clc_convert_long16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_SConvert_Rlong16_sat(int16 x)
{
  return __clc_convert_long16_sat(x);
}

#endif
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_SConvert_Rchar(uint x)
{
  return __clc_convert_schar(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_SatConvertUToS_Rchar(uint x)
{
  return __clc_convert_schar_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_SConvert_Rchar_sat(uint x)
{
  return __clc_convert_schar_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_SConvert_Rchar2(uint2 x)
{
  return __clc_convert_schar2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_SatConvertUToS_Rchar2(uint2 x)
{
  return __clc_convert_schar2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_SConvert_Rchar2_sat(uint2 x)
{
  return __clc_convert_schar2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_SConvert_Rchar3(uint3 x)
{
  return __clc_convert_schar3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_SatConvertUToS_Rchar3(uint3 x)
{
  return __clc_convert_schar3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_SConvert_Rchar3_sat(uint3 x)
{
  return __clc_convert_schar3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_SConvert_Rchar4(uint4 x)
{
  return __clc_convert_schar4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_SatConvertUToS_Rchar4(uint4 x)
{
  return __clc_convert_schar4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_SConvert_Rchar4_sat(uint4 x)
{
  return __clc_convert_schar4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_SConvert_Rchar8(uint8 x)
{
  return __clc_convert_schar8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_SatConvertUToS_Rchar8(uint8 x)
{
  return __clc_convert_schar8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_SConvert_Rchar8_sat(uint8 x)
{
  return __clc_convert_schar8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_SConvert_Rchar16(uint16 x)
{
  return __clc_convert_schar16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_SatConvertUToS_Rchar16(uint16 x)
{
  return __clc_convert_schar16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_SConvert_Rchar16_sat(uint16 x)
{
  return __clc_convert_schar16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_SConvert_Rshort(uint x)
{
  return __clc_convert_short(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_SatConvertUToS_Rshort(uint x)
{
  return __clc_convert_short_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_SConvert_Rshort_sat(uint x)
{
  return __clc_convert_short_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_SConvert_Rshort2(uint2 x)
{
  return __clc_convert_short2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_SatConvertUToS_Rshort2(uint2 x)
{
  return __clc_convert_short2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_SConvert_Rshort2_sat(uint2 x)
{
  return __clc_convert_short2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_SConvert_Rshort3(uint3 x)
{
  return __clc_convert_short3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_SatConvertUToS_Rshort3(uint3 x)
{
  return __clc_convert_short3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_SConvert_Rshort3_sat(uint3 x)
{
  return __clc_convert_short3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_SConvert_Rshort4(uint4 x)
{
  return __clc_convert_short4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_SatConvertUToS_Rshort4(uint4 x)
{
  return __clc_convert_short4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_SConvert_Rshort4_sat(uint4 x)
{
  return __clc_convert_short4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_SConvert_Rshort8(uint8 x)
{
  return __clc_convert_short8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_SatConvertUToS_Rshort8(uint8 x)
{
  return __clc_convert_short8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_SConvert_Rshort8_sat(uint8 x)
{
  return __clc_convert_short8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_SConvert_Rshort16(uint16 x)
{
  return __clc_convert_short16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_SatConvertUToS_Rshort16(uint16 x)
{
  return __clc_convert_short16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_SConvert_Rshort16_sat(uint16 x)
{
  return __clc_convert_short16_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_SConvert_Rint(uint x)
{
  return __clc_convert_int(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_SatConvertUToS_Rint(uint x)
{
  return __clc_convert_int_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_SConvert_Rint2(uint2 x)
{
  return __clc_convert_int2(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_SatConvertUToS_Rint2(uint2 x)
{
  return __clc_convert_int2_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_SConvert_Rint3(uint3 x)
{
  return __clc_convert_int3(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_SatConvertUToS_Rint3(uint3 x)
{
  return __clc_convert_int3_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_SConvert_Rint4(uint4 x)
{
  return __clc_convert_int4(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_SatConvertUToS_Rint4(uint4 x)
{
  return __clc_convert_int4_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_SConvert_Rint8(uint8 x)
{
  return __clc_convert_int8(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_SatConvertUToS_Rint8(uint8 x)
{
  return __clc_convert_int8_sat(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_SConvert_Rint16(uint16 x)
{
  return __clc_convert_int16(x);
}

_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_SatConvertUToS_Rint16(uint16 x)
{
  return __clc_convert_int16_sat(x);
}

#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_SConvert_Rlong(uint x)
{
  return __clc_convert_long(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_SatConvertUToS_Rlong(uint x)
{
  return __clc_convert_long_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_SConvert_Rlong_sat(uint x)
{
  return __clc_convert_long_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_SConvert_Rlong2(uint2 x)
{
  return __clc_convert_long2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_SatConvertUToS_Rlong2(uint2 x)
{
  return __clc_convert_long2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_SConvert_Rlong2_sat(uint2 x)
{
  return __clc_convert_long2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_SConvert_Rlong3(uint3 x)
{
  return __clc_convert_long3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_SatConvertUToS_Rlong3(uint3 x)
{
  return __clc_convert_long3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_SConvert_Rlong3_sat(uint3 x)
{
  return __clc_convert_long3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_SConvert_Rlong4(uint4 x)
{
  return __clc_convert_long4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_SatConvertUToS_Rlong4(uint4 x)
{
  return __clc_convert_long4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_SConvert_Rlong4_sat(uint4 x)
{
  return __clc_convert_long4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_SConvert_Rlong8(uint8 x)
{
  return __clc_convert_long8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_SatConvertUToS_Rlong8(uint8 x)
{
  return __clc_convert_long8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_SConvert_Rlong8_sat(uint8 x)
{
  return __clc_convert_long8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_SConvert_Rlong16(uint16 x)
{
  return __clc_convert_long16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_SatConvertUToS_Rlong16(uint16 x)
{
  return __clc_convert_long16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_SConvert_Rlong16_sat(uint16 x)
{
  return __clc_convert_long16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_SConvert_Rchar(long x)
{
  return __clc_convert_schar(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_SConvert_Rchar_sat(long x)
{
  return __clc_convert_schar_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_SConvert_Rchar2(long2 x)
{
  return __clc_convert_schar2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_SConvert_Rchar2_sat(long2 x)
{
  return __clc_convert_schar2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_SConvert_Rchar3(long3 x)
{
  return __clc_convert_schar3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_SConvert_Rchar3_sat(long3 x)
{
  return __clc_convert_schar3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_SConvert_Rchar4(long4 x)
{
  return __clc_convert_schar4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_SConvert_Rchar4_sat(long4 x)
{
  return __clc_convert_schar4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_SConvert_Rchar8(long8 x)
{
  return __clc_convert_schar8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_SConvert_Rchar8_sat(long8 x)
{
  return __clc_convert_schar8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_SConvert_Rchar16(long16 x)
{
  return __clc_convert_schar16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_SConvert_Rchar16_sat(long16 x)
{
  return __clc_convert_schar16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_SConvert_Rshort(long x)
{
  return __clc_convert_short(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_SConvert_Rshort_sat(long x)
{
  return __clc_convert_short_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_SConvert_Rshort2(long2 x)
{
  return __clc_convert_short2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_SConvert_Rshort2_sat(long2 x)
{
  return __clc_convert_short2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_SConvert_Rshort3(long3 x)
{
  return __clc_convert_short3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_SConvert_Rshort3_sat(long3 x)
{
  return __clc_convert_short3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_SConvert_Rshort4(long4 x)
{
  return __clc_convert_short4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_SConvert_Rshort4_sat(long4 x)
{
  return __clc_convert_short4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_SConvert_Rshort8(long8 x)
{
  return __clc_convert_short8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_SConvert_Rshort8_sat(long8 x)
{
  return __clc_convert_short8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_SConvert_Rshort16(long16 x)
{
  return __clc_convert_short16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_SConvert_Rshort16_sat(long16 x)
{
  return __clc_convert_short16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_SConvert_Rint(long x)
{
  return __clc_convert_int(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_SConvert_Rint_sat(long x)
{
  return __clc_convert_int_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_SConvert_Rint2(long2 x)
{
  return __clc_convert_int2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_SConvert_Rint2_sat(long2 x)
{
  return __clc_convert_int2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_SConvert_Rint3(long3 x)
{
  return __clc_convert_int3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_SConvert_Rint3_sat(long3 x)
{
  return __clc_convert_int3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_SConvert_Rint4(long4 x)
{
  return __clc_convert_int4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_SConvert_Rint4_sat(long4 x)
{
  return __clc_convert_int4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_SConvert_Rint8(long8 x)
{
  return __clc_convert_int8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_SConvert_Rint8_sat(long8 x)
{
  return __clc_convert_int8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_SConvert_Rint16(long16 x)
{
  return __clc_convert_int16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_SConvert_Rint16_sat(long16 x)
{
  return __clc_convert_int16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_SConvert_Rlong(long x)
{
  return __clc_convert_long(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_SConvert_Rlong_sat(long x)
{
  return __clc_convert_long_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_SConvert_Rlong2(long2 x)
{
  return __clc_convert_long2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_SConvert_Rlong2_sat(long2 x)
{
  return __clc_convert_long2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_SConvert_Rlong3(long3 x)
{
  return __clc_convert_long3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_SConvert_Rlong3_sat(long3 x)
{
  return __clc_convert_long3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_SConvert_Rlong4(long4 x)
{
  return __clc_convert_long4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_SConvert_Rlong4_sat(long4 x)
{
  return __clc_convert_long4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_SConvert_Rlong8(long8 x)
{
  return __clc_convert_long8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_SConvert_Rlong8_sat(long8 x)
{
  return __clc_convert_long8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_SConvert_Rlong16(long16 x)
{
  return __clc_convert_long16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_SConvert_Rlong16_sat(long16 x)
{
  return __clc_convert_long16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_SConvert_Rchar(ulong x)
{
  return __clc_convert_schar(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_SatConvertUToS_Rchar(ulong x)
{
  return __clc_convert_schar_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar __spirv_SConvert_Rchar_sat(ulong x)
{
  return __clc_convert_schar_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_SConvert_Rchar2(ulong2 x)
{
  return __clc_convert_schar2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_SatConvertUToS_Rchar2(ulong2 x)
{
  return __clc_convert_schar2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar2 __spirv_SConvert_Rchar2_sat(ulong2 x)
{
  return __clc_convert_schar2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_SConvert_Rchar3(ulong3 x)
{
  return __clc_convert_schar3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_SatConvertUToS_Rchar3(ulong3 x)
{
  return __clc_convert_schar3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar3 __spirv_SConvert_Rchar3_sat(ulong3 x)
{
  return __clc_convert_schar3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_SConvert_Rchar4(ulong4 x)
{
  return __clc_convert_schar4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_SatConvertUToS_Rchar4(ulong4 x)
{
  return __clc_convert_schar4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar4 __spirv_SConvert_Rchar4_sat(ulong4 x)
{
  return __clc_convert_schar4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_SConvert_Rchar8(ulong8 x)
{
  return __clc_convert_schar8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_SatConvertUToS_Rchar8(ulong8 x)
{
  return __clc_convert_schar8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar8 __spirv_SConvert_Rchar8_sat(ulong8 x)
{
  return __clc_convert_schar8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_SConvert_Rchar16(ulong16 x)
{
  return __clc_convert_schar16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_SatConvertUToS_Rchar16(ulong16 x)
{
  return __clc_convert_schar16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
schar16 __spirv_SConvert_Rchar16_sat(ulong16 x)
{
  return __clc_convert_schar16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_SConvert_Rshort(ulong x)
{
  return __clc_convert_short(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_SatConvertUToS_Rshort(ulong x)
{
  return __clc_convert_short_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short __spirv_SConvert_Rshort_sat(ulong x)
{
  return __clc_convert_short_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_SConvert_Rshort2(ulong2 x)
{
  return __clc_convert_short2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_SatConvertUToS_Rshort2(ulong2 x)
{
  return __clc_convert_short2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short2 __spirv_SConvert_Rshort2_sat(ulong2 x)
{
  return __clc_convert_short2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_SConvert_Rshort3(ulong3 x)
{
  return __clc_convert_short3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_SatConvertUToS_Rshort3(ulong3 x)
{
  return __clc_convert_short3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short3 __spirv_SConvert_Rshort3_sat(ulong3 x)
{
  return __clc_convert_short3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_SConvert_Rshort4(ulong4 x)
{
  return __clc_convert_short4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_SatConvertUToS_Rshort4(ulong4 x)
{
  return __clc_convert_short4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short4 __spirv_SConvert_Rshort4_sat(ulong4 x)
{
  return __clc_convert_short4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_SConvert_Rshort8(ulong8 x)
{
  return __clc_convert_short8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_SatConvertUToS_Rshort8(ulong8 x)
{
  return __clc_convert_short8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short8 __spirv_SConvert_Rshort8_sat(ulong8 x)
{
  return __clc_convert_short8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_SConvert_Rshort16(ulong16 x)
{
  return __clc_convert_short16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_SatConvertUToS_Rshort16(ulong16 x)
{
  return __clc_convert_short16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
short16 __spirv_SConvert_Rshort16_sat(ulong16 x)
{
  return __clc_convert_short16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_SConvert_Rint(ulong x)
{
  return __clc_convert_int(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_SatConvertUToS_Rint(ulong x)
{
  return __clc_convert_int_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int __spirv_SConvert_Rint_sat(ulong x)
{
  return __clc_convert_int_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_SConvert_Rint2(ulong2 x)
{
  return __clc_convert_int2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_SatConvertUToS_Rint2(ulong2 x)
{
  return __clc_convert_int2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int2 __spirv_SConvert_Rint2_sat(ulong2 x)
{
  return __clc_convert_int2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_SConvert_Rint3(ulong3 x)
{
  return __clc_convert_int3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_SatConvertUToS_Rint3(ulong3 x)
{
  return __clc_convert_int3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int3 __spirv_SConvert_Rint3_sat(ulong3 x)
{
  return __clc_convert_int3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_SConvert_Rint4(ulong4 x)
{
  return __clc_convert_int4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_SatConvertUToS_Rint4(ulong4 x)
{
  return __clc_convert_int4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int4 __spirv_SConvert_Rint4_sat(ulong4 x)
{
  return __clc_convert_int4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_SConvert_Rint8(ulong8 x)
{
  return __clc_convert_int8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_SatConvertUToS_Rint8(ulong8 x)
{
  return __clc_convert_int8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int8 __spirv_SConvert_Rint8_sat(ulong8 x)
{
  return __clc_convert_int8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_SConvert_Rint16(ulong16 x)
{
  return __clc_convert_int16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_SatConvertUToS_Rint16(ulong16 x)
{
  return __clc_convert_int16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
int16 __spirv_SConvert_Rint16_sat(ulong16 x)
{
  return __clc_convert_int16_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_SConvert_Rlong(ulong x)
{
  return __clc_convert_long(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long __spirv_SatConvertUToS_Rlong(ulong x)
{
  return __clc_convert_long_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_SConvert_Rlong2(ulong2 x)
{
  return __clc_convert_long2(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long2 __spirv_SatConvertUToS_Rlong2(ulong2 x)
{
  return __clc_convert_long2_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_SConvert_Rlong3(ulong3 x)
{
  return __clc_convert_long3(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long3 __spirv_SatConvertUToS_Rlong3(ulong3 x)
{
  return __clc_convert_long3_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_SConvert_Rlong4(ulong4 x)
{
  return __clc_convert_long4(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long4 __spirv_SatConvertUToS_Rlong4(ulong4 x)
{
  return __clc_convert_long4_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_SConvert_Rlong8(ulong8 x)
{
  return __clc_convert_long8(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long8 __spirv_SatConvertUToS_Rlong8(ulong8 x)
{
  return __clc_convert_long8_sat(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_SConvert_Rlong16(ulong16 x)
{
  return __clc_convert_long16(x);
}

#endif
#if defined cles_khr_int64 || !defined(__EMBEDDED_PROFILE__)
_CLC_DEF _CLC_OVERLOAD _CLC_CONSTFN
long16 __spirv_SatConvertUToS_Rlong16(ulong16 x)
{
  return __clc_convert_long16_sat(x);
}

#endif
